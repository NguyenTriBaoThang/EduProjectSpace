// <auto-generated />
using System;
using EduProject_TADProgrammer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduProject_TADProgrammer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250512135601_InitialIdentityModel")]
    partial class InitialIdentityModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.AISuggestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("AISuggestions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Đề xuất thêm tính năng phân tích dữ liệu thời gian thực.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5855),
                            Type = "PROJECT",
                            UserId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Điểm nội dung có thể tăng nếu bổ sung tài liệu tham khảo.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5859),
                            ProjectId = 1L,
                            Type = "GRADE"
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Nên tích hợp tính năng chat vào hệ thống quản lý.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5862),
                            Type = "PROJECT",
                            UserId = 8L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Điểm trình bày có thể tăng nếu cải thiện bố cục.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5866),
                            ProjectId = 2L,
                            Type = "GRADE"
                        },
                        new
                        {
                            Id = 5L,
                            Content = "Đề xuất thêm cổng thanh toán cho website thương mại.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5869),
                            Type = "PROJECT",
                            UserId = 9L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Điểm nội dung có thể tăng nếu bổ sung ví dụ thực tế.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5872),
                            ProjectId = 3L,
                            Type = "GRADE"
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Nên tích hợp công cụ phân tích dữ liệu mạnh hơn.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5876),
                            Type = "PROJECT",
                            UserId = 10L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "Điểm phân tích có thể tăng nếu cải thiện độ chính xác.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5879),
                            ProjectId = 4L,
                            Type = "GRADE"
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Đề xuất thêm chế độ offline cho app quản lý học tập.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5882),
                            Type = "PROJECT",
                            UserId = 11L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "Điểm thực hành có thể tăng nếu bổ sung tính năng.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5885),
                            ProjectId = 5L,
                            Type = "GRADE"
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Nên tăng cường bảo mật cho hệ thống IoT.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5889),
                            Type = "PROJECT",
                            UserId = 12L
                        },
                        new
                        {
                            Id = 12L,
                            Content = "Điểm bảo mật có thể tăng nếu kiểm tra kỹ hơn.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5892),
                            ProjectId = 6L,
                            Type = "GRADE"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Backup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.ToTable("Backups");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6137),
                            FilePath = "backups/db_backup_2025_02_01.sql"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 11, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6140),
                            FilePath = "backups/db_backup_2025_02_02.sql"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 10, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6144),
                            FilePath = "backups/db_backup_2025_02_03.sql"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 9, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6146),
                            FilePath = "backups/db_backup_2025_02_04.sql"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 8, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6148),
                            FilePath = "backups/db_backup_2025_02_05.sql"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 7, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6151),
                            FilePath = "backups/db_backup_2025_02_06.sql"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 6, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6153),
                            FilePath = "backups/db_backup_2025_02_07.sql"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 5, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6155),
                            FilePath = "backups/db_backup_2025_02_08.sql"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 4, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6165),
                            FilePath = "backups/db_backup_2025_02_09.sql"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 3, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6167),
                            FilePath = "backups/db_backup_2025_02_10.sql"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 2, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6169),
                            FilePath = "backups/db_backup_2025_02_11.sql"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 1, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6171),
                            FilePath = "backups/db_backup_2025_02_12.sql"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Calendar", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Calendars");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5725),
                            EndTime = new DateTime(2025, 2, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            StartTime = new DateTime(2025, 2, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5729),
                            EndTime = new DateTime(2025, 2, 28, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Nộp bài",
                            GroupId = 1L,
                            StartTime = new DateTime(2025, 2, 28, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5733),
                            EndTime = new DateTime(2025, 2, 17, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 2L,
                            StartTime = new DateTime(2025, 2, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 8L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5737),
                            EndTime = new DateTime(2025, 3, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Bảo vệ đồ án",
                            StartTime = new DateTime(2025, 3, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 9L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5740),
                            EndTime = new DateTime(2025, 2, 24, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 3L,
                            StartTime = new DateTime(2025, 2, 24, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 10L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5744),
                            EndTime = new DateTime(2025, 2, 25, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Hạn nộp nhiệm vụ",
                            StartTime = new DateTime(2025, 2, 25, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            UserId = 11L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5747),
                            EndTime = new DateTime(2025, 3, 3, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 4L,
                            StartTime = new DateTime(2025, 3, 3, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 12L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5750),
                            EndTime = new DateTime(2025, 3, 5, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Bảo vệ đồ án",
                            StartTime = new DateTime(2025, 3, 5, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 13L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5753),
                            EndTime = new DateTime(2025, 3, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 5L,
                            StartTime = new DateTime(2025, 3, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 7L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5759),
                            EndTime = new DateTime(2025, 3, 15, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Hạn nộp nhiệm vụ",
                            StartTime = new DateTime(2025, 3, 15, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            UserId = 8L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5762),
                            EndTime = new DateTime(2025, 3, 17, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 6L,
                            StartTime = new DateTime(2025, 3, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 9L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5765),
                            EndTime = new DateTime(2025, 3, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Bảo vệ đồ án",
                            StartTime = new DateTime(2025, 3, 20, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 10L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.CodeRun", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float?>("PlagiarismScore")
                        .HasColumnType("real");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubmissionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId");

                    b.ToTable("CodeRuns");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Code = "print('Hello World')",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2805),
                            Language = "Python",
                            PlagiarismScore = 0.1f,
                            Result = "Success",
                            SubmissionId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Code = "public class Main { public static void main(String[] args) { System.out.println('Hello'); } }",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2809),
                            Language = "Java",
                            PlagiarismScore = 0.2f,
                            Result = "Success",
                            SubmissionId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Code = "console.log('Hello World');",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2813),
                            Language = "JavaScript",
                            PlagiarismScore = 0.15f,
                            Result = "Success",
                            SubmissionId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Code = "print('Error Test')",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2815),
                            Language = "Python",
                            PlagiarismScore = 0.3f,
                            Result = "Failed",
                            SubmissionId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Code = "public class Test { public static void main(String[] args) { System.out.println('Test'); } }",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2818),
                            Language = "Java",
                            PlagiarismScore = 0.1f,
                            Result = "Success",
                            SubmissionId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            Code = "print('IoT Security')",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2821),
                            Language = "Python",
                            PlagiarismScore = 0.05f,
                            Result = "Success",
                            SubmissionId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            Code = "console.log('Social Media');",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2823),
                            Language = "JavaScript",
                            PlagiarismScore = 0.2f,
                            Result = "Success",
                            SubmissionId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            Code = "print('Language Learning')",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2826),
                            Language = "Python",
                            PlagiarismScore = 0.4f,
                            Result = "Failed",
                            SubmissionId = 8L
                        },
                        new
                        {
                            Id = 9L,
                            Code = "public class Warehouse { public static void main(String[] args) { System.out.println('Warehouse'); } }",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2828),
                            Language = "Java",
                            PlagiarismScore = 0.1f,
                            Result = "Success",
                            SubmissionId = 9L
                        },
                        new
                        {
                            Id = 10L,
                            Code = "print('Booking System')",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2831),
                            Language = "Python",
                            PlagiarismScore = 0.05f,
                            Result = "Success",
                            SubmissionId = 10L
                        },
                        new
                        {
                            Id = 11L,
                            Code = "console.log('HR System');",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2834),
                            Language = "JavaScript",
                            PlagiarismScore = 0.15f,
                            Result = "Success",
                            SubmissionId = 11L
                        },
                        new
                        {
                            Id = 12L,
                            Code = "print('Group Study')",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2836),
                            Language = "Python",
                            PlagiarismScore = 0.3f,
                            Result = "Failed",
                            SubmissionId = 12L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.CommitteeMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CommitteeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("LecturerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CommitteeId");

                    b.HasIndex("LecturerId");

                    b.ToTable("CommitteeMembers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CommitteeId = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3719),
                            LecturerId = 2L,
                            Role = "Chủ tịch"
                        },
                        new
                        {
                            Id = 2L,
                            CommitteeId = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3722),
                            LecturerId = 4L,
                            Role = "Thành viên"
                        },
                        new
                        {
                            Id = 3L,
                            CommitteeId = 2L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3725),
                            LecturerId = 3L,
                            Role = "Chủ tịch"
                        },
                        new
                        {
                            Id = 4L,
                            CommitteeId = 2L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3727),
                            LecturerId = 5L,
                            Role = "Thư ký"
                        },
                        new
                        {
                            Id = 5L,
                            CommitteeId = 3L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3729),
                            LecturerId = 6L,
                            Role = "Thành viên"
                        },
                        new
                        {
                            Id = 6L,
                            CommitteeId = 4L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3732),
                            LecturerId = 14L,
                            Role = "Chủ tịch"
                        },
                        new
                        {
                            Id = 7L,
                            CommitteeId = 5L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3734),
                            LecturerId = 15L,
                            Role = "Thư ký"
                        },
                        new
                        {
                            Id = 8L,
                            CommitteeId = 6L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3736),
                            LecturerId = 4L,
                            Role = "Thành viên"
                        },
                        new
                        {
                            Id = 9L,
                            CommitteeId = 7L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3738),
                            LecturerId = 5L,
                            Role = "Chủ tịch"
                        },
                        new
                        {
                            Id = 10L,
                            CommitteeId = 8L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3740),
                            LecturerId = 6L,
                            Role = "Thư ký"
                        },
                        new
                        {
                            Id = 11L,
                            CommitteeId = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3742),
                            LecturerId = 14L,
                            Role = "Thành viên"
                        },
                        new
                        {
                            Id = 12L,
                            CommitteeId = 10L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3745),
                            LecturerId = 15L,
                            Role = "Chủ tịch"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1518),
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp CNTT",
                            Semester = "HK2-2025",
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1523),
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở CNTT",
                            Semester = "HK2-2025",
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1526),
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp KTPM",
                            Semester = "HK2-2025",
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1528),
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở KTPM",
                            Semester = "HK2-2025",
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1531),
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp ATTT",
                            Semester = "HK2-2025",
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1534),
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở ATTT",
                            Semester = "HK2-2025",
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1536),
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp KHMT",
                            Semester = "HK2-2025",
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1540),
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở KHMT",
                            Semester = "HK2-2025",
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1542),
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp HTTT",
                            Semester = "HK2-2025",
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1545),
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở HTTT",
                            Semester = "HK2-2025",
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1547),
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp CNPM",
                            Semester = "HK2-2025",
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1550),
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở CNPM",
                            Semester = "HK2-2025",
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.DefenseCommittee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("DefenseCommittees");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3628),
                            Name = "Hội đồng 1"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3632),
                            Name = "Hội đồng 2"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3634),
                            Name = "Hội đồng 3"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3636),
                            Name = "Hội đồng 4"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3638),
                            Name = "Hội đồng 5"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3640),
                            Name = "Hội đồng 6"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3642),
                            Name = "Hội đồng 7"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3644),
                            Name = "Hội đồng 8"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3645),
                            Name = "Hội đồng 9"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3648),
                            Name = "Hội đồng 10"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3650),
                            Name = "Hội đồng 11"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3651),
                            Name = "Hội đồng 12"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.DefenseSchedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("DefenseSchedules");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3806),
                            EndTime = new DateTime(2025, 3, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 1L,
                            Room = "A101",
                            StartTime = new DateTime(2025, 3, 1, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3809),
                            EndTime = new DateTime(2025, 3, 2, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 2L,
                            Room = "A102",
                            StartTime = new DateTime(2025, 3, 2, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3812),
                            EndTime = new DateTime(2025, 3, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 3L,
                            Room = "A103",
                            StartTime = new DateTime(2025, 3, 3, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3815),
                            EndTime = new DateTime(2025, 3, 4, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 4L,
                            Room = "A104",
                            StartTime = new DateTime(2025, 3, 4, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3818),
                            EndTime = new DateTime(2025, 3, 5, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 5L,
                            Room = "A105",
                            StartTime = new DateTime(2025, 3, 5, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3820),
                            EndTime = new DateTime(2025, 3, 6, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 6L,
                            Room = "A106",
                            StartTime = new DateTime(2025, 3, 6, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3823),
                            EndTime = new DateTime(2025, 3, 7, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 7L,
                            Room = "A107",
                            StartTime = new DateTime(2025, 3, 7, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3826),
                            EndTime = new DateTime(2025, 3, 8, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 8L,
                            Room = "A108",
                            StartTime = new DateTime(2025, 3, 8, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3828),
                            EndTime = new DateTime(2025, 3, 9, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 9L,
                            Room = "A109",
                            StartTime = new DateTime(2025, 3, 9, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3831),
                            EndTime = new DateTime(2025, 3, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 10L,
                            Room = "A110",
                            StartTime = new DateTime(2025, 3, 10, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3834),
                            EndTime = new DateTime(2025, 3, 11, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 11L,
                            Room = "A111",
                            StartTime = new DateTime(2025, 3, 11, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3837),
                            EndTime = new DateTime(2025, 3, 12, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 12L,
                            Room = "A112",
                            StartTime = new DateTime(2025, 3, 12, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Discussion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int>("Votes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Discussions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Có ai biết cách tích hợp AI vào ứng dụng y tế?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4902),
                            ProjectId = 1L,
                            Title = "Hỏi về AI trong y tế",
                            UserId = 7L,
                            Votes = 5
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Nên dùng framework nào cho giao diện?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4905),
                            Title = "Thắc mắc về thiết kế giao diện",
                            UserId = 9L,
                            Votes = 3
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Nên dùng cổng thanh toán nào?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4907),
                            ProjectId = 3L,
                            Title = "Thanh toán thương mại điện tử",
                            UserId = 10L,
                            Votes = 4
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Có công cụ nào tốt để phân tích dữ liệu?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4910),
                            ProjectId = 4L,
                            Title = "Phân tích dữ liệu",
                            UserId = 12L,
                            Votes = 2
                        },
                        new
                        {
                            Id = 5L,
                            Content = "App quản lý học tập nên có tính năng gì?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4912),
                            ProjectId = 5L,
                            Title = "Quản lý học tập",
                            UserId = 7L,
                            Votes = 6
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Làm sao để tăng cường bảo mật IoT?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4915),
                            ProjectId = 6L,
                            Title = "Bảo mật IoT",
                            UserId = 8L,
                            Votes = 3
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Có công cụ nào miễn phí để phân tích?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4918),
                            ProjectId = 7L,
                            Title = "Phân tích mạng xã hội",
                            UserId = 9L,
                            Votes = 5
                        },
                        new
                        {
                            Id = 8L,
                            Content = "App học ngoại ngữ nên có gì đặc biệt?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4920),
                            ProjectId = 8L,
                            Title = "Học ngoại ngữ",
                            UserId = 10L,
                            Votes = 4
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Hệ thống quản lý kho nên tự động hóa thế nào?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4923),
                            ProjectId = 9L,
                            Title = "Quản lý kho",
                            UserId = 11L,
                            Votes = 3
                        },
                        new
                        {
                            Id = 10L,
                            Content = "App đặt lịch nên có thông báo không?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4926),
                            ProjectId = 10L,
                            Title = "Đặt lịch khám bệnh",
                            UserId = 12L,
                            Votes = 5
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Hệ thống nhân sự cần báo cáo gì?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4929),
                            ProjectId = 11L,
                            Title = "Quản lý nhân sự",
                            UserId = 13L,
                            Votes = 2
                        },
                        new
                        {
                            Id = 12L,
                            Content = "App học nhóm nên có tính năng gì?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4931),
                            ProjectId = 12L,
                            Title = "Học tập nhóm",
                            UserId = 7L,
                            Votes = 4
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.FAQ", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.ToTable("FAQs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Answer = "Đăng nhập, vào mục Nộp bài, tải file lên.",
                            Category = "Nộp bài",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4533),
                            Question = "Làm thế nào để nộp đồ án?"
                        },
                        new
                        {
                            Id = 2L,
                            Answer = "Xem lịch bảo vệ trong mục Lịch.",
                            Category = "Bảo vệ",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4649),
                            Question = "Thời gian bảo vệ là khi nào?"
                        },
                        new
                        {
                            Id = 3L,
                            Answer = "Vào mục Nhóm, gửi yêu cầu tham gia.",
                            Category = "Nhóm",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4652),
                            Question = "Làm sao để tham gia nhóm?"
                        },
                        new
                        {
                            Id = 4L,
                            Answer = "Vào mục Điểm số, chọn đồ án của bạn.",
                            Category = "Điểm số",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4654),
                            Question = "Cách xem điểm đồ án?"
                        },
                        new
                        {
                            Id = 5L,
                            Answer = "Vào mục Phản hồi, điền nội dung.",
                            Category = "Phản hồi",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4656),
                            Question = "Làm sao để gửi phản hồi?"
                        },
                        new
                        {
                            Id = 6L,
                            Answer = "Có, AI hỗ trợ gợi ý và đánh giá.",
                            Category = "Hỗ trợ",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4662),
                            Question = "Hệ thống có hỗ trợ AI không?"
                        },
                        new
                        {
                            Id = 7L,
                            Answer = "Vào mục Nhiệm vụ, nhấn Tạo mới.",
                            Category = "Nhiệm vụ",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4664),
                            Question = "Làm sao để tạo nhiệm vụ?"
                        },
                        new
                        {
                            Id = 8L,
                            Answer = "Vào mục Tài liệu, chọn tài liệu và tải.",
                            Category = "Tài liệu",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4666),
                            Question = "Cách tải tài liệu tham khảo?"
                        },
                        new
                        {
                            Id = 9L,
                            Answer = "Vào mục Lịch, chọn lịch họp nhóm.",
                            Category = "Họp nhóm",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4668),
                            Question = "Làm sao để xem lịch họp?"
                        },
                        new
                        {
                            Id = 10L,
                            Answer = "Vào mục Điểm số, chọn Kháng nghị.",
                            Category = "Kháng nghị",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4670),
                            Question = "Cách gửi kháng nghị điểm?"
                        },
                        new
                        {
                            Id = 11L,
                            Answer = "Có, vào mục Chat để trò chuyện nhóm.",
                            Category = "Chat",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4672),
                            Question = "Hệ thống có hỗ trợ chat không?"
                        },
                        new
                        {
                            Id = 12L,
                            Answer = "Vào Cài đặt, chọn Đổi mật khẩu.",
                            Category = "Tài khoản",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4675),
                            Question = "Làm sao để đổi mật khẩu?"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Feedback", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("LecturerId")
                        .HasColumnType("bigint");

                    b.Property<long>("SubmissionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LecturerId");

                    b.HasIndex("SubmissionId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Cần cải thiện phần phân tích dữ liệu.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2711),
                            LecturerId = 4L,
                            SubmissionId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Tốt, nhưng cần bổ sung tài liệu tham khảo.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2714),
                            LecturerId = 5L,
                            SubmissionId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Cần chỉnh sửa bố cục báo cáo.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2716),
                            LecturerId = 6L,
                            SubmissionId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Bài nộp chưa đạt yêu cầu.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2718),
                            LecturerId = 14L,
                            SubmissionId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Content = "Cần bổ sung hình ảnh minh họa.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2721),
                            LecturerId = 15L,
                            SubmissionId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Tốt, nội dung đầy đủ.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2723),
                            LecturerId = 4L,
                            SubmissionId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Cần cải thiện phần kết luận.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2725),
                            LecturerId = 5L,
                            SubmissionId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "Bài nộp không đúng định dạng.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2727),
                            LecturerId = 6L,
                            SubmissionId = 8L
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Cần bổ sung tài liệu tham khảo.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2729),
                            LecturerId = 14L,
                            SubmissionId = 9L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "Tốt, đạt yêu cầu.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2731),
                            LecturerId = 15L,
                            SubmissionId = 10L
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Cần chỉnh sửa phần giới thiệu.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2734),
                            LecturerId = 4L,
                            SubmissionId = 11L
                        },
                        new
                        {
                            Id = 12L,
                            Content = "Bài nộp không đạt, cần làm lại.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2736),
                            LecturerId = 5L,
                            SubmissionId = 12L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.FeedbackSurvey", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FeedbackSurveys");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Hệ thống dễ sử dụng.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5050),
                            Rating = 4,
                            UserId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Cần cải thiện tốc độ tải.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5053),
                            Rating = 3,
                            UserId = 8L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Giao diện thân thiện.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5056),
                            Rating = 5,
                            UserId = 9L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Chat nhóm bị lỗi.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5058),
                            Rating = 2,
                            UserId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            Content = "Hỗ trợ tốt.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5060),
                            Rating = 4,
                            UserId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Cần thêm hướng dẫn sử dụng.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5062),
                            Rating = 3,
                            UserId = 12L
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Tính năng quản lý nhóm tốt.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5065),
                            Rating = 5,
                            UserId = 13L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "Thông báo không hoạt động.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5067),
                            Rating = 2,
                            UserId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Rất hài lòng với hệ thống.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5069),
                            Rating = 5,
                            UserId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "Cần cải thiện tốc độ.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5071),
                            Rating = 3,
                            UserId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Giao diện đẹp.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5073),
                            Rating = 4,
                            UserId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            Content = "Hệ thống ổn định.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5075),
                            Rating = 4,
                            UserId = 11L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Grade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CriteriaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("GradedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GradedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CriteriaId");

                    b.HasIndex("GradedBy");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("StudentId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Comment = "Nội dung tốt.",
                            CriteriaId = 1L,
                            GradedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3094),
                            GradedBy = 4L,
                            GroupId = 1L,
                            ProjectId = 1L,
                            Score = 8.5f
                        },
                        new
                        {
                            Id = 2L,
                            Comment = "Trình bày rõ ràng.",
                            CriteriaId = 2L,
                            GradedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3097),
                            GradedBy = 4L,
                            GroupId = 1L,
                            ProjectId = 1L,
                            Score = 8f
                        },
                        new
                        {
                            Id = 3L,
                            Comment = "Nội dung ổn.",
                            CriteriaId = 1L,
                            GradedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3101),
                            GradedBy = 5L,
                            GroupId = 2L,
                            ProjectId = 2L,
                            Score = 7.5f
                        },
                        new
                        {
                            Id = 4L,
                            Comment = "Nội dung tốt.",
                            CriteriaId = 4L,
                            GradedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3104),
                            GradedBy = 6L,
                            GroupId = 3L,
                            ProjectId = 3L,
                            Score = 8f
                        },
                        new
                        {
                            Id = 5L,
                            Comment = "Cần cải thiện.",
                            CriteriaId = 6L,
                            GradedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3107),
                            GradedBy = 14L,
                            GroupId = 4L,
                            ProjectId = 4L,
                            Score = 7f
                        },
                        new
                        {
                            Id = 6L,
                            Comment = "Thực hành tốt.",
                            CriteriaId = 7L,
                            GradedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3110),
                            GradedBy = 15L,
                            GroupId = 5L,
                            ProjectId = 5L,
                            Score = 8.5f
                        },
                        new
                        {
                            Id = 7L,
                            Comment = "Bảo mật tốt.",
                            CriteriaId = 8L,
                            GradedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3112),
                            GradedBy = 4L,
                            GroupId = 6L,
                            ProjectId = 6L,
                            Score = 9f
                        },
                        new
                        {
                            Id = 8L,
                            Comment = "Phân tích chưa sâu.",
                            CriteriaId = 9L,
                            GradedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3116),
                            GradedBy = 5L,
                            GroupId = 7L,
                            ProjectId = 7L,
                            Score = 6.5f
                        },
                        new
                        {
                            Id = 9L,
                            Comment = "Ứng dụng ổn.",
                            CriteriaId = 10L,
                            GradedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3118),
                            GradedBy = 6L,
                            GroupId = 8L,
                            ProjectId = 8L,
                            Score = 8f
                        },
                        new
                        {
                            Id = 10L,
                            Comment = "Quản lý tốt.",
                            CriteriaId = 11L,
                            GradedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3121),
                            GradedBy = 14L,
                            GroupId = 9L,
                            ProjectId = 9L,
                            Score = 7.5f
                        },
                        new
                        {
                            Id = 11L,
                            Comment = "Tiện ích cao.",
                            CriteriaId = 12L,
                            GradedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3123),
                            GradedBy = 15L,
                            GroupId = 10L,
                            ProjectId = 10L,
                            Score = 8f
                        },
                        new
                        {
                            Id = 12L,
                            Comment = "Hiệu quả ổn.",
                            CriteriaId = 13L,
                            GradedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3126),
                            GradedBy = 4L,
                            GroupId = 11L,
                            ProjectId = 11L,
                            Score = 7f
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeAppeal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GradeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("StudentId");

                    b.ToTable("GradeAppeals");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3530),
                            GradeId = 1L,
                            Reason = "Điểm nội dung chưa hợp lý.",
                            Status = "PENDING",
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3533),
                            GradeId = 2L,
                            Reason = "Điểm trình bày thấp.",
                            Response = "Đã điều chỉnh điểm.",
                            Status = "APPROVED",
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3536),
                            GradeId = 3L,
                            Reason = "Điểm nội dung không hợp lý.",
                            Response = "Điểm đã hợp lý.",
                            Status = "REJECTED",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3538),
                            GradeId = 4L,
                            Reason = "Điểm nội dung thấp.",
                            Status = "PENDING",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3541),
                            GradeId = 5L,
                            Reason = "Cần xem lại điểm.",
                            Status = "PENDING",
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3544),
                            GradeId = 6L,
                            Reason = "Điểm thực hành chưa đúng.",
                            Response = "Đã điều chỉnh.",
                            Status = "APPROVED",
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3546),
                            GradeId = 7L,
                            Reason = "Điểm bảo mật không hợp lý.",
                            Response = "Điểm hợp lý.",
                            Status = "REJECTED",
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3549),
                            GradeId = 8L,
                            Reason = "Điểm phân tích thấp.",
                            Status = "PENDING",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3551),
                            GradeId = 9L,
                            Reason = "Điểm ứng dụng chưa đúng.",
                            Response = "Đã điều chỉnh.",
                            Status = "APPROVED",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3554),
                            GradeId = 10L,
                            Reason = "Điểm quản lý chưa hợp lý.",
                            Response = "Điểm hợp lý.",
                            Status = "REJECTED",
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3557),
                            GradeId = 11L,
                            Reason = "Điểm tiện ích thấp.",
                            Status = "PENDING",
                            StudentId = 12L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeCriteria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("GradeCriteria");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CourseId = 1L,
                            Description = "Chất lượng nội dung đồ án.",
                            Name = "Nội dung",
                            Weight = 0.4f
                        },
                        new
                        {
                            Id = 2L,
                            CourseId = 1L,
                            Description = "Cách trình bày báo cáo.",
                            Name = "Trình bày",
                            Weight = 0.3f
                        },
                        new
                        {
                            Id = 3L,
                            CourseId = 1L,
                            Description = "Kỹ năng bảo vệ.",
                            Name = "Bảo vệ",
                            Weight = 0.3f
                        },
                        new
                        {
                            Id = 4L,
                            CourseId = 2L,
                            Description = "Chất lượng nội dung đồ án cơ sở.",
                            Name = "Nội dung",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 5L,
                            CourseId = 2L,
                            Description = "Kỹ năng thực hành.",
                            Name = "Thực hành",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 6L,
                            CourseId = 3L,
                            Description = "Chất lượng nội dung đồ án KTPM.",
                            Name = "Nội dung",
                            Weight = 0.4f
                        },
                        new
                        {
                            Id = 7L,
                            CourseId = 4L,
                            Description = "Kỹ năng thực hành KTPM.",
                            Name = "Thực hành",
                            Weight = 0.6f
                        },
                        new
                        {
                            Id = 8L,
                            CourseId = 5L,
                            Description = "Mức độ bảo mật.",
                            Name = "Bảo mật",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 9L,
                            CourseId = 6L,
                            Description = "Kỹ năng phân tích dữ liệu.",
                            Name = "Phân tích",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 10L,
                            CourseId = 7L,
                            Description = "Ứng dụng thực tế.",
                            Name = "Ứng dụng",
                            Weight = 0.4f
                        },
                        new
                        {
                            Id = 11L,
                            CourseId = 8L,
                            Description = "Khả năng quản lý kho.",
                            Name = "Quản lý",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 12L,
                            CourseId = 9L,
                            Description = "Tính tiện ích của app.",
                            Name = "Tiện ích",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 13L,
                            CourseId = 10L,
                            Description = "Hiệu quả quản lý nhân sự.",
                            Name = "Hiệu quả",
                            Weight = 0.5f
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("GradeId")
                        .HasColumnType("bigint");

                    b.Property<long>("LecturerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("LecturerId");

                    b.ToTable("GradeLogs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3322),
                            Details = "Tạo điểm cho nhóm 1.",
                            GradeId = 1L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 2L,
                            Action = "UPDATE",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3326),
                            Details = "Cập nhật điểm nhóm 1.",
                            GradeId = 1L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 3L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3328),
                            Details = "Tạo điểm cho nhóm 1.",
                            GradeId = 2L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 4L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3331),
                            Details = "Tạo điểm cho nhóm 2.",
                            GradeId = 3L,
                            LecturerId = 5L
                        },
                        new
                        {
                            Id = 5L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3334),
                            Details = "Tạo điểm cho nhóm 3.",
                            GradeId = 4L,
                            LecturerId = 6L
                        },
                        new
                        {
                            Id = 6L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3336),
                            Details = "Tạo điểm cho nhóm 4.",
                            GradeId = 5L,
                            LecturerId = 14L
                        },
                        new
                        {
                            Id = 7L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3338),
                            Details = "Tạo điểm cho nhóm 5.",
                            GradeId = 6L,
                            LecturerId = 15L
                        },
                        new
                        {
                            Id = 8L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3340),
                            Details = "Tạo điểm cho nhóm 6.",
                            GradeId = 7L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 9L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3343),
                            Details = "Tạo điểm cho nhóm 7.",
                            GradeId = 8L,
                            LecturerId = 5L
                        },
                        new
                        {
                            Id = 10L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3345),
                            Details = "Tạo điểm cho nhóm 8.",
                            GradeId = 9L,
                            LecturerId = 6L
                        },
                        new
                        {
                            Id = 11L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3347),
                            Details = "Tạo điểm cho nhóm 9.",
                            GradeId = 10L,
                            LecturerId = 14L
                        },
                        new
                        {
                            Id = 12L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3349),
                            Details = "Tạo điểm cho nhóm 10.",
                            GradeId = 11L,
                            LecturerId = 15L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeSchedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<long>("LecturerId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LecturerId");

                    b.HasIndex("ProjectId");

                    b.ToTable("GradeSchedules");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3414),
                            Deadline = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 4L,
                            ProjectId = 1L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3417),
                            Deadline = new DateTime(2025, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 5L,
                            ProjectId = 2L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3420),
                            Deadline = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 6L,
                            ProjectId = 3L,
                            Status = "COMPLETED"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3423),
                            Deadline = new DateTime(2025, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 14L,
                            ProjectId = 4L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3425),
                            Deadline = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 15L,
                            ProjectId = 5L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3428),
                            Deadline = new DateTime(2025, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 4L,
                            ProjectId = 6L,
                            Status = "COMPLETED"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3431),
                            Deadline = new DateTime(2025, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 5L,
                            ProjectId = 7L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3433),
                            Deadline = new DateTime(2025, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 6L,
                            ProjectId = 8L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3436),
                            Deadline = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 14L,
                            ProjectId = 9L,
                            Status = "COMPLETED"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3438),
                            Deadline = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 15L,
                            ProjectId = 10L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3441),
                            Deadline = new DateTime(2025, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 4L,
                            ProjectId = 11L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3443),
                            Deadline = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 5L,
                            ProjectId = 12L,
                            Status = "COMPLETED"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GradeId")
                        .HasColumnType("bigint");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.ToTable("GradeVersions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 11, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3222),
                            GradeId = 1L,
                            Score = 8f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 2L,
                            Comment = "Cập nhật điểm.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3227),
                            GradeId = 1L,
                            Score = 8.5f,
                            VersionNumber = 2
                        },
                        new
                        {
                            Id = 3L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3229),
                            GradeId = 2L,
                            Score = 8f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 4L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3232),
                            GradeId = 3L,
                            Score = 7.5f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 5L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3234),
                            GradeId = 4L,
                            Score = 8f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 6L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3237),
                            GradeId = 5L,
                            Score = 7f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 7L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3239),
                            GradeId = 6L,
                            Score = 8.5f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 8L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3242),
                            GradeId = 7L,
                            Score = 9f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 9L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3244),
                            GradeId = 8L,
                            Score = 6.5f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 10L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3247),
                            GradeId = 9L,
                            Score = 8f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 11L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3249),
                            GradeId = 10L,
                            Score = 7.5f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 12L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3251),
                            GradeId = 11L,
                            Score = 8f,
                            VersionNumber = 1
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1964),
                            Name = "Nhóm 1",
                            ProjectId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1968),
                            Name = "Nhóm 2",
                            ProjectId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1970),
                            Name = "Nhóm 3",
                            ProjectId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1971),
                            Name = "Nhóm 4",
                            ProjectId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1973),
                            Name = "Nhóm 5",
                            ProjectId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1975),
                            Name = "Nhóm 6",
                            ProjectId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1977),
                            Name = "Nhóm 7",
                            ProjectId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1980),
                            Name = "Nhóm 8",
                            ProjectId = 8L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1982),
                            Name = "Nhóm 9",
                            ProjectId = 9L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1983),
                            Name = "Nhóm 10",
                            ProjectId = 10L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1985),
                            Name = "Nhóm 11",
                            ProjectId = 11L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1987),
                            Name = "Nhóm 12",
                            ProjectId = 12L
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1989),
                            Name = "Nhóm 13",
                            ProjectId = 13L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GroupMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudentId");

                    b.ToTable("GroupMembers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            GroupId = 1L,
                            JoinedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2058),
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            GroupId = 1L,
                            JoinedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2061),
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 3L,
                            GroupId = 2L,
                            JoinedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2063),
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 4L,
                            GroupId = 3L,
                            JoinedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2064),
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            GroupId = 3L,
                            JoinedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2066),
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            GroupId = 4L,
                            JoinedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2068),
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 7L,
                            GroupId = 4L,
                            JoinedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2071),
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 8L,
                            GroupId = 5L,
                            JoinedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2072),
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            GroupId = 6L,
                            JoinedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2074),
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            GroupId = 7L,
                            JoinedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2076),
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            GroupId = 8L,
                            JoinedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2078),
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            GroupId = 9L,
                            JoinedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2083),
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 13L,
                            GroupId = 10L,
                            JoinedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2086),
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 14L,
                            GroupId = 11L,
                            JoinedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2088),
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 15L,
                            GroupId = 12L,
                            JoinedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2090),
                            StudentId = 7L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GroupRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudentId");

                    b.ToTable("GroupRequests");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2187),
                            GroupId = 1L,
                            Status = "PENDING",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2191),
                            GroupId = 2L,
                            Status = "APPROVED",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2193),
                            GroupId = 3L,
                            Status = "REJECTED",
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2195),
                            GroupId = 4L,
                            Status = "PENDING",
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2197),
                            GroupId = 5L,
                            Status = "APPROVED",
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2200),
                            GroupId = 6L,
                            Status = "PENDING",
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2201),
                            GroupId = 7L,
                            Status = "APPROVED",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2204),
                            GroupId = 8L,
                            Status = "REJECTED",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2206),
                            GroupId = 9L,
                            Status = "PENDING",
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2208),
                            GroupId = 10L,
                            Status = "APPROVED",
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2210),
                            GroupId = 11L,
                            Status = "PENDING",
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2212),
                            GroupId = 12L,
                            Status = "REJECTED",
                            StudentId = 7L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Logs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Action = "LOGIN",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6018),
                            Details = "Admin đăng nhập hệ thống.",
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Action = "SUBMISSION",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6021),
                            Details = "Sinh viên nộp bài cho đồ án 1.",
                            UserId = 7L
                        },
                        new
                        {
                            Id = 3L,
                            Action = "JOIN_GROUP",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6025),
                            Details = "Sinh viên tham gia Nhóm 1.",
                            UserId = 8L
                        },
                        new
                        {
                            Id = 4L,
                            Action = "SEND_MESSAGE",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6028),
                            Details = "Gửi tin nhắn trong Nhóm 2.",
                            UserId = 9L
                        },
                        new
                        {
                            Id = 5L,
                            Action = "SUBMISSION",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6031),
                            Details = "Sinh viên nộp bài cho đồ án 3.",
                            UserId = 10L
                        },
                        new
                        {
                            Id = 6L,
                            Action = "CREATE_TASK",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6034),
                            Details = "Tạo nhiệm vụ mới trong đồ án 4.",
                            UserId = 11L
                        },
                        new
                        {
                            Id = 7L,
                            Action = "JOIN_GROUP",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6037),
                            Details = "Sinh viên tham gia Nhóm 5.",
                            UserId = 12L
                        },
                        new
                        {
                            Id = 8L,
                            Action = "SEND_MESSAGE",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6040),
                            Details = "Gửi tin nhắn trong Nhóm 6.",
                            UserId = 13L
                        },
                        new
                        {
                            Id = 9L,
                            Action = "GRADE",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6045),
                            Details = "Chấm điểm cho Nhóm 1.",
                            UserId = 4L
                        },
                        new
                        {
                            Id = 10L,
                            Action = "GRADE",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6047),
                            Details = "Chấm điểm cho Nhóm 2.",
                            UserId = 5L
                        },
                        new
                        {
                            Id = 11L,
                            Action = "CREATE_PROJECT",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6049),
                            Details = "Tạo đồ án mới.",
                            UserId = 6L
                        },
                        new
                        {
                            Id = 12L,
                            Action = "UPDATE_PROJECT",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(6051),
                            Details = "Cập nhật đồ án 4.",
                            UserId = 14L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Meeting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("GroupId");

                    b.ToTable("Meetings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3918),
                            CreatedBy = 4L,
                            EndTime = new DateTime(2025, 2, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 1L,
                            Location = "Phòng B101",
                            StartTime = new DateTime(2025, 2, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 1"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3922),
                            CreatedBy = 5L,
                            EndTime = new DateTime(2025, 2, 17, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 2L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 2, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 2"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3933),
                            CreatedBy = 6L,
                            EndTime = new DateTime(2025, 2, 24, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 3L,
                            Location = "Phòng B102",
                            StartTime = new DateTime(2025, 2, 24, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 3"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3936),
                            CreatedBy = 14L,
                            EndTime = new DateTime(2025, 3, 3, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 4L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 3, 3, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 4"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3939),
                            CreatedBy = 15L,
                            EndTime = new DateTime(2025, 3, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 5L,
                            Location = "Phòng B103",
                            StartTime = new DateTime(2025, 3, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 5"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3942),
                            CreatedBy = 4L,
                            EndTime = new DateTime(2025, 3, 17, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 6L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 3, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 6"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3945),
                            CreatedBy = 5L,
                            EndTime = new DateTime(2025, 3, 24, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 7L,
                            Location = "Phòng B104",
                            StartTime = new DateTime(2025, 3, 24, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 7"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3948),
                            CreatedBy = 6L,
                            EndTime = new DateTime(2025, 3, 31, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 8L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 3, 31, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 8"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3951),
                            CreatedBy = 14L,
                            EndTime = new DateTime(2025, 4, 7, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 9L,
                            Location = "Phòng B105",
                            StartTime = new DateTime(2025, 4, 7, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 9"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3954),
                            CreatedBy = 15L,
                            EndTime = new DateTime(2025, 4, 14, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 10L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 4, 14, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 10"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3957),
                            CreatedBy = 4L,
                            EndTime = new DateTime(2025, 4, 21, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 11L,
                            Location = "Phòng B106",
                            StartTime = new DateTime(2025, 4, 21, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 11"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(3962),
                            CreatedBy = 5L,
                            EndTime = new DateTime(2025, 4, 28, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 12L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 4, 28, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 12"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.MeetingRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("MeetingId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MeetingId");

                    b.ToTable("MeetingRecords");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4030),
                            FilePath = "records/meeting1.mp3",
                            MeetingId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4033),
                            FilePath = "records/meeting2.mp4",
                            MeetingId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4035),
                            FilePath = "records/meeting3.mp3",
                            MeetingId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4037),
                            FilePath = "records/meeting4.mp4",
                            MeetingId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4039),
                            FilePath = "records/meeting5.mp3",
                            MeetingId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4041),
                            FilePath = "records/meeting6.mp4",
                            MeetingId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4043),
                            FilePath = "records/meeting7.mp3",
                            MeetingId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4045),
                            FilePath = "records/meeting8.mp4",
                            MeetingId = 8L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4047),
                            FilePath = "records/meeting9.mp3",
                            MeetingId = 9L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4049),
                            FilePath = "records/meeting10.mp4",
                            MeetingId = 10L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4064),
                            FilePath = "records/meeting11.mp3",
                            MeetingId = 11L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4066),
                            FilePath = "records/meeting12.mp4",
                            MeetingId = 12L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("RecipientType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Hạn nộp là 28/02/2025.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4136),
                            RecipientType = "user",
                            Status = "SENT",
                            Title = "Hạn nộp đồ án",
                            Type = "WEB",
                            UserId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Bài nộp đã được phản hồi.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4139),
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Phản hồi bài nộp",
                            Type = "EMAIL",
                            UserId = 9L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Bạn được thêm vào Nhóm 1.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4143),
                            GroupId = 1L,
                            RecipientType = "user",
                            Status = "SENT",
                            Title = "Nhóm mới",
                            Type = "WEB",
                            UserId = 8L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Họp nhóm vào 14:00, 03/03/2025.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4146),
                            GroupId = 3L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Họp nhóm",
                            Type = "WEB",
                            UserId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            Content = "Đồ án Nhóm 4 cần chỉnh sửa.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4149),
                            GroupId = 4L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Phản hồi đồ án",
                            Type = "WEB",
                            UserId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Bạn được giao nhiệm vụ mới.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4152),
                            GroupId = 5L,
                            RecipientType = "user",
                            Status = "SENT",
                            Title = "Nhiệm vụ mới",
                            Type = "WEB",
                            UserId = 12L
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Điểm của Nhóm 6 đã được cập nhật.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4155),
                            GroupId = 6L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Cập nhật điểm",
                            Type = "WEB",
                            UserId = 13L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "Hạn chót nhiệm vụ là 10/03/2025.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4157),
                            GroupId = 7L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Hạn chót nhiệm vụ",
                            Type = "WEB",
                            UserId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Lịch bảo vệ: 08/03/2025, A108.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4160),
                            GroupId = 8L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Lịch bảo vệ",
                            Type = "WEB",
                            UserId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "Nhóm 9 nhận phản hồi mới.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4163),
                            GroupId = 9L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Phản hồi mới",
                            Type = "WEB",
                            UserId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Đồ án Nhóm 10 đã được phê duyệt.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4165),
                            GroupId = 10L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Cập nhật đồ án",
                            Type = "WEB",
                            UserId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            Content = "Nhiệm vụ của Nhóm 11 đã hoàn thành.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4168),
                            GroupId = 11L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Nhiệm vụ hoàn thành",
                            Type = "WEB",
                            UserId = 11L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.PeerReview", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("RevieweeId")
                        .HasColumnType("bigint");

                    b.Property<long>("ReviewerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("RevieweeId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("PeerReviews");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Comment = "Làm việc tốt.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4233),
                            GroupId = 1L,
                            RevieweeId = 8L,
                            ReviewerId = 7L,
                            Score = 8
                        },
                        new
                        {
                            Id = 2L,
                            Comment = "Cần cải thiện giao tiếp.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4237),
                            GroupId = 1L,
                            RevieweeId = 7L,
                            ReviewerId = 8L,
                            Score = 7
                        },
                        new
                        {
                            Id = 3L,
                            Comment = "Hỗ trợ nhóm tốt.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4239),
                            GroupId = 3L,
                            RevieweeId = 11L,
                            ReviewerId = 10L,
                            Score = 9
                        },
                        new
                        {
                            Id = 4L,
                            Comment = "Cần chủ động hơn.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4242),
                            GroupId = 3L,
                            RevieweeId = 10L,
                            ReviewerId = 11L,
                            Score = 6
                        },
                        new
                        {
                            Id = 5L,
                            Comment = "Đóng góp tích cực.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4244),
                            GroupId = 4L,
                            RevieweeId = 13L,
                            ReviewerId = 12L,
                            Score = 8
                        },
                        new
                        {
                            Id = 6L,
                            Comment = "Cần cải thiện kỹ năng.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4247),
                            GroupId = 4L,
                            RevieweeId = 12L,
                            ReviewerId = 13L,
                            Score = 7
                        },
                        new
                        {
                            Id = 7L,
                            Comment = "Làm việc hiệu quả.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4249),
                            GroupId = 5L,
                            RevieweeId = 8L,
                            ReviewerId = 7L,
                            Score = 9
                        },
                        new
                        {
                            Id = 8L,
                            Comment = "Cần tập trung hơn.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4252),
                            GroupId = 6L,
                            RevieweeId = 9L,
                            ReviewerId = 8L,
                            Score = 6
                        },
                        new
                        {
                            Id = 9L,
                            Comment = "Hợp tác tốt.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4254),
                            GroupId = 7L,
                            RevieweeId = 10L,
                            ReviewerId = 9L,
                            Score = 8
                        },
                        new
                        {
                            Id = 10L,
                            Comment = "Cần cải thiện thái độ.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4256),
                            GroupId = 8L,
                            RevieweeId = 11L,
                            ReviewerId = 10L,
                            Score = 7
                        },
                        new
                        {
                            Id = 11L,
                            Comment = "Đóng góp lớn.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4259),
                            GroupId = 9L,
                            RevieweeId = 12L,
                            ReviewerId = 11L,
                            Score = 9
                        },
                        new
                        {
                            Id = 12L,
                            Comment = "Làm việc ổn.",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4261),
                            GroupId = 10L,
                            RevieweeId = 13L,
                            ReviewerId = 12L,
                            Score = 8
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LecturerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("LecturerId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CourseId = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1707),
                            Description = "Phát triển ứng dụng AI hỗ trợ chẩn đoán bệnh.",
                            LecturerId = 4L,
                            Status = "NOT_SUBMITTED",
                            Title = "Ứng dụng AI trong y tế",
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1709)
                        },
                        new
                        {
                            Id = 2L,
                            CourseId = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1713),
                            Description = "Xây dựng hệ thống quản lý đồ án sinh viên.",
                            LecturerId = 5L,
                            Status = "NOT_SUBMITTED",
                            Title = "Hệ thống quản lý đồ án",
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1714)
                        },
                        new
                        {
                            Id = 3L,
                            CourseId = 2L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1717),
                            Description = "Phát triển website bán hàng trực tuyến.",
                            LecturerId = 6L,
                            Status = "NOT_SUBMITTED",
                            Title = "Ứng dụng thương mại điện tử",
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1718)
                        },
                        new
                        {
                            Id = 4L,
                            CourseId = 3L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1721),
                            Description = "Xây dựng hệ thống phân tích dữ liệu thời gian thực.",
                            LecturerId = 14L,
                            Status = "NOT_SUBMITTED",
                            Title = "Phân tích dữ liệu thời gian thực",
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1721)
                        },
                        new
                        {
                            Id = 5L,
                            CourseId = 4L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1724),
                            Description = "Phát triển app quản lý học tập cho sinh viên.",
                            LecturerId = 15L,
                            Status = "SUBMITTED",
                            Title = "Ứng dụng quản lý học tập",
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1725)
                        },
                        new
                        {
                            Id = 6L,
                            CourseId = 5L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1728),
                            Description = "Xây dựng giải pháp bảo mật cho thiết bị IoT.",
                            LecturerId = 4L,
                            Status = "SUBMITTED",
                            Title = "Hệ thống bảo mật IoT",
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1728)
                        },
                        new
                        {
                            Id = 7L,
                            CourseId = 6L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1731),
                            Description = "Phân tích hành vi người dùng trên mạng xã hội.",
                            LecturerId = 5L,
                            Status = "SUBMITTED",
                            Title = "Phân tích dữ liệu mạng xã hội",
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1732)
                        },
                        new
                        {
                            Id = 8L,
                            CourseId = 7L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1735),
                            Description = "Phát triển app học ngoại ngữ với AI.",
                            LecturerId = 6L,
                            Status = "SUBMITTED",
                            Title = "Ứng dụng học ngoại ngữ",
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1735)
                        },
                        new
                        {
                            Id = 9L,
                            CourseId = 8L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1738),
                            Description = "Xây dựng hệ thống quản lý kho hàng tự động.",
                            LecturerId = 14L,
                            Status = "GRADED",
                            Title = "Hệ thống quản lý kho",
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1739)
                        },
                        new
                        {
                            Id = 10L,
                            CourseId = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1742),
                            Description = "Phát triển app đặt lịch khám bệnh trực tuyến.",
                            LecturerId = 15L,
                            Status = "GRADED",
                            Title = "Ứng dụng đặt lịch khám bệnh",
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1742)
                        },
                        new
                        {
                            Id = 11L,
                            CourseId = 10L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1745),
                            Description = "Xây dựng hệ thống quản lý nhân sự cho doanh nghiệp.",
                            LecturerId = 4L,
                            Status = "GRADED",
                            Title = "Hệ thống quản lý nhân sự",
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1745)
                        },
                        new
                        {
                            Id = 12L,
                            CourseId = 11L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1748),
                            Description = "Phát triển app hỗ trợ học tập nhóm.",
                            LecturerId = 5L,
                            Status = "GRADED",
                            Title = "Ứng dụng học tập nhóm",
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1749)
                        },
                        new
                        {
                            Id = 13L,
                            CourseId = 12L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1751),
                            Description = "Xây dựng hệ thống phân tích tài chính cá nhân.",
                            LecturerId = 6L,
                            Status = "GRADED",
                            Title = "Hệ thống phân tích tài chính",
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1752)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.ProjectVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectVersions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1833),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 1L,
                            Title = "Ứng dụng AI trong y tế",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 11, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1837),
                            Description = "Cập nhật mô tả.",
                            ProjectId = 1L,
                            Title = "Ứng dụng AI trong y tế (Cập nhật)",
                            VersionNumber = 2
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1847),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 2L,
                            Title = "Hệ thống quản lý đồ án",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1849),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 3L,
                            Title = "Ứng dụng thương mại điện tử",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1852),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 4L,
                            Title = "Phân tích dữ liệu thời gian thực",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1854),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 5L,
                            Title = "Ứng dụng quản lý học tập",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1856),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 6L,
                            Title = "Hệ thống bảo mật IoT",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1859),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 7L,
                            Title = "Phân tích dữ liệu mạng xã hội",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1861),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 8L,
                            Title = "Ứng dụng học ngoại ngữ",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1863),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 9L,
                            Title = "Hệ thống quản lý kho",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1865),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 10L,
                            Title = "Ứng dụng đặt lịch khám bệnh",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1867),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 11L,
                            Title = "Hệ thống quản lý nhân sự",
                            VersionNumber = 1
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ProjectId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Ứng dụng AI của bạn giải quyết vấn đề gì?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4436),
                            CreatedBy = 4L,
                            ProjectId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Hệ thống quản lý đồ án có những tính năng gì?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4439),
                            CreatedBy = 5L,
                            ProjectId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Website thương mại điện tử có tích hợp thanh toán không?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4441),
                            CreatedBy = 6L,
                            ProjectId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Phân tích dữ liệu thời gian thực dùng công nghệ gì?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4444),
                            CreatedBy = 14L,
                            ProjectId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Content = "App quản lý học tập có hỗ trợ offline không?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4446),
                            CreatedBy = 15L,
                            ProjectId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Hệ thống bảo mật IoT đã kiểm tra lỗ hổng chưa?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4448),
                            CreatedBy = 4L,
                            ProjectId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Phân tích dữ liệu mạng xã hội có chính xác không?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4450),
                            CreatedBy = 5L,
                            ProjectId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "App học ngoại ngữ hỗ trợ bao nhiêu ngôn ngữ?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4452),
                            CreatedBy = 6L,
                            ProjectId = 8L
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Hệ thống quản lý kho có tự động hóa không?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4455),
                            CreatedBy = 14L,
                            ProjectId = 9L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "App đặt lịch khám bệnh có thông báo nhắc nhở không?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4457),
                            CreatedBy = 15L,
                            ProjectId = 10L
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Hệ thống quản lý nhân sự có báo cáo không?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4459),
                            CreatedBy = 4L,
                            ProjectId = 11L
                        },
                        new
                        {
                            Id = 12L,
                            Content = "App học tập nhóm có tính năng chat không?",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4461),
                            CreatedBy = 5L,
                            ProjectId = 12L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Resource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4327),
                            CreatedBy = 4L,
                            FilePath = "resources/ai_doc.pdf",
                            ProjectId = 1L,
                            Title = "Tài liệu AI",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4330),
                            CreatedBy = 5L,
                            FilePath = "resources/report_template.docx",
                            GroupId = 2L,
                            Title = "Mẫu báo cáo",
                            Type = "SAMPLE"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4333),
                            CreatedBy = 6L,
                            FilePath = "resources/ecommerce.pdf",
                            ProjectId = 3L,
                            Title = "Tài liệu thương mại điện tử",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4336),
                            CreatedBy = 14L,
                            FilePath = "resources/data_analysis.pdf",
                            ProjectId = 4L,
                            Title = "Hướng dẫn phân tích dữ liệu",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4339),
                            CreatedBy = 15L,
                            FilePath = "resources/study_management.pdf",
                            ProjectId = 5L,
                            Title = "Tài liệu quản lý học tập",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4342),
                            CreatedBy = 4L,
                            FilePath = "resources/iot_security.pdf",
                            ProjectId = 6L,
                            Title = "Tài liệu bảo mật IoT",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4345),
                            CreatedBy = 5L,
                            FilePath = "resources/social_media_analysis.pdf",
                            ProjectId = 7L,
                            Title = "Phân tích mạng xã hội",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4357),
                            CreatedBy = 6L,
                            FilePath = "resources/language_learning.pdf",
                            ProjectId = 8L,
                            Title = "Tài liệu học ngoại ngữ",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4360),
                            CreatedBy = 14L,
                            FilePath = "resources/warehouse_management.pdf",
                            ProjectId = 9L,
                            Title = "Hướng dẫn quản lý kho",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4363),
                            CreatedBy = 15L,
                            FilePath = "resources/booking_system.pdf",
                            ProjectId = 10L,
                            Title = "Tài liệu đặt lịch khám bệnh",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4365),
                            CreatedBy = 4L,
                            FilePath = "resources/hr_management.pdf",
                            ProjectId = 11L,
                            Title = "Tài liệu quản lý nhân sự",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(4368),
                            CreatedBy = 5L,
                            FilePath = "resources/group_study.pdf",
                            ProjectId = 12L,
                            Title = "Hướng dẫn học tập nhóm",
                            Type = "REFERENCE"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "Quản trị viên",
                            Name = "ROLE_ADMIN"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "Giảng viên hướng dẫn",
                            Name = "ROLE_LECTURER_GUIDE"
                        },
                        new
                        {
                            Id = 3L,
                            Description = "Sinh viên",
                            Name = "ROLE_STUDENT"
                        },
                        new
                        {
                            Id = 4L,
                            Description = "Trưởng bộ môn",
                            Name = "ROLE_HEAD"
                        },
                        new
                        {
                            Id = 5L,
                            Description = "Giảng viên phản biện",
                            Name = "ROLE_LECTURER_REVIEW"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SkillAssessment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("Skill")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("SkillAssessments");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5147),
                            Score = 8,
                            Skill = "Lập trình Python",
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5150),
                            Score = 7,
                            Skill = "Thiết kế giao diện",
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5153),
                            Score = 9,
                            Skill = "Phân tích dữ liệu",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5155),
                            Score = 6,
                            Skill = "Lập trình Java",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5157),
                            Score = 8,
                            Skill = "Quản lý dự án",
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5159),
                            Score = 7,
                            Skill = "Kiểm thử phần mềm",
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5161),
                            Score = 9,
                            Skill = "Lập trình JavaScript",
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5163),
                            Score = 6,
                            Skill = "Giao tiếp nhóm",
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5165),
                            Score = 8,
                            Skill = "Thiết kế cơ sở dữ liệu",
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5167),
                            Score = 7,
                            Skill = "Tích hợp API",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5169),
                            Score = 8,
                            Skill = "Lập trình C#",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5171),
                            Score = 9,
                            Skill = "Phân tích yêu cầu",
                            StudentId = 11L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Submission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Submissions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FilePath = "submissions/dt001.pdf",
                            GroupId = 1L,
                            ProjectId = 1L,
                            Status = "SUBMITTED",
                            SubmittedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2491),
                            Version = 1
                        },
                        new
                        {
                            Id = 2L,
                            FilePath = "submissions/dt002.pdf",
                            GroupId = 2L,
                            ProjectId = 2L,
                            Status = "VALIDATED",
                            SubmittedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2494),
                            Version = 1
                        },
                        new
                        {
                            Id = 3L,
                            FilePath = "submissions/dt003.pdf",
                            GroupId = 3L,
                            ProjectId = 3L,
                            Status = "SUBMITTED",
                            SubmittedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2497),
                            Version = 1
                        },
                        new
                        {
                            Id = 4L,
                            FilePath = "submissions/dt004.pdf",
                            GroupId = 4L,
                            ProjectId = 4L,
                            Status = "REJECTED",
                            SubmittedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2500),
                            Version = 1
                        },
                        new
                        {
                            Id = 5L,
                            FilePath = "submissions/dt005.pdf",
                            GroupId = 5L,
                            ProjectId = 5L,
                            Status = "SUBMITTED",
                            SubmittedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2502),
                            Version = 1
                        },
                        new
                        {
                            Id = 6L,
                            FilePath = "submissions/dt006.pdf",
                            GroupId = 6L,
                            ProjectId = 6L,
                            Status = "VALIDATED",
                            SubmittedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2504),
                            Version = 1
                        },
                        new
                        {
                            Id = 7L,
                            FilePath = "submissions/dt007.pdf",
                            GroupId = 7L,
                            ProjectId = 7L,
                            Status = "SUBMITTED",
                            SubmittedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2507),
                            Version = 1
                        },
                        new
                        {
                            Id = 8L,
                            FilePath = "submissions/dt008.pdf",
                            GroupId = 8L,
                            ProjectId = 8L,
                            Status = "REJECTED",
                            SubmittedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2509),
                            Version = 1
                        },
                        new
                        {
                            Id = 9L,
                            FilePath = "submissions/dt009.pdf",
                            GroupId = 9L,
                            ProjectId = 9L,
                            Status = "SUBMITTED",
                            SubmittedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2512),
                            Version = 1
                        },
                        new
                        {
                            Id = 10L,
                            FilePath = "submissions/dt010.pdf",
                            GroupId = 10L,
                            ProjectId = 10L,
                            Status = "VALIDATED",
                            SubmittedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2514),
                            Version = 1
                        },
                        new
                        {
                            Id = 11L,
                            FilePath = "submissions/dt011.pdf",
                            GroupId = 11L,
                            ProjectId = 11L,
                            Status = "SUBMITTED",
                            SubmittedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2517),
                            Version = 1
                        },
                        new
                        {
                            Id = 12L,
                            FilePath = "submissions/dt012.pdf",
                            GroupId = 12L,
                            ProjectId = 12L,
                            Status = "REJECTED",
                            SubmittedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2519),
                            Version = 1
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SubmissionVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("SubmissionId")
                        .HasColumnType("bigint");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId");

                    b.ToTable("SubmissionVersions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2602),
                            FilePath = "submissions/dt001_v1.pdf",
                            SubmissionId = 1L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 11, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2605),
                            FilePath = "submissions/dt001_v2.pdf",
                            SubmissionId = 1L,
                            VersionNumber = 2
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2610),
                            FilePath = "submissions/dt002_v1.pdf",
                            SubmissionId = 2L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2612),
                            FilePath = "submissions/dt003_v1.pdf",
                            SubmissionId = 3L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2615),
                            FilePath = "submissions/dt004_v1.pdf",
                            SubmissionId = 4L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2617),
                            FilePath = "submissions/dt005_v1.pdf",
                            SubmissionId = 5L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2620),
                            FilePath = "submissions/dt006_v1.pdf",
                            SubmissionId = 6L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2622),
                            FilePath = "submissions/dt007_v1.pdf",
                            SubmissionId = 7L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2624),
                            FilePath = "submissions/dt008_v1.pdf",
                            SubmissionId = 8L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2627),
                            FilePath = "submissions/dt009_v1.pdf",
                            SubmissionId = 9L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2629),
                            FilePath = "submissions/dt010_v1.pdf",
                            SubmissionId = 10L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2631),
                            FilePath = "submissions/dt011_v1.pdf",
                            SubmissionId = 11L,
                            VersionNumber = 1
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SystemConfig", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("SystemConfigs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5382),
                            Key = "LOGO_URL",
                            Value = "images/hutech_logo.png"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5385),
                            Key = "THEME_COLOR",
                            Value = "#1976d2"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5387),
                            Key = "EMAIL_SERVER",
                            Value = "smtp.hutech.edu.vn"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5389),
                            Key = "MAX_FILE_SIZE",
                            Value = "10485760"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5391),
                            Key = "DEFAULT_LANGUAGE",
                            Value = "vi"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5393),
                            Key = "NOTIFICATION_DURATION",
                            Value = "7"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5527),
                            Key = "SESSION_TIMEOUT",
                            Value = "30"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5530),
                            Key = "BACKUP_FREQUENCY",
                            Value = "daily"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5532),
                            Key = "ALLOWED_FILE_TYPES",
                            Value = "pdf,docx,zip"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5534),
                            Key = "TIMEZONE",
                            Value = "Asia/Ho_Chi_Minh"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5536),
                            Key = "MAX_LOGIN_ATTEMPTS",
                            Value = "5"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5538),
                            Key = "CHAT_ENABLED",
                            Value = "true"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SystemMetric", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MetricType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("MetricType");

                    b.ToTable("SystemMetrics");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5619),
                            MetricType = "CPU",
                            Value = 45.5f
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5622),
                            MetricType = "RAM",
                            Value = 60f
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5624),
                            MetricType = "DISK",
                            Value = 75f
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5627),
                            MetricType = "NETWORK",
                            Value = 120.5f
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 12, 12, 55, 58, 206, DateTimeKind.Utc).AddTicks(5629),
                            MetricType = "CPU",
                            Value = 50f
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 12, 12, 55, 58, 206, DateTimeKind.Utc).AddTicks(5633),
                            MetricType = "RAM",
                            Value = 65f
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 12, 12, 55, 58, 206, DateTimeKind.Utc).AddTicks(5635),
                            MetricType = "DISK",
                            Value = 80f
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 12, 12, 55, 58, 206, DateTimeKind.Utc).AddTicks(5638),
                            MetricType = "NETWORK",
                            Value = 130f
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 11, 55, 58, 206, DateTimeKind.Utc).AddTicks(5640),
                            MetricType = "CPU",
                            Value = 55f
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 12, 11, 55, 58, 206, DateTimeKind.Utc).AddTicks(5642),
                            MetricType = "RAM",
                            Value = 70f
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 12, 11, 55, 58, 206, DateTimeKind.Utc).AddTicks(5644),
                            MetricType = "DISK",
                            Value = 85f
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 12, 11, 55, 58, 206, DateTimeKind.Utc).AddTicks(5646),
                            MetricType = "NETWORK",
                            Value = 140f
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Task", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("StudentId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2310),
                            Deadline = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phân tích yêu cầu hệ thống AI.",
                            GroupId = 1L,
                            ProjectId = 1L,
                            Status = "TODO",
                            Title = "Phân tích yêu cầu"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2315),
                            Deadline = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thiết kế giao diện quản lý đồ án.",
                            ProjectId = 2L,
                            Status = "IN_PROGRESS",
                            StudentId = 9L,
                            Title = "Thiết kế giao diện"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2333),
                            Deadline = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thiết kế và triển khai CSDL.",
                            GroupId = 3L,
                            ProjectId = 3L,
                            Status = "DONE",
                            Title = "Xây dựng cơ sở dữ liệu"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2337),
                            Deadline = new DateTime(2025, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tích hợp API phân tích dữ liệu.",
                            ProjectId = 4L,
                            Status = "IN_PROGRESS",
                            StudentId = 12L,
                            Title = "Tích hợp API"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2341),
                            Deadline = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phát triển tính năng quản lý lịch học.",
                            GroupId = 5L,
                            ProjectId = 5L,
                            Status = "TODO",
                            Title = "Phát triển tính năng"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2349),
                            Deadline = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Kiểm tra lỗ hổng bảo mật IoT.",
                            ProjectId = 6L,
                            Status = "IN_PROGRESS",
                            StudentId = 8L,
                            Title = "Kiểm tra bảo mật"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2353),
                            Deadline = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thu thập dữ liệu từ mạng xã hội.",
                            GroupId = 7L,
                            ProjectId = 7L,
                            Status = "DONE",
                            Title = "Thu thập dữ liệu"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2356),
                            Deadline = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tích hợp AI vào app học ngoại ngữ.",
                            ProjectId = 8L,
                            Status = "IN_PROGRESS",
                            StudentId = 10L,
                            Title = "Tích hợp AI"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2359),
                            Deadline = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thiết kế hệ thống quản lý kho.",
                            GroupId = 9L,
                            ProjectId = 9L,
                            Status = "TODO",
                            Title = "Thiết kế hệ thống"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2362),
                            Deadline = new DateTime(2025, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phát triển giao diện đặt lịch khám.",
                            ProjectId = 10L,
                            Status = "IN_PROGRESS",
                            StudentId = 12L,
                            Title = "Phát triển giao diện"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2365),
                            Deadline = new DateTime(2025, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Kiểm tra chức năng quản lý nhân sự.",
                            GroupId = 11L,
                            ProjectId = 11L,
                            Status = "DONE",
                            Title = "Kiểm tra chức năng"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(2368),
                            Deadline = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tích hợp tính năng chat nhóm.",
                            ProjectId = 12L,
                            Status = "TODO",
                            StudentId = 13L,
                            Title = "Tích hợp chat"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.TimeTracking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("StudentId");

                    b.ToTable("TimeTrackings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5255),
                            Duration = 120,
                            EndTime = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5252),
                            ProjectId = 1L,
                            StartTime = new DateTime(2025, 5, 12, 11, 55, 58, 206, DateTimeKind.Utc).AddTicks(5247),
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5261),
                            Duration = 60,
                            EndTime = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5259),
                            ProjectId = 1L,
                            StartTime = new DateTime(2025, 5, 12, 12, 55, 58, 206, DateTimeKind.Utc).AddTicks(5258),
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5265),
                            Duration = 180,
                            EndTime = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5264),
                            ProjectId = 2L,
                            StartTime = new DateTime(2025, 5, 12, 10, 55, 58, 206, DateTimeKind.Utc).AddTicks(5263),
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5270),
                            Duration = 60,
                            EndTime = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5269),
                            ProjectId = 3L,
                            StartTime = new DateTime(2025, 5, 12, 12, 55, 58, 206, DateTimeKind.Utc).AddTicks(5268),
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5274),
                            Duration = 120,
                            EndTime = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5273),
                            ProjectId = 4L,
                            StartTime = new DateTime(2025, 5, 12, 11, 55, 58, 206, DateTimeKind.Utc).AddTicks(5272),
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5278),
                            Duration = 240,
                            EndTime = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5277),
                            ProjectId = 5L,
                            StartTime = new DateTime(2025, 5, 12, 9, 55, 58, 206, DateTimeKind.Utc).AddTicks(5276),
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5283),
                            Duration = 60,
                            EndTime = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5281),
                            ProjectId = 6L,
                            StartTime = new DateTime(2025, 5, 12, 12, 55, 58, 206, DateTimeKind.Utc).AddTicks(5280),
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5287),
                            Duration = 120,
                            EndTime = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5286),
                            ProjectId = 7L,
                            StartTime = new DateTime(2025, 5, 12, 11, 55, 58, 206, DateTimeKind.Utc).AddTicks(5285),
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5292),
                            Duration = 180,
                            EndTime = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5290),
                            ProjectId = 8L,
                            StartTime = new DateTime(2025, 5, 12, 10, 55, 58, 206, DateTimeKind.Utc).AddTicks(5289),
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5295),
                            Duration = 60,
                            EndTime = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5294),
                            ProjectId = 9L,
                            StartTime = new DateTime(2025, 5, 12, 12, 55, 58, 206, DateTimeKind.Utc).AddTicks(5293),
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5299),
                            Duration = 120,
                            EndTime = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5298),
                            ProjectId = 10L,
                            StartTime = new DateTime(2025, 5, 12, 11, 55, 58, 206, DateTimeKind.Utc).AddTicks(5297),
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5304),
                            Duration = 180,
                            EndTime = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(5302),
                            ProjectId = 11L,
                            StartTime = new DateTime(2025, 5, 12, 10, 55, 58, 206, DateTimeKind.Utc).AddTicks(5301),
                            StudentId = 11L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ClassCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FailedLoginAttempts")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1296),
                            Email = "admin@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Quản trị viên",
                            Locked = false,
                            Password = "$2a$11$f.7txabjoT8vRcQwjzv9Xuda6Fx73wnFpOeJHl62d9aBo7GG6D0Yi",
                            RoleId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1297),
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1305),
                            Email = "head1@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Nguyễn Văn Hùng",
                            Locked = false,
                            Password = "$2a$11$f.7txabjoT8vRcQwjzv9Xuda6Fx73wnFpOeJHl62d9aBo7GG6D0Yi",
                            RoleId = 4L,
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1306),
                            Username = "head1"
                        },
                        new
                        {
                            Id = 3L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1310),
                            Email = "head2@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Trần Thị Lan",
                            Locked = false,
                            Password = "$2a$11$f.7txabjoT8vRcQwjzv9Xuda6Fx73wnFpOeJHl62d9aBo7GG6D0Yi",
                            RoleId = 4L,
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1311),
                            Username = "head2"
                        },
                        new
                        {
                            Id = 4L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1314),
                            Email = "lecturer1@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Lê Văn Nam",
                            Locked = false,
                            Password = "$2a$11$f.7txabjoT8vRcQwjzv9Xuda6Fx73wnFpOeJHl62d9aBo7GG6D0Yi",
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1315),
                            Username = "lecturer1"
                        },
                        new
                        {
                            Id = 5L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1319),
                            Email = "lecturer2@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Phạm Thị Mai",
                            Locked = false,
                            Password = "$2a$11$f.7txabjoT8vRcQwjzv9Xuda6Fx73wnFpOeJHl62d9aBo7GG6D0Yi",
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1320),
                            Username = "lecturer2"
                        },
                        new
                        {
                            Id = 6L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1323),
                            Email = "lecturer3@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Hoàng Văn Tùng",
                            Locked = false,
                            Password = "$2a$11$f.7txabjoT8vRcQwjzv9Xuda6Fx73wnFpOeJHl62d9aBo7GG6D0Yi",
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1324),
                            Username = "lecturer3"
                        },
                        new
                        {
                            Id = 7L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA1",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1328),
                            Email = "student1@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Nguyễn Tri Bão Thắng",
                            Locked = false,
                            Password = "$2a$11$f.7txabjoT8vRcQwjzv9Xuda6Fx73wnFpOeJHl62d9aBo7GG6D0Yi",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1328),
                            Username = "student1"
                        },
                        new
                        {
                            Id = 8L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA1",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1345),
                            Email = "student2@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Trần Văn Bình",
                            Locked = false,
                            Password = "$2a$11$f.7txabjoT8vRcQwjzv9Xuda6Fx73wnFpOeJHl62d9aBo7GG6D0Yi",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1346),
                            Username = "student2"
                        },
                        new
                        {
                            Id = 9L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA1",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1349),
                            Email = "student3@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Lê Thị Cẩm",
                            Locked = false,
                            Password = "$2a$11$f.7txabjoT8vRcQwjzv9Xuda6Fx73wnFpOeJHl62d9aBo7GG6D0Yi",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1350),
                            Username = "student3"
                        },
                        new
                        {
                            Id = 10L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA1",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1354),
                            Email = "student4@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Phạm Văn Đức",
                            Locked = false,
                            Password = "$2a$11$f.7txabjoT8vRcQwjzv9Xuda6Fx73wnFpOeJHl62d9aBo7GG6D0Yi",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1355),
                            Username = "student4"
                        },
                        new
                        {
                            Id = 11L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA1",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1358),
                            Email = "student5@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Hoàng Thị Em",
                            Locked = false,
                            Password = "$2a$11$f.7txabjoT8vRcQwjzv9Xuda6Fx73wnFpOeJHl62d9aBo7GG6D0Yi",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1358),
                            Username = "student5"
                        },
                        new
                        {
                            Id = 12L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA2",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1362),
                            Email = "student6@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Nguyễn Văn Phú",
                            Locked = false,
                            Password = "$2a$11$f.7txabjoT8vRcQwjzv9Xuda6Fx73wnFpOeJHl62d9aBo7GG6D0Yi",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1362),
                            Username = "student6"
                        },
                        new
                        {
                            Id = 13L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA2",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1366),
                            Email = "student7@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Trần Thị Hồng",
                            Locked = false,
                            Password = "$2a$11$f.7txabjoT8vRcQwjzv9Xuda6Fx73wnFpOeJHl62d9aBo7GG6D0Yi",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1367),
                            Username = "student7"
                        },
                        new
                        {
                            Id = 14L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1370),
                            Email = "lecturer4@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Nguyễn Thị Ngọc",
                            Locked = false,
                            Password = "$2a$11$f.7txabjoT8vRcQwjzv9Xuda6Fx73wnFpOeJHl62d9aBo7GG6D0Yi",
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1371),
                            Username = "lecturer4"
                        },
                        new
                        {
                            Id = 15L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1374),
                            Email = "lecturer5@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Võ Văn Tài",
                            Locked = false,
                            Password = "$2a$11$f.7txabjoT8vRcQwjzv9Xuda6Fx73wnFpOeJHl62d9aBo7GG6D0Yi",
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 5, 12, 13, 55, 58, 206, DateTimeKind.Utc).AddTicks(1376),
                            Username = "lecturer5"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.AISuggestion", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Calendar", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.CodeRun", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Submission", "Submission")
                        .WithMany()
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.CommitteeMember", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.DefenseCommittee", "Committee")
                        .WithMany()
                        .HasForeignKey("CommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany()
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Committee");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.DefenseSchedule", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Discussion", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Feedback", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany()
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Submission", "Submission")
                        .WithMany()
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.FeedbackSurvey", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Grade", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.GradeCriteria", "Criteria")
                        .WithMany()
                        .HasForeignKey("CriteriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "GradedByUser")
                        .WithMany()
                        .HasForeignKey("GradedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Criteria");

                    b.Navigation("GradedByUser");

                    b.Navigation("Group");

                    b.Navigation("Project");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeAppeal", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeCriteria", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeLog", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany()
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeSchedule", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany()
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeVersion", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Group", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GroupMember", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GroupRequest", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Log", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Meeting", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.MeetingRecord", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Meeting", "Meeting")
                        .WithMany()
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Notification", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.PeerReview", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Reviewee")
                        .WithMany()
                        .HasForeignKey("RevieweeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Reviewer")
                        .WithMany()
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Reviewee");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Project", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany()
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.ProjectVersion", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Question", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Resource", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("Group");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SkillAssessment", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Submission", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SubmissionVersion", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Submission", "Submission")
                        .WithMany()
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Task", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Group");

                    b.Navigation("Project");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.TimeTracking", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.User", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
