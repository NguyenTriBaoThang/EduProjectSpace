// <auto-generated />
using System;
using EduProject_TADProgrammer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduProject_TADProgrammer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250520185549_InitialIdentityModel")]
    partial class InitialIdentityModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.AISuggestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("AISuggestions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Đề xuất thêm tính năng phân tích dữ liệu thời gian thực.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4875),
                            Type = "PROJECT",
                            UserId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Điểm nội dung có thể tăng nếu bổ sung tài liệu tham khảo.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4877),
                            ProjectId = 1L,
                            Type = "GRADE"
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Nên tích hợp tính năng chat vào hệ thống quản lý.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4879),
                            Type = "PROJECT",
                            UserId = 8L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Điểm trình bày có thể tăng nếu cải thiện bố cục.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4881),
                            ProjectId = 2L,
                            Type = "GRADE"
                        },
                        new
                        {
                            Id = 5L,
                            Content = "Đề xuất thêm cổng thanh toán cho website thương mại.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4883),
                            Type = "PROJECT",
                            UserId = 9L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Điểm nội dung có thể tăng nếu bổ sung ví dụ thực tế.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4885),
                            ProjectId = 3L,
                            Type = "GRADE"
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Nên tích hợp công cụ phân tích dữ liệu mạnh hơn.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4887),
                            Type = "PROJECT",
                            UserId = 10L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "Điểm phân tích có thể tăng nếu cải thiện độ chính xác.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4888),
                            ProjectId = 4L,
                            Type = "GRADE"
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Đề xuất thêm chế độ offline cho app quản lý học tập.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4890),
                            Type = "PROJECT",
                            UserId = 11L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "Điểm thực hành có thể tăng nếu bổ sung tính năng.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4892),
                            ProjectId = 5L,
                            Type = "GRADE"
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Nên tăng cường bảo mật cho hệ thống IoT.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4894),
                            Type = "PROJECT",
                            UserId = 12L
                        },
                        new
                        {
                            Id = 12L,
                            Content = "Điểm bảo mật có thể tăng nếu kiểm tra kỹ hơn.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4896),
                            ProjectId = 6L,
                            Type = "GRADE"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Backup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Backups");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5008),
                            CreatedBy = 1L,
                            Description = "Daily full database backup",
                            FilePath = "backups/db_backup_2025_02_01.sql",
                            FileSize = 104857600L,
                            Status = "Success",
                            Type = "Full",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5009)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 19, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5012),
                            CreatedBy = 1L,
                            Description = "Incremental backup for Feb 2",
                            FilePath = "backups/db_backup_2025_02_02.sql",
                            FileSize = 52428800L,
                            Status = "Success",
                            Type = "Incremental",
                            UpdatedAt = new DateTime(2025, 5, 19, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5013)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 18, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5016),
                            CreatedBy = 2L,
                            Description = "Daily full database backup",
                            FilePath = "backups/db_backup_2025_02_03.sql",
                            FileSize = 110100480L,
                            Status = "Success",
                            Type = "Full",
                            UpdatedAt = new DateTime(2025, 5, 18, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5017)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 17, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5020),
                            Description = "Differential backup for Feb 4",
                            FilePath = "backups/db_backup_2025_02_04.sql",
                            FileSize = 73400320L,
                            Status = "Success",
                            Type = "Differential",
                            UpdatedAt = new DateTime(2025, 5, 17, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5020)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 16, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5023),
                            CreatedBy = 1L,
                            Description = "Incremental backup failed due to disk space",
                            FilePath = "backups/db_backup_2025_02_05.sql",
                            Status = "Failed",
                            Type = "Incremental",
                            UpdatedAt = new DateTime(2025, 5, 16, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5027)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 15, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5030),
                            CreatedBy = 2L,
                            Description = "Weekly full database backup",
                            FilePath = "backups/db_backup_2025_02_06.sql",
                            FileSize = 115343360L,
                            Status = "Success",
                            Type = "Full",
                            UpdatedAt = new DateTime(2025, 5, 15, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5030)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 14, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5033),
                            Description = "Incremental backup for Feb 7",
                            FilePath = "backups/db_backup_2025_02_07.sql",
                            FileSize = 41943040L,
                            Status = "Success",
                            Type = "Incremental",
                            UpdatedAt = new DateTime(2025, 5, 14, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5034)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 13, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5036),
                            CreatedBy = 1L,
                            Description = "Differential backup in progress",
                            FilePath = "backups/db_backup_2025_02_08.sql",
                            Status = "Pending",
                            Type = "Differential",
                            UpdatedAt = new DateTime(2025, 5, 13, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5037)
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 12, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5040),
                            CreatedBy = 2L,
                            Description = "Daily full database backup",
                            FilePath = "backups/db_backup_2025_02_09.sql",
                            FileSize = 120586240L,
                            Status = "Success",
                            Type = "Full",
                            UpdatedAt = new DateTime(2025, 5, 12, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5040)
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 11, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5043),
                            Description = "Incremental backup for Feb 10",
                            FilePath = "backups/db_backup_2025_02_10.sql",
                            FileSize = 52428800L,
                            Status = "Success",
                            Type = "Incremental",
                            UpdatedAt = new DateTime(2025, 5, 11, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5044)
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 10, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5047),
                            CreatedBy = 1L,
                            Description = "Differential backup for Feb 11",
                            FilePath = "backups/db_backup_2025_02_11.sql",
                            FileSize = 83886080L,
                            Status = "Success",
                            Type = "Differential",
                            UpdatedAt = new DateTime(2025, 5, 10, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5047)
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 9, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5050),
                            CreatedBy = 2L,
                            Description = "Daily full database backup",
                            FilePath = "backups/db_backup_2025_02_12.sql",
                            FileSize = 125829120L,
                            Status = "Success",
                            Type = "Full",
                            UpdatedAt = new DateTime(2025, 5, 9, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5051)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Calendar", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAllDay")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Calendars");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4688),
                            Description = "Họp nhóm để thảo luận tiến độ dự án",
                            EndTime = new DateTime(2025, 2, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            IsAllDay = false,
                            Location = "Phòng họp A",
                            StartTime = new DateTime(2025, 2, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4689),
                            UserId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4694),
                            Description = "Nộp bài tập lớn môn Lập trình",
                            EndTime = new DateTime(2025, 2, 28, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Nộp bài",
                            GroupId = 1L,
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 2, 28, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Deadline",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4695),
                            UserId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4698),
                            Description = "Họp nhóm để phân công nhiệm vụ",
                            EndTime = new DateTime(2025, 2, 17, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 2L,
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 2, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4698),
                            UserId = 8L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4702),
                            Description = "Bảo vệ đồ án tốt nghiệp",
                            EndTime = new DateTime(2025, 3, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Bảo vệ đồ án",
                            IsAllDay = false,
                            Location = "Hội trường",
                            StartTime = new DateTime(2025, 3, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Other",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4702),
                            UserId = 9L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4706),
                            Description = "Họp nhóm để kiểm tra tiến độ",
                            EndTime = new DateTime(2025, 2, 24, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 3L,
                            IsAllDay = false,
                            Location = "Phòng họp C",
                            StartTime = new DateTime(2025, 2, 24, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4706),
                            UserId = 10L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4709),
                            Description = "Nộp báo cáo nhiệm vụ cá nhân",
                            EndTime = new DateTime(2025, 2, 25, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Hạn nộp nhiệm vụ",
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 2, 25, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Deadline",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4710),
                            UserId = 11L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4713),
                            Description = "Họp nhóm để chuẩn bị thuyết trình",
                            EndTime = new DateTime(2025, 3, 3, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 4L,
                            IsAllDay = false,
                            Location = "Phòng họp A",
                            StartTime = new DateTime(2025, 3, 3, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4714),
                            UserId = 12L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4717),
                            Description = "Bảo vệ đồ án chuyên ngành",
                            EndTime = new DateTime(2025, 3, 5, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Bảo vệ đồ án",
                            IsAllDay = false,
                            Location = "Hội trường",
                            StartTime = new DateTime(2025, 3, 5, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Other",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4717),
                            UserId = 13L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4721),
                            Description = "Họp nhóm để hoàn thiện dự án",
                            EndTime = new DateTime(2025, 3, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 5L,
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 3, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4721),
                            UserId = 7L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4725),
                            Description = "Nộp báo cáo thực tập",
                            EndTime = new DateTime(2025, 3, 15, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Hạn nộp nhiệm vụ",
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 3, 15, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Deadline",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4725),
                            UserId = 8L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4729),
                            Description = "Họp nhóm để đánh giá tiến độ",
                            EndTime = new DateTime(2025, 3, 17, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 6L,
                            IsAllDay = false,
                            Location = "Phòng họp C",
                            StartTime = new DateTime(2025, 3, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4729),
                            UserId = 9L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4732),
                            Description = "Bảo vệ đồ án tốt nghiệp",
                            EndTime = new DateTime(2025, 3, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Bảo vệ đồ án",
                            IsAllDay = false,
                            Location = "Hội trường",
                            StartTime = new DateTime(2025, 3, 20, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Other",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4733),
                            UserId = 10L
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2025, 5, 19, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4736),
                            Description = "Họp nhóm để phân tích yêu cầu dự án",
                            EndTime = new DateTime(2025, 3, 24, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 7L,
                            IsAllDay = false,
                            Location = "Phòng họp A",
                            StartTime = new DateTime(2025, 3, 24, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 19, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4737),
                            UserId = 11L
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(2025, 5, 19, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4741),
                            Description = "Nộp bài tập môn Cấu trúc dữ liệu",
                            EndTime = new DateTime(2025, 3, 25, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Hạn nộp bài tập",
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 3, 25, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Deadline",
                            UpdatedAt = new DateTime(2025, 5, 19, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4741),
                            UserId = 12L
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(2025, 5, 18, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4787),
                            Description = "Họp nhóm để chuẩn bị báo cáo",
                            EndTime = new DateTime(2025, 3, 31, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 8L,
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 3, 31, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 18, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4788),
                            UserId = 13L
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTime(2025, 5, 18, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4792),
                            Description = "Thi cuối kỳ môn Lập trình nâng cao",
                            EndTime = new DateTime(2025, 4, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Thi cuối kỳ",
                            IsAllDay = false,
                            Location = "Phòng thi 101",
                            StartTime = new DateTime(2025, 4, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Other",
                            UpdatedAt = new DateTime(2025, 5, 18, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4793),
                            UserId = 7L
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTime(2025, 5, 17, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4796),
                            Description = "Họp nhóm bị hủy do lịch trùng",
                            EndTime = new DateTime(2025, 4, 7, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 9L,
                            IsAllDay = false,
                            Location = "Phòng họp C",
                            StartTime = new DateTime(2025, 4, 7, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Cancelled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 17, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4797),
                            UserId = 8L
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTime(2025, 5, 17, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4800),
                            Description = "Nộp báo cáo dự án nhóm",
                            EndTime = new DateTime(2025, 4, 10, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Hạn nộp báo cáo",
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 4, 10, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Deadline",
                            UpdatedAt = new DateTime(2025, 5, 17, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4801),
                            UserId = 9L
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTime(2025, 5, 16, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4805),
                            Description = "Họp nhóm để hoàn thiện thuyết trình",
                            EndTime = new DateTime(2025, 4, 14, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 10L,
                            IsAllDay = false,
                            Location = "Phòng họp A",
                            StartTime = new DateTime(2025, 4, 14, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 16, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4805),
                            UserId = 10L
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTime(2025, 5, 16, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4809),
                            Description = "Thi cuối kỳ môn Cơ sở dữ liệu",
                            EndTime = new DateTime(2025, 4, 15, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Thi cuối kỳ",
                            IsAllDay = false,
                            Location = "Phòng thi 102",
                            StartTime = new DateTime(2025, 4, 15, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Other",
                            UpdatedAt = new DateTime(2025, 5, 16, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4809),
                            UserId = 11L
                        },
                        new
                        {
                            Id = 21L,
                            CreatedAt = new DateTime(2025, 5, 15, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4813),
                            Description = "Họp nhóm để đánh giá dự án",
                            EndTime = new DateTime(2025, 4, 21, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 11L,
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 4, 21, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 15, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4814),
                            UserId = 12L
                        },
                        new
                        {
                            Id = 22L,
                            CreatedAt = new DateTime(2025, 5, 15, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4817),
                            Description = "Bảo vệ đồ án chuyên ngành",
                            EndTime = new DateTime(2025, 4, 25, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Bảo vệ đồ án",
                            IsAllDay = false,
                            Location = "Hội trường",
                            StartTime = new DateTime(2025, 4, 25, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Other",
                            UpdatedAt = new DateTime(2025, 5, 15, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4818),
                            UserId = 13L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.CodeRun", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("ExecutionTime")
                        .HasColumnType("real");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("PlagiarismScore")
                        .HasColumnType("real");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubmissionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId");

                    b.ToTable("CodeRuns");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Code = "print('Hello World')",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2632),
                            ExecutionTime = 50.5f,
                            Language = "Python",
                            PlagiarismScore = 0.1f,
                            Result = "Output: Hello World",
                            Status = "Success",
                            SubmissionId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2632)
                        },
                        new
                        {
                            Id = 2L,
                            Code = "public class Main { public static void main(String[] args) { System.out.println(\"Hello\"); } }",
                            CreatedAt = new DateTime(2025, 5, 20, 17, 55, 45, 619, DateTimeKind.Utc).AddTicks(2636),
                            ExecutionTime = 120f,
                            Language = "Java",
                            PlagiarismScore = 0.2f,
                            Result = "Output: Hello",
                            Status = "Success",
                            SubmissionId = 2L,
                            UpdatedAt = new DateTime(2025, 5, 20, 17, 55, 45, 619, DateTimeKind.Utc).AddTicks(2638)
                        },
                        new
                        {
                            Id = 3L,
                            Code = "console.log('Hello World');",
                            CreatedAt = new DateTime(2025, 5, 20, 16, 55, 45, 619, DateTimeKind.Utc).AddTicks(2641),
                            ExecutionTime = 30.2f,
                            Language = "JavaScript",
                            PlagiarismScore = 0.15f,
                            Result = "Output: Hello World",
                            Status = "Success",
                            SubmissionId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 20, 16, 55, 45, 619, DateTimeKind.Utc).AddTicks(2642)
                        },
                        new
                        {
                            Id = 4L,
                            Code = "print('Error Test')",
                            CreatedAt = new DateTime(2025, 5, 20, 15, 55, 45, 619, DateTimeKind.Utc).AddTicks(2645),
                            ErrorMessage = "SyntaxError: unexpected EOF while parsing",
                            Language = "Python",
                            PlagiarismScore = 0.3f,
                            Result = "Error: Invalid syntax",
                            Status = "Failed",
                            SubmissionId = 4L,
                            UpdatedAt = new DateTime(2025, 5, 20, 15, 55, 45, 619, DateTimeKind.Utc).AddTicks(2646)
                        },
                        new
                        {
                            Id = 5L,
                            Code = "public class Test { public static void main(String[] args) { System.out.println(\"Test\"); } }",
                            CreatedAt = new DateTime(2025, 5, 20, 14, 55, 45, 619, DateTimeKind.Utc).AddTicks(2649),
                            ExecutionTime = 110.5f,
                            Language = "Java",
                            PlagiarismScore = 0.1f,
                            Result = "Output: Test",
                            Status = "Success",
                            SubmissionId = 5L,
                            UpdatedAt = new DateTime(2025, 5, 20, 14, 55, 45, 619, DateTimeKind.Utc).AddTicks(2649)
                        },
                        new
                        {
                            Id = 6L,
                            Code = "print('IoT Security')",
                            CreatedAt = new DateTime(2025, 5, 20, 13, 55, 45, 619, DateTimeKind.Utc).AddTicks(2652),
                            ExecutionTime = 45f,
                            Language = "Python",
                            PlagiarismScore = 0.05f,
                            Result = "Output: IoT Security",
                            Status = "Success",
                            SubmissionId = 6L,
                            UpdatedAt = new DateTime(2025, 5, 20, 13, 55, 45, 619, DateTimeKind.Utc).AddTicks(2653)
                        },
                        new
                        {
                            Id = 7L,
                            Code = "console.log('Social Media');",
                            CreatedAt = new DateTime(2025, 5, 20, 12, 55, 45, 619, DateTimeKind.Utc).AddTicks(2656),
                            ExecutionTime = 25.8f,
                            Language = "JavaScript",
                            PlagiarismScore = 0.2f,
                            Result = "Output: Social Media",
                            Status = "Success",
                            SubmissionId = 7L,
                            UpdatedAt = new DateTime(2025, 5, 20, 12, 55, 45, 619, DateTimeKind.Utc).AddTicks(2657)
                        },
                        new
                        {
                            Id = 8L,
                            Code = "print('Language Learning')",
                            CreatedAt = new DateTime(2025, 5, 20, 11, 55, 45, 619, DateTimeKind.Utc).AddTicks(2660),
                            ErrorMessage = "Process exceeded 5-second limit",
                            Language = "Python",
                            PlagiarismScore = 0.4f,
                            Result = "Execution timed out",
                            Status = "Timeout",
                            SubmissionId = 8L,
                            UpdatedAt = new DateTime(2025, 5, 20, 11, 55, 45, 619, DateTimeKind.Utc).AddTicks(2660)
                        },
                        new
                        {
                            Id = 9L,
                            Code = "public class Warehouse { public static void main(String[] args) { System.out.println(\"Warehouse\"); } }",
                            CreatedAt = new DateTime(2025, 5, 20, 10, 55, 45, 619, DateTimeKind.Utc).AddTicks(2664),
                            ExecutionTime = 130f,
                            Language = "Java",
                            PlagiarismScore = 0.1f,
                            Result = "Output: Warehouse",
                            Status = "Success",
                            SubmissionId = 9L,
                            UpdatedAt = new DateTime(2025, 5, 20, 10, 55, 45, 619, DateTimeKind.Utc).AddTicks(2664)
                        },
                        new
                        {
                            Id = 10L,
                            Code = "print('Booking System')",
                            CreatedAt = new DateTime(2025, 5, 20, 9, 55, 45, 619, DateTimeKind.Utc).AddTicks(2667),
                            ExecutionTime = 48.3f,
                            Language = "Python",
                            PlagiarismScore = 0.05f,
                            Result = "Output: Booking System",
                            Status = "Success",
                            SubmissionId = 10L,
                            UpdatedAt = new DateTime(2025, 5, 20, 9, 55, 45, 619, DateTimeKind.Utc).AddTicks(2668)
                        },
                        new
                        {
                            Id = 11L,
                            Code = "console.log('HR System');",
                            CreatedAt = new DateTime(2025, 5, 20, 8, 55, 45, 619, DateTimeKind.Utc).AddTicks(2671),
                            ExecutionTime = 28.7f,
                            Language = "JavaScript",
                            PlagiarismScore = 0.15f,
                            Result = "Output: HR System",
                            Status = "Success",
                            SubmissionId = 11L,
                            UpdatedAt = new DateTime(2025, 5, 20, 8, 55, 45, 619, DateTimeKind.Utc).AddTicks(2672)
                        },
                        new
                        {
                            Id = 12L,
                            Code = "print('Group Study')",
                            CreatedAt = new DateTime(2025, 5, 20, 7, 55, 45, 619, DateTimeKind.Utc).AddTicks(2675),
                            ErrorMessage = "NameError: name 'undefined_variable' is not defined",
                            Language = "Python",
                            PlagiarismScore = 0.3f,
                            Result = "Error: NameError",
                            Status = "Failed",
                            SubmissionId = 12L,
                            UpdatedAt = new DateTime(2025, 5, 20, 7, 55, 45, 619, DateTimeKind.Utc).AddTicks(2676)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.CommitteeMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CommitteeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("LecturerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CommitteeId");

                    b.HasIndex("LecturerId");

                    b.ToTable("CommitteeMembers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CommitteeId = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3350),
                            LecturerId = 2L,
                            Role = "Chủ tịch",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3351)
                        },
                        new
                        {
                            Id = 2L,
                            CommitteeId = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3354),
                            LecturerId = 4L,
                            Role = "Thành viên",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3354)
                        },
                        new
                        {
                            Id = 3L,
                            CommitteeId = 2L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3356),
                            LecturerId = 3L,
                            Role = "Chủ tịch",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3357)
                        },
                        new
                        {
                            Id = 4L,
                            CommitteeId = 2L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3359),
                            LecturerId = 5L,
                            Role = "Thư ký",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3359)
                        },
                        new
                        {
                            Id = 5L,
                            CommitteeId = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3361),
                            LecturerId = 6L,
                            Role = "Thành viên",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3362)
                        },
                        new
                        {
                            Id = 6L,
                            CommitteeId = 4L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3364),
                            LecturerId = 14L,
                            Role = "Chủ tịch",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3364)
                        },
                        new
                        {
                            Id = 7L,
                            CommitteeId = 5L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3366),
                            LecturerId = 15L,
                            Role = "Thư ký",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3367)
                        },
                        new
                        {
                            Id = 8L,
                            CommitteeId = 6L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3369),
                            LecturerId = 4L,
                            Role = "Thành viên",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3369)
                        },
                        new
                        {
                            Id = 9L,
                            CommitteeId = 7L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3371),
                            LecturerId = 5L,
                            Role = "Chủ tịch",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3372)
                        },
                        new
                        {
                            Id = 10L,
                            CommitteeId = 8L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3374),
                            LecturerId = 6L,
                            Role = "Thư ký",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3374)
                        },
                        new
                        {
                            Id = 11L,
                            CommitteeId = 9L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3376),
                            LecturerId = 14L,
                            Role = "Thành viên",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3377)
                        },
                        new
                        {
                            Id = 12L,
                            CommitteeId = 10L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3379),
                            LecturerId = 15L,
                            Role = "Chủ tịch",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3379)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DefenseDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("SemesterId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("SemesterId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CourseCode = "CNTT_TN_2025",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1598),
                            DefenseDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp CNPM",
                            SemesterId = 1L,
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1599)
                        },
                        new
                        {
                            Id = 2L,
                            CourseCode = "CNTT_CS_2025",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1605),
                            DefenseDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở CNPM",
                            SemesterId = 1L,
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1605)
                        },
                        new
                        {
                            Id = 3L,
                            CourseCode = "KTPM_TN_2025",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1609),
                            DefenseDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp KTPM",
                            SemesterId = 1L,
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1610)
                        },
                        new
                        {
                            Id = 4L,
                            CourseCode = "KTPM_CS_2025",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1613),
                            DefenseDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở KTPM",
                            SemesterId = 1L,
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1614)
                        },
                        new
                        {
                            Id = 5L,
                            CourseCode = "ATTT_TN_2025",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1659),
                            DefenseDate = new DateTime(2025, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2L,
                            EndDate = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp ATTT",
                            SemesterId = 2L,
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1659)
                        },
                        new
                        {
                            Id = 6L,
                            CourseCode = "ATTT_CS_2025",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1663),
                            DefenseDate = new DateTime(2025, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2L,
                            EndDate = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở ATTT",
                            SemesterId = 2L,
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1664)
                        },
                        new
                        {
                            Id = 7L,
                            CourseCode = "KHMT_TN_2025",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1668),
                            DefenseDate = new DateTime(2025, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp KHMT",
                            SemesterId = 2L,
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1668)
                        },
                        new
                        {
                            Id = 8L,
                            CourseCode = "KHMT_CS_2025",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1672),
                            DefenseDate = new DateTime(2025, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở KHMT",
                            SemesterId = 2L,
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1672)
                        },
                        new
                        {
                            Id = 9L,
                            CourseCode = "HTTT_TN_2025",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1676),
                            DefenseDate = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp HTTT",
                            SemesterId = 3L,
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "PLANNED",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1677)
                        },
                        new
                        {
                            Id = 10L,
                            CourseCode = "HTTT_CS_2025",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1689),
                            DefenseDate = new DateTime(2025, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở HTTT",
                            SemesterId = 3L,
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "PLANNED",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1689)
                        },
                        new
                        {
                            Id = 11L,
                            CourseCode = "CNPM_TN_2025",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1693),
                            DefenseDate = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp TTNT",
                            SemesterId = 3L,
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "PLANNED",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1694)
                        },
                        new
                        {
                            Id = 12L,
                            CourseCode = "CNPM_CS_2025",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1698),
                            DefenseDate = new DateTime(2025, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở TTNT",
                            SemesterId = 3L,
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "PLANNED",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1698)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.DefenseCommittee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("SemesterId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("SemesterId");

                    b.ToTable("DefenseCommittees");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3277),
                            Name = "Hội đồng 1",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3278)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3281),
                            Name = "Hội đồng 2",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3281)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3283),
                            Name = "Hội đồng 3",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3284)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3286),
                            Name = "Hội đồng 4",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3286)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3288),
                            Name = "Hội đồng 5",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3289)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3291),
                            Name = "Hội đồng 6",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3291)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3293),
                            Name = "Hội đồng 7",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3294)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3296),
                            Name = "Hội đồng 8",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3296)
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3298),
                            Name = "Hội đồng 9",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3299)
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3301),
                            Name = "Hội đồng 10",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3301)
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3303),
                            Name = "Hội đồng 11",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3304)
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3306),
                            Name = "Hội đồng 12",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3306)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.DefenseSchedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("DefenseSchedules");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3421),
                            EndTime = new DateTime(2025, 3, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 1L,
                            Room = "A101",
                            StartTime = new DateTime(2025, 3, 1, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3424),
                            EndTime = new DateTime(2025, 3, 2, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 2L,
                            Room = "A102",
                            StartTime = new DateTime(2025, 3, 2, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3426),
                            EndTime = new DateTime(2025, 3, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 3L,
                            Room = "A103",
                            StartTime = new DateTime(2025, 3, 3, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3490),
                            EndTime = new DateTime(2025, 3, 4, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 4L,
                            Room = "A104",
                            StartTime = new DateTime(2025, 3, 4, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3492),
                            EndTime = new DateTime(2025, 3, 5, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 5L,
                            Room = "A105",
                            StartTime = new DateTime(2025, 3, 5, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3494),
                            EndTime = new DateTime(2025, 3, 6, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 6L,
                            Room = "A106",
                            StartTime = new DateTime(2025, 3, 6, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3497),
                            EndTime = new DateTime(2025, 3, 7, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 7L,
                            Room = "A107",
                            StartTime = new DateTime(2025, 3, 7, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3499),
                            EndTime = new DateTime(2025, 3, 8, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 8L,
                            Room = "A108",
                            StartTime = new DateTime(2025, 3, 8, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3501),
                            EndTime = new DateTime(2025, 3, 9, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 9L,
                            Room = "A109",
                            StartTime = new DateTime(2025, 3, 9, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3503),
                            EndTime = new DateTime(2025, 3, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 10L,
                            Room = "A110",
                            StartTime = new DateTime(2025, 3, 10, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3505),
                            EndTime = new DateTime(2025, 3, 11, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 11L,
                            Room = "A111",
                            StartTime = new DateTime(2025, 3, 11, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3507),
                            EndTime = new DateTime(2025, 3, 12, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 12L,
                            Room = "A112",
                            StartTime = new DateTime(2025, 3, 12, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("FacultyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FacultyCode = "CNPM",
                            FacultyName = "Công nghệ phần mềm"
                        },
                        new
                        {
                            Id = 2L,
                            FacultyCode = "ATTT",
                            FacultyName = "An toàn thông tin"
                        },
                        new
                        {
                            Id = 3L,
                            FacultyCode = "MMT",
                            FacultyName = "Mạng máy tính"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Discussion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int>("Votes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Discussions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Có ai biết cách tích hợp AI vào ứng dụng y tế?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4184),
                            ProjectId = 1L,
                            Title = "Hỏi về AI trong y tế",
                            UserId = 7L,
                            Votes = 5
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Nên dùng framework nào cho giao diện?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4186),
                            Title = "Thắc mắc về thiết kế giao diện",
                            UserId = 9L,
                            Votes = 3
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Nên dùng cổng thanh toán nào?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4189),
                            ProjectId = 3L,
                            Title = "Thanh toán thương mại điện tử",
                            UserId = 10L,
                            Votes = 4
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Có công cụ nào tốt để phân tích dữ liệu?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4190),
                            ProjectId = 4L,
                            Title = "Phân tích dữ liệu",
                            UserId = 12L,
                            Votes = 2
                        },
                        new
                        {
                            Id = 5L,
                            Content = "App quản lý học tập nên có tính năng gì?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4193),
                            ProjectId = 5L,
                            Title = "Quản lý học tập",
                            UserId = 7L,
                            Votes = 6
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Làm sao để tăng cường bảo mật IoT?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4195),
                            ProjectId = 6L,
                            Title = "Bảo mật IoT",
                            UserId = 8L,
                            Votes = 3
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Có công cụ nào miễn phí để phân tích?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4197),
                            ProjectId = 7L,
                            Title = "Phân tích mạng xã hội",
                            UserId = 9L,
                            Votes = 5
                        },
                        new
                        {
                            Id = 8L,
                            Content = "App học ngoại ngữ nên có gì đặc biệt?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4199),
                            ProjectId = 8L,
                            Title = "Học ngoại ngữ",
                            UserId = 10L,
                            Votes = 4
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Hệ thống quản lý kho nên tự động hóa thế nào?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4201),
                            ProjectId = 9L,
                            Title = "Quản lý kho",
                            UserId = 11L,
                            Votes = 3
                        },
                        new
                        {
                            Id = 10L,
                            Content = "App đặt lịch nên có thông báo không?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4202),
                            ProjectId = 10L,
                            Title = "Đặt lịch khám bệnh",
                            UserId = 12L,
                            Votes = 5
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Hệ thống nhân sự cần báo cáo gì?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4204),
                            ProjectId = 11L,
                            Title = "Quản lý nhân sự",
                            UserId = 13L,
                            Votes = 2
                        },
                        new
                        {
                            Id = 12L,
                            Content = "App học nhóm nên có tính năng gì?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4206),
                            ProjectId = 12L,
                            Title = "Học tập nhóm",
                            UserId = 7L,
                            Votes = 4
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.FAQ", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.ToTable("FAQs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Answer = "Đăng nhập, vào mục Nộp bài, tải file lên.",
                            Category = "Nộp bài",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4095),
                            Question = "Làm thế nào để nộp đồ án?"
                        },
                        new
                        {
                            Id = 2L,
                            Answer = "Xem lịch bảo vệ trong mục Lịch.",
                            Category = "Bảo vệ",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4097),
                            Question = "Thời gian bảo vệ là khi nào?"
                        },
                        new
                        {
                            Id = 3L,
                            Answer = "Vào mục Nhóm, gửi yêu cầu tham gia.",
                            Category = "Nhóm",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4099),
                            Question = "Làm sao để tham gia nhóm?"
                        },
                        new
                        {
                            Id = 4L,
                            Answer = "Vào mục Điểm số, chọn đồ án của bạn.",
                            Category = "Điểm số",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4101),
                            Question = "Cách xem điểm đồ án?"
                        },
                        new
                        {
                            Id = 5L,
                            Answer = "Vào mục Phản hồi, điền nội dung.",
                            Category = "Phản hồi",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4102),
                            Question = "Làm sao để gửi phản hồi?"
                        },
                        new
                        {
                            Id = 6L,
                            Answer = "Có, AI hỗ trợ gợi ý và đánh giá.",
                            Category = "Hỗ trợ",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4104),
                            Question = "Hệ thống có hỗ trợ AI không?"
                        },
                        new
                        {
                            Id = 7L,
                            Answer = "Vào mục Nhiệm vụ, nhấn Tạo mới.",
                            Category = "Nhiệm vụ",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4106),
                            Question = "Làm sao để tạo nhiệm vụ?"
                        },
                        new
                        {
                            Id = 8L,
                            Answer = "Vào mục Tài liệu, chọn tài liệu và tải.",
                            Category = "Tài liệu",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4107),
                            Question = "Cách tải tài liệu tham khảo?"
                        },
                        new
                        {
                            Id = 9L,
                            Answer = "Vào mục Lịch, chọn lịch họp nhóm.",
                            Category = "Họp nhóm",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4109),
                            Question = "Làm sao để xem lịch họp?"
                        },
                        new
                        {
                            Id = 10L,
                            Answer = "Vào mục Điểm số, chọn Kháng nghị.",
                            Category = "Kháng nghị",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4111),
                            Question = "Cách gửi kháng nghị điểm?"
                        },
                        new
                        {
                            Id = 11L,
                            Answer = "Có, vào mục Chat để trò chuyện nhóm.",
                            Category = "Chat",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4112),
                            Question = "Hệ thống có hỗ trợ chat không?"
                        },
                        new
                        {
                            Id = 12L,
                            Answer = "Vào Cài đặt, chọn Đổi mật khẩu.",
                            Category = "Tài khoản",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4114),
                            Question = "Làm sao để đổi mật khẩu?"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Feedback", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("LecturerId")
                        .HasColumnType("bigint");

                    b.Property<long>("SubmissionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LecturerId");

                    b.HasIndex("SubmissionId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Cần cải thiện phần phân tích dữ liệu.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2567),
                            LecturerId = 4L,
                            SubmissionId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Tốt, nhưng cần bổ sung tài liệu tham khảo.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2569),
                            LecturerId = 5L,
                            SubmissionId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Cần chỉnh sửa bố cục báo cáo.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2570),
                            LecturerId = 6L,
                            SubmissionId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Bài nộp chưa đạt yêu cầu.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2572),
                            LecturerId = 14L,
                            SubmissionId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Content = "Cần bổ sung hình ảnh minh họa.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2574),
                            LecturerId = 15L,
                            SubmissionId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Tốt, nội dung đầy đủ.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2575),
                            LecturerId = 4L,
                            SubmissionId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Cần cải thiện phần kết luận.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2577),
                            LecturerId = 5L,
                            SubmissionId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "Bài nộp không đúng định dạng.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2579),
                            LecturerId = 6L,
                            SubmissionId = 8L
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Cần bổ sung tài liệu tham khảo.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2580),
                            LecturerId = 14L,
                            SubmissionId = 9L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "Tốt, đạt yêu cầu.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2582),
                            LecturerId = 15L,
                            SubmissionId = 10L
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Cần chỉnh sửa phần giới thiệu.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2584),
                            LecturerId = 4L,
                            SubmissionId = 11L
                        },
                        new
                        {
                            Id = 12L,
                            Content = "Bài nộp không đạt, cần làm lại.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2585),
                            LecturerId = 5L,
                            SubmissionId = 12L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.FeedbackSurvey", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FeedbackSurveys");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Hệ thống dễ sử dụng.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4275),
                            Rating = 4,
                            UserId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Cần cải thiện tốc độ tải.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4277),
                            Rating = 3,
                            UserId = 8L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Giao diện thân thiện.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4278),
                            Rating = 5,
                            UserId = 9L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Chat nhóm bị lỗi.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4280),
                            Rating = 2,
                            UserId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            Content = "Hỗ trợ tốt.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4282),
                            Rating = 4,
                            UserId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Cần thêm hướng dẫn sử dụng.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4283),
                            Rating = 3,
                            UserId = 12L
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Tính năng quản lý nhóm tốt.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4285),
                            Rating = 5,
                            UserId = 13L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "Thông báo không hoạt động.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4287),
                            Rating = 2,
                            UserId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Rất hài lòng với hệ thống.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4288),
                            Rating = 5,
                            UserId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "Cần cải thiện tốc độ.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4290),
                            Rating = 3,
                            UserId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Giao diện đẹp.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4292),
                            Rating = 4,
                            UserId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            Content = "Hệ thống ổn định.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4293),
                            Rating = 4,
                            UserId = 11L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Grade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CriteriaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("GradedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GradedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CriteriaId");

                    b.HasIndex("GradedBy");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("StudentId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Comment = "Nội dung tốt.",
                            CriteriaId = 1L,
                            GradedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2834),
                            GradedBy = 4L,
                            GroupId = 1L,
                            ProjectId = 1L,
                            Score = 8.5f
                        },
                        new
                        {
                            Id = 2L,
                            Comment = "Trình bày rõ ràng.",
                            CriteriaId = 2L,
                            GradedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2841),
                            GradedBy = 4L,
                            GroupId = 1L,
                            ProjectId = 1L,
                            Score = 8f
                        },
                        new
                        {
                            Id = 3L,
                            Comment = "Nội dung ổn.",
                            CriteriaId = 1L,
                            GradedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2843),
                            GradedBy = 5L,
                            GroupId = 2L,
                            ProjectId = 2L,
                            Score = 7.5f
                        },
                        new
                        {
                            Id = 4L,
                            Comment = "Nội dung tốt.",
                            CriteriaId = 4L,
                            GradedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2846),
                            GradedBy = 6L,
                            GroupId = 3L,
                            ProjectId = 3L,
                            Score = 8f
                        },
                        new
                        {
                            Id = 5L,
                            Comment = "Cần cải thiện.",
                            CriteriaId = 6L,
                            GradedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2848),
                            GradedBy = 14L,
                            GroupId = 4L,
                            ProjectId = 4L,
                            Score = 7f
                        },
                        new
                        {
                            Id = 6L,
                            Comment = "Thực hành tốt.",
                            CriteriaId = 7L,
                            GradedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2851),
                            GradedBy = 15L,
                            GroupId = 5L,
                            ProjectId = 5L,
                            Score = 8.5f
                        },
                        new
                        {
                            Id = 7L,
                            Comment = "Bảo mật tốt.",
                            CriteriaId = 8L,
                            GradedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2853),
                            GradedBy = 4L,
                            GroupId = 6L,
                            ProjectId = 6L,
                            Score = 9f
                        },
                        new
                        {
                            Id = 8L,
                            Comment = "Phân tích chưa sâu.",
                            CriteriaId = 9L,
                            GradedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2856),
                            GradedBy = 5L,
                            GroupId = 7L,
                            ProjectId = 7L,
                            Score = 6.5f
                        },
                        new
                        {
                            Id = 9L,
                            Comment = "Ứng dụng ổn.",
                            CriteriaId = 10L,
                            GradedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2858),
                            GradedBy = 6L,
                            GroupId = 8L,
                            ProjectId = 8L,
                            Score = 8f
                        },
                        new
                        {
                            Id = 10L,
                            Comment = "Quản lý tốt.",
                            CriteriaId = 11L,
                            GradedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2861),
                            GradedBy = 14L,
                            GroupId = 9L,
                            ProjectId = 9L,
                            Score = 7.5f
                        },
                        new
                        {
                            Id = 11L,
                            Comment = "Tiện ích cao.",
                            CriteriaId = 12L,
                            GradedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2863),
                            GradedBy = 15L,
                            GroupId = 10L,
                            ProjectId = 10L,
                            Score = 8f
                        },
                        new
                        {
                            Id = 12L,
                            Comment = "Hiệu quả ổn.",
                            CriteriaId = 13L,
                            GradedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2866),
                            GradedBy = 4L,
                            GroupId = 11L,
                            ProjectId = 11L,
                            Score = 7f
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeAppeal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GradeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("StudentId");

                    b.ToTable("GradeAppeals");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3209),
                            GradeId = 1L,
                            Reason = "Điểm nội dung chưa hợp lý.",
                            Status = "PENDING",
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3211),
                            GradeId = 2L,
                            Reason = "Điểm trình bày thấp.",
                            Response = "Đã điều chỉnh điểm.",
                            Status = "APPROVED",
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3213),
                            GradeId = 3L,
                            Reason = "Điểm nội dung không hợp lý.",
                            Response = "Điểm đã hợp lý.",
                            Status = "REJECTED",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3215),
                            GradeId = 4L,
                            Reason = "Điểm nội dung thấp.",
                            Status = "PENDING",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3217),
                            GradeId = 5L,
                            Reason = "Cần xem lại điểm.",
                            Status = "PENDING",
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3219),
                            GradeId = 6L,
                            Reason = "Điểm thực hành chưa đúng.",
                            Response = "Đã điều chỉnh.",
                            Status = "APPROVED",
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3221),
                            GradeId = 7L,
                            Reason = "Điểm bảo mật không hợp lý.",
                            Response = "Điểm hợp lý.",
                            Status = "REJECTED",
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3223),
                            GradeId = 8L,
                            Reason = "Điểm phân tích thấp.",
                            Status = "PENDING",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3224),
                            GradeId = 9L,
                            Reason = "Điểm ứng dụng chưa đúng.",
                            Response = "Đã điều chỉnh.",
                            Status = "APPROVED",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3226),
                            GradeId = 10L,
                            Reason = "Điểm quản lý chưa hợp lý.",
                            Response = "Điểm hợp lý.",
                            Status = "REJECTED",
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3228),
                            GradeId = 11L,
                            Reason = "Điểm tiện ích thấp.",
                            Status = "PENDING",
                            StudentId = 12L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeCriteria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("GradeCriteria");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CourseId = 1L,
                            Description = "Chất lượng nội dung đồ án.",
                            Name = "Nội dung",
                            Weight = 0.4f
                        },
                        new
                        {
                            Id = 2L,
                            CourseId = 1L,
                            Description = "Cách trình bày báo cáo.",
                            Name = "Trình bày",
                            Weight = 0.3f
                        },
                        new
                        {
                            Id = 3L,
                            CourseId = 1L,
                            Description = "Kỹ năng bảo vệ.",
                            Name = "Bảo vệ",
                            Weight = 0.3f
                        },
                        new
                        {
                            Id = 4L,
                            CourseId = 2L,
                            Description = "Chất lượng nội dung đồ án cơ sở.",
                            Name = "Nội dung",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 5L,
                            CourseId = 2L,
                            Description = "Kỹ năng thực hành.",
                            Name = "Thực hành",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 6L,
                            CourseId = 3L,
                            Description = "Chất lượng nội dung đồ án KTPM.",
                            Name = "Nội dung",
                            Weight = 0.4f
                        },
                        new
                        {
                            Id = 7L,
                            CourseId = 4L,
                            Description = "Kỹ năng thực hành KTPM.",
                            Name = "Thực hành",
                            Weight = 0.6f
                        },
                        new
                        {
                            Id = 8L,
                            CourseId = 5L,
                            Description = "Mức độ bảo mật.",
                            Name = "Bảo mật",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 9L,
                            CourseId = 6L,
                            Description = "Kỹ năng phân tích dữ liệu.",
                            Name = "Phân tích",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 10L,
                            CourseId = 7L,
                            Description = "Ứng dụng thực tế.",
                            Name = "Ứng dụng",
                            Weight = 0.4f
                        },
                        new
                        {
                            Id = 11L,
                            CourseId = 8L,
                            Description = "Khả năng quản lý kho.",
                            Name = "Quản lý",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 12L,
                            CourseId = 9L,
                            Description = "Tính tiện ích của app.",
                            Name = "Tiện ích",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 13L,
                            CourseId = 10L,
                            Description = "Hiệu quả quản lý nhân sự.",
                            Name = "Hiệu quả",
                            Weight = 0.5f
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("GradeId")
                        .HasColumnType("bigint");

                    b.Property<long>("LecturerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("LecturerId");

                    b.ToTable("GradeLogs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2992),
                            Details = "Tạo điểm cho nhóm 1.",
                            GradeId = 1L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 2L,
                            Action = "UPDATE",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2994),
                            Details = "Cập nhật điểm nhóm 1.",
                            GradeId = 1L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 3L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2996),
                            Details = "Tạo điểm cho nhóm 1.",
                            GradeId = 2L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 4L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2998),
                            Details = "Tạo điểm cho nhóm 2.",
                            GradeId = 3L,
                            LecturerId = 5L
                        },
                        new
                        {
                            Id = 5L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3080),
                            Details = "Tạo điểm cho nhóm 3.",
                            GradeId = 4L,
                            LecturerId = 6L
                        },
                        new
                        {
                            Id = 6L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3082),
                            Details = "Tạo điểm cho nhóm 4.",
                            GradeId = 5L,
                            LecturerId = 14L
                        },
                        new
                        {
                            Id = 7L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3084),
                            Details = "Tạo điểm cho nhóm 5.",
                            GradeId = 6L,
                            LecturerId = 15L
                        },
                        new
                        {
                            Id = 8L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3085),
                            Details = "Tạo điểm cho nhóm 6.",
                            GradeId = 7L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 9L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3087),
                            Details = "Tạo điểm cho nhóm 7.",
                            GradeId = 8L,
                            LecturerId = 5L
                        },
                        new
                        {
                            Id = 10L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3089),
                            Details = "Tạo điểm cho nhóm 8.",
                            GradeId = 9L,
                            LecturerId = 6L
                        },
                        new
                        {
                            Id = 11L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3091),
                            Details = "Tạo điểm cho nhóm 9.",
                            GradeId = 10L,
                            LecturerId = 14L
                        },
                        new
                        {
                            Id = 12L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3092),
                            Details = "Tạo điểm cho nhóm 10.",
                            GradeId = 11L,
                            LecturerId = 15L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeSchedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<long>("LecturerId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LecturerId");

                    b.HasIndex("ProjectId");

                    b.ToTable("GradeSchedules");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3144),
                            Deadline = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 4L,
                            ProjectId = 1L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3147),
                            Deadline = new DateTime(2025, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 5L,
                            ProjectId = 2L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3149),
                            Deadline = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 6L,
                            ProjectId = 3L,
                            Status = "COMPLETED"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3151),
                            Deadline = new DateTime(2025, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 14L,
                            ProjectId = 4L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3153),
                            Deadline = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 15L,
                            ProjectId = 5L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3155),
                            Deadline = new DateTime(2025, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 4L,
                            ProjectId = 6L,
                            Status = "COMPLETED"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3157),
                            Deadline = new DateTime(2025, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 5L,
                            ProjectId = 7L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3159),
                            Deadline = new DateTime(2025, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 6L,
                            ProjectId = 8L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3161),
                            Deadline = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 14L,
                            ProjectId = 9L,
                            Status = "COMPLETED"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3163),
                            Deadline = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 15L,
                            ProjectId = 10L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3165),
                            Deadline = new DateTime(2025, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 4L,
                            ProjectId = 11L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3167),
                            Deadline = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 5L,
                            ProjectId = 12L,
                            Status = "COMPLETED"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GradeId")
                        .HasColumnType("bigint");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.ToTable("GradeVersions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 19, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2918),
                            GradeId = 1L,
                            Score = 8f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 2L,
                            Comment = "Cập nhật điểm.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2920),
                            GradeId = 1L,
                            Score = 8.5f,
                            VersionNumber = 2
                        },
                        new
                        {
                            Id = 3L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2922),
                            GradeId = 2L,
                            Score = 8f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 4L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2924),
                            GradeId = 3L,
                            Score = 7.5f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 5L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2926),
                            GradeId = 4L,
                            Score = 8f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 6L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2928),
                            GradeId = 5L,
                            Score = 7f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 7L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2929),
                            GradeId = 6L,
                            Score = 8.5f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 8L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2931),
                            GradeId = 7L,
                            Score = 9f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 9L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2933),
                            GradeId = 8L,
                            Score = 6.5f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 10L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2935),
                            GradeId = 9L,
                            Score = 8f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 11L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2936),
                            GradeId = 10L,
                            Score = 7.5f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 12L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2938),
                            GradeId = 11L,
                            Score = 8f,
                            VersionNumber = 1
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LecturerId")
                        .HasColumnType("bigint");

                    b.Property<int>("MaxMembers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LecturerId");

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2006),
                            MaxMembers = 5,
                            Name = "Nhóm 1",
                            ProjectId = 1L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2007)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2012),
                            MaxMembers = 5,
                            Name = "Nhóm 2",
                            ProjectId = 2L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2013)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2017),
                            MaxMembers = 5,
                            Name = "Nhóm 3",
                            ProjectId = 3L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2017)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2021),
                            MaxMembers = 5,
                            Name = "Nhóm 4",
                            ProjectId = 4L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2021)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2025),
                            MaxMembers = 5,
                            Name = "Nhóm 5",
                            ProjectId = 5L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2026)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2029),
                            MaxMembers = 5,
                            Name = "Nhóm 6",
                            ProjectId = 6L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2030)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2034),
                            MaxMembers = 5,
                            Name = "Nhóm 7",
                            ProjectId = 7L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2034)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2078),
                            MaxMembers = 5,
                            Name = "Nhóm 8",
                            ProjectId = 8L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2078)
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2083),
                            MaxMembers = 5,
                            Name = "Nhóm 9",
                            ProjectId = 9L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2083)
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2087),
                            MaxMembers = 5,
                            Name = "Nhóm 10",
                            ProjectId = 10L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2087)
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2091),
                            MaxMembers = 5,
                            Name = "Nhóm 11",
                            ProjectId = 11L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2092)
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2095),
                            MaxMembers = 5,
                            Name = "Nhóm 12",
                            ProjectId = 12L,
                            Status = "PENDING",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2096)
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2100),
                            MaxMembers = 5,
                            Name = "Nhóm 13",
                            ProjectId = 13L,
                            Status = "PENDING",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2100)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GroupMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudentId");

                    b.ToTable("GroupMembers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            GroupId = 1L,
                            JoinedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2146),
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            GroupId = 1L,
                            JoinedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2148),
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 3L,
                            GroupId = 2L,
                            JoinedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2149),
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 4L,
                            GroupId = 3L,
                            JoinedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2151),
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            GroupId = 3L,
                            JoinedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2153),
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            GroupId = 4L,
                            JoinedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2154),
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 7L,
                            GroupId = 4L,
                            JoinedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2156),
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 8L,
                            GroupId = 5L,
                            JoinedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2157),
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            GroupId = 6L,
                            JoinedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2159),
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            GroupId = 7L,
                            JoinedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2160),
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            GroupId = 8L,
                            JoinedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2162),
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            GroupId = 9L,
                            JoinedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2163),
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 13L,
                            GroupId = 10L,
                            JoinedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2165),
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 14L,
                            GroupId = 11L,
                            JoinedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2166),
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 15L,
                            GroupId = 12L,
                            JoinedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2168),
                            StudentId = 7L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GroupRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudentId");

                    b.ToTable("GroupRequests");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2221),
                            GroupId = 1L,
                            Status = "PENDING",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2223),
                            GroupId = 2L,
                            Status = "APPROVED",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2225),
                            GroupId = 3L,
                            Status = "REJECTED",
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2227),
                            GroupId = 4L,
                            Status = "PENDING",
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2229),
                            GroupId = 5L,
                            Status = "APPROVED",
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2230),
                            GroupId = 6L,
                            Status = "PENDING",
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2232),
                            GroupId = 7L,
                            Status = "APPROVED",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2234),
                            GroupId = 8L,
                            Status = "REJECTED",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2235),
                            GroupId = 9L,
                            Status = "PENDING",
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2237),
                            GroupId = 10L,
                            Status = "APPROVED",
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2239),
                            GroupId = 11L,
                            Status = "PENDING",
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2240),
                            GroupId = 12L,
                            Status = "REJECTED",
                            StudentId = 7L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Logs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Action = "LOGIN",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4943),
                            Details = "Admin đăng nhập hệ thống.",
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Action = "SUBMISSION",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4945),
                            Details = "Sinh viên nộp bài cho đồ án 1.",
                            UserId = 7L
                        },
                        new
                        {
                            Id = 3L,
                            Action = "JOIN_GROUP",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4947),
                            Details = "Sinh viên tham gia Nhóm 1.",
                            UserId = 8L
                        },
                        new
                        {
                            Id = 4L,
                            Action = "SEND_MESSAGE",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4949),
                            Details = "Gửi tin nhắn trong Nhóm 2.",
                            UserId = 9L
                        },
                        new
                        {
                            Id = 5L,
                            Action = "SUBMISSION",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4951),
                            Details = "Sinh viên nộp bài cho đồ án 3.",
                            UserId = 10L
                        },
                        new
                        {
                            Id = 6L,
                            Action = "CREATE_TASK",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4952),
                            Details = "Tạo nhiệm vụ mới trong đồ án 4.",
                            UserId = 11L
                        },
                        new
                        {
                            Id = 7L,
                            Action = "JOIN_GROUP",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4954),
                            Details = "Sinh viên tham gia Nhóm 5.",
                            UserId = 12L
                        },
                        new
                        {
                            Id = 8L,
                            Action = "SEND_MESSAGE",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4956),
                            Details = "Gửi tin nhắn trong Nhóm 6.",
                            UserId = 13L
                        },
                        new
                        {
                            Id = 9L,
                            Action = "GRADE",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4957),
                            Details = "Chấm điểm cho Nhóm 1.",
                            UserId = 4L
                        },
                        new
                        {
                            Id = 10L,
                            Action = "GRADE",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4959),
                            Details = "Chấm điểm cho Nhóm 2.",
                            UserId = 5L
                        },
                        new
                        {
                            Id = 11L,
                            Action = "CREATE_PROJECT",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4961),
                            Details = "Tạo đồ án mới.",
                            UserId = 6L
                        },
                        new
                        {
                            Id = 12L,
                            Action = "UPDATE_PROJECT",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4962),
                            Details = "Cập nhật đồ án 4.",
                            UserId = 14L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Meeting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("GroupId");

                    b.ToTable("Meetings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3568),
                            CreatedBy = 4L,
                            EndTime = new DateTime(2025, 2, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 1L,
                            Location = "Phòng B101",
                            StartTime = new DateTime(2025, 2, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 1"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3571),
                            CreatedBy = 5L,
                            EndTime = new DateTime(2025, 2, 17, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 2L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 2, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 2"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3580),
                            CreatedBy = 6L,
                            EndTime = new DateTime(2025, 2, 24, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 3L,
                            Location = "Phòng B102",
                            StartTime = new DateTime(2025, 2, 24, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 3"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3582),
                            CreatedBy = 14L,
                            EndTime = new DateTime(2025, 3, 3, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 4L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 3, 3, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 4"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3585),
                            CreatedBy = 15L,
                            EndTime = new DateTime(2025, 3, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 5L,
                            Location = "Phòng B103",
                            StartTime = new DateTime(2025, 3, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 5"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3587),
                            CreatedBy = 4L,
                            EndTime = new DateTime(2025, 3, 17, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 6L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 3, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 6"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3590),
                            CreatedBy = 5L,
                            EndTime = new DateTime(2025, 3, 24, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 7L,
                            Location = "Phòng B104",
                            StartTime = new DateTime(2025, 3, 24, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 7"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3592),
                            CreatedBy = 6L,
                            EndTime = new DateTime(2025, 3, 31, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 8L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 3, 31, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 8"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3595),
                            CreatedBy = 14L,
                            EndTime = new DateTime(2025, 4, 7, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 9L,
                            Location = "Phòng B105",
                            StartTime = new DateTime(2025, 4, 7, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 9"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3597),
                            CreatedBy = 15L,
                            EndTime = new DateTime(2025, 4, 14, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 10L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 4, 14, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 10"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3600),
                            CreatedBy = 4L,
                            EndTime = new DateTime(2025, 4, 21, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 11L,
                            Location = "Phòng B106",
                            StartTime = new DateTime(2025, 4, 21, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 11"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3603),
                            CreatedBy = 5L,
                            EndTime = new DateTime(2025, 4, 28, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 12L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 4, 28, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 12"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.MeetingRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("MeetingId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MeetingId");

                    b.ToTable("MeetingRecords");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3643),
                            FilePath = "records/meeting1.mp3",
                            MeetingId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3644),
                            FilePath = "records/meeting2.mp4",
                            MeetingId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3646),
                            FilePath = "records/meeting3.mp3",
                            MeetingId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3648),
                            FilePath = "records/meeting4.mp4",
                            MeetingId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3650),
                            FilePath = "records/meeting5.mp3",
                            MeetingId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3651),
                            FilePath = "records/meeting6.mp4",
                            MeetingId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3653),
                            FilePath = "records/meeting7.mp3",
                            MeetingId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3654),
                            FilePath = "records/meeting8.mp4",
                            MeetingId = 8L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3656),
                            FilePath = "records/meeting9.mp3",
                            MeetingId = 9L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3657),
                            FilePath = "records/meeting10.mp4",
                            MeetingId = 10L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3659),
                            FilePath = "records/meeting11.mp3",
                            MeetingId = 11L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3660),
                            FilePath = "records/meeting12.mp4",
                            MeetingId = 12L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("RecipientType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Hạn nộp là 28/02/2025.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3721),
                            RecipientType = "user",
                            Status = "SENT",
                            Title = "Hạn nộp đồ án",
                            Type = "WEB",
                            UserId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Bài nộp đã được phản hồi.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3724),
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Phản hồi bài nộp",
                            Type = "EMAIL",
                            UserId = 9L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Bạn được thêm vào Nhóm 1.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3730),
                            GroupId = 1L,
                            RecipientType = "user",
                            Status = "SENT",
                            Title = "Nhóm mới",
                            Type = "WEB",
                            UserId = 8L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Họp nhóm vào 14:00, 03/03/2025.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3732),
                            GroupId = 3L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Họp nhóm",
                            Type = "WEB",
                            UserId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            Content = "Đồ án Nhóm 4 cần chỉnh sửa.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3735),
                            GroupId = 4L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Phản hồi đồ án",
                            Type = "WEB",
                            UserId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Bạn được giao nhiệm vụ mới.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3737),
                            GroupId = 5L,
                            RecipientType = "user",
                            Status = "SENT",
                            Title = "Nhiệm vụ mới",
                            Type = "WEB",
                            UserId = 12L
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Điểm của Nhóm 6 đã được cập nhật.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3740),
                            GroupId = 6L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Cập nhật điểm",
                            Type = "WEB",
                            UserId = 13L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "Hạn chót nhiệm vụ là 10/03/2025.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3742),
                            GroupId = 7L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Hạn chót nhiệm vụ",
                            Type = "WEB",
                            UserId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Lịch bảo vệ: 08/03/2025, A108.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3745),
                            GroupId = 8L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Lịch bảo vệ",
                            Type = "WEB",
                            UserId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "Nhóm 9 nhận phản hồi mới.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3747),
                            GroupId = 9L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Phản hồi mới",
                            Type = "WEB",
                            UserId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Đồ án Nhóm 10 đã được phê duyệt.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3750),
                            GroupId = 10L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Cập nhật đồ án",
                            Type = "WEB",
                            UserId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            Content = "Nhiệm vụ của Nhóm 11 đã hoàn thành.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3752),
                            GroupId = 11L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Nhiệm vụ hoàn thành",
                            Type = "WEB",
                            UserId = 11L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.PeerReview", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("RevieweeId")
                        .HasColumnType("bigint");

                    b.Property<long>("ReviewerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("RevieweeId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("PeerReviews");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Comment = "Làm việc tốt.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3799),
                            GroupId = 1L,
                            RevieweeId = 8L,
                            ReviewerId = 7L,
                            Score = 8
                        },
                        new
                        {
                            Id = 2L,
                            Comment = "Cần cải thiện giao tiếp.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3801),
                            GroupId = 1L,
                            RevieweeId = 7L,
                            ReviewerId = 8L,
                            Score = 7
                        },
                        new
                        {
                            Id = 3L,
                            Comment = "Hỗ trợ nhóm tốt.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3803),
                            GroupId = 3L,
                            RevieweeId = 11L,
                            ReviewerId = 10L,
                            Score = 9
                        },
                        new
                        {
                            Id = 4L,
                            Comment = "Cần chủ động hơn.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3805),
                            GroupId = 3L,
                            RevieweeId = 10L,
                            ReviewerId = 11L,
                            Score = 6
                        },
                        new
                        {
                            Id = 5L,
                            Comment = "Đóng góp tích cực.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3807),
                            GroupId = 4L,
                            RevieweeId = 13L,
                            ReviewerId = 12L,
                            Score = 8
                        },
                        new
                        {
                            Id = 6L,
                            Comment = "Cần cải thiện kỹ năng.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3809),
                            GroupId = 4L,
                            RevieweeId = 12L,
                            ReviewerId = 13L,
                            Score = 7
                        },
                        new
                        {
                            Id = 7L,
                            Comment = "Làm việc hiệu quả.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3811),
                            GroupId = 5L,
                            RevieweeId = 8L,
                            ReviewerId = 7L,
                            Score = 9
                        },
                        new
                        {
                            Id = 8L,
                            Comment = "Cần tập trung hơn.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3812),
                            GroupId = 6L,
                            RevieweeId = 9L,
                            ReviewerId = 8L,
                            Score = 6
                        },
                        new
                        {
                            Id = 9L,
                            Comment = "Hợp tác tốt.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3814),
                            GroupId = 7L,
                            RevieweeId = 10L,
                            ReviewerId = 9L,
                            Score = 8
                        },
                        new
                        {
                            Id = 10L,
                            Comment = "Cần cải thiện thái độ.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3816),
                            GroupId = 8L,
                            RevieweeId = 11L,
                            ReviewerId = 10L,
                            Score = 7
                        },
                        new
                        {
                            Id = 11L,
                            Comment = "Đóng góp lớn.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3818),
                            GroupId = 9L,
                            RevieweeId = 12L,
                            ReviewerId = 11L,
                            Score = 9
                        },
                        new
                        {
                            Id = 12L,
                            Comment = "Làm việc ổn.",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3820),
                            GroupId = 10L,
                            RevieweeId = 13L,
                            ReviewerId = 12L,
                            Score = 8
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("ProjectCode")
                        .IsUnique();

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CourseId = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1765),
                            Description = "Phát triển ứng dụng AI hỗ trợ chẩn đoán bệnh.",
                            GroupId = 1L,
                            ProjectCode = "AI_YTE_2025_01",
                            Status = "NOT_SUBMITTED",
                            Title = "Ứng dụng AI trong y tế",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1766)
                        },
                        new
                        {
                            Id = 2L,
                            CourseId = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1771),
                            Description = "Xây dựng hệ thống quản lý đồ án sinh viên.",
                            GroupId = 2L,
                            ProjectCode = "QLDA_2025_01",
                            Status = "NOT_SUBMITTED",
                            Title = "Hệ thống quản lý đồ án",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1772)
                        },
                        new
                        {
                            Id = 3L,
                            CourseId = 2L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1776),
                            Description = "Phát triển website bán hàng trực tuyến.",
                            GroupId = 3L,
                            ProjectCode = "TMĐT_2025_01",
                            Status = "NOT_SUBMITTED",
                            Title = "Ứng dụng thương mại điện tử",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1777)
                        },
                        new
                        {
                            Id = 4L,
                            CourseId = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1781),
                            Description = "Xây dựng hệ thống phân tích dữ liệu thời gian thực.",
                            GroupId = 4L,
                            ProjectCode = "PTDL_2025_01",
                            Status = "SUBMITTED",
                            Title = "Phân tích dữ liệu thời gian thực",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1781)
                        },
                        new
                        {
                            Id = 5L,
                            CourseId = 4L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1785),
                            Description = "Phát triển app quản lý học tập cho sinh viên.",
                            GroupId = 5L,
                            ProjectCode = "QLHT_2025_01",
                            Status = "SUBMITTED",
                            Title = "Ứng dụng quản lý học tập",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1786)
                        },
                        new
                        {
                            Id = 6L,
                            CourseId = 5L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1790),
                            Description = "Xây dựng giải pháp bảo mật cho thiết bị IoT.",
                            GroupId = 6L,
                            ProjectCode = "BM_IOT_2025_01",
                            Status = "SUBMITTED",
                            Title = "Hệ thống bảo mật IoT",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1790)
                        },
                        new
                        {
                            Id = 7L,
                            CourseId = 6L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1795),
                            Description = "Phân tích hành vi người dùng trên mạng xã hội.",
                            GroupId = 7L,
                            ProjectCode = "PTMXH_2025_01",
                            Status = "SUBMITTED",
                            Title = "Phân tích dữ liệu mạng xã hội",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1795)
                        },
                        new
                        {
                            Id = 8L,
                            CourseId = 7L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1799),
                            Description = "Phát triển app học ngoại ngữ với AI.",
                            GroupId = 9L,
                            ProjectCode = "HNN_2025_01",
                            Status = "GRADED",
                            Title = "Ứng dụng học ngoại ngữ",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1800)
                        },
                        new
                        {
                            Id = 9L,
                            CourseId = 8L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1804),
                            Description = "Xây dựng hệ thống quản lý kho hàng tự động.",
                            GroupId = 8L,
                            ProjectCode = "QLK_2025_01",
                            Status = "GRADED",
                            Title = "Hệ thống quản lý kho",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1804)
                        },
                        new
                        {
                            Id = 10L,
                            CourseId = 9L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1856),
                            Description = "Phát triển app đặt lịch khám bệnh trực tuyến.",
                            GroupId = 10L,
                            ProjectCode = "DLKB_2025_01",
                            Status = "GRADED",
                            Title = "Ứng dụng đặt lịch khám bệnh",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1856)
                        },
                        new
                        {
                            Id = 11L,
                            CourseId = 10L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1860),
                            Description = "Xây dựng hệ thống quản lý nhân sự cho doanh nghiệp.",
                            GroupId = 12L,
                            ProjectCode = "QLNS_2025_01",
                            Status = "GRADED",
                            Title = "Hệ thống quản lý nhân sự",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1861)
                        },
                        new
                        {
                            Id = 12L,
                            CourseId = 11L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1865),
                            Description = "Phát triển app hỗ trợ học tập nhóm.",
                            GroupId = 11L,
                            ProjectCode = "HTN_2025_01",
                            Status = "PENDING",
                            Title = "Ứng dụng học tập nhóm",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1866)
                        },
                        new
                        {
                            Id = 13L,
                            CourseId = 12L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1870),
                            Description = "Xây dựng hệ thống phân tích tài chính cá nhân.",
                            GroupId = 13L,
                            ProjectCode = "PTTC_2025_01",
                            Status = "PENDING",
                            Title = "Hệ thống phân tích tài chính",
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1870)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.ProjectVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectVersions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1922),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 1L,
                            Title = "Ứng dụng AI trong y tế",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 19, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1924),
                            Description = "Cập nhật mô tả.",
                            ProjectId = 1L,
                            Title = "Ứng dụng AI trong y tế (Cập nhật)",
                            VersionNumber = 2
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1932),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 2L,
                            Title = "Hệ thống quản lý đồ án",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1934),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 3L,
                            Title = "Ứng dụng thương mại điện tử",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1936),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 4L,
                            Title = "Phân tích dữ liệu thời gian thực",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1937),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 5L,
                            Title = "Ứng dụng quản lý học tập",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1939),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 6L,
                            Title = "Hệ thống bảo mật IoT",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1941),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 7L,
                            Title = "Phân tích dữ liệu mạng xã hội",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1942),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 8L,
                            Title = "Ứng dụng học ngoại ngữ",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1944),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 9L,
                            Title = "Hệ thống quản lý kho",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1946),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 10L,
                            Title = "Ứng dụng đặt lịch khám bệnh",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1948),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 11L,
                            Title = "Hệ thống quản lý nhân sự",
                            VersionNumber = 1
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ProjectId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Ứng dụng AI của bạn giải quyết vấn đề gì?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4023),
                            CreatedBy = 4L,
                            ProjectId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Hệ thống quản lý đồ án có những tính năng gì?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4025),
                            CreatedBy = 5L,
                            ProjectId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Website thương mại điện tử có tích hợp thanh toán không?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4027),
                            CreatedBy = 6L,
                            ProjectId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Phân tích dữ liệu thời gian thực dùng công nghệ gì?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4029),
                            CreatedBy = 14L,
                            ProjectId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Content = "App quản lý học tập có hỗ trợ offline không?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4031),
                            CreatedBy = 15L,
                            ProjectId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Hệ thống bảo mật IoT đã kiểm tra lỗ hổng chưa?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4032),
                            CreatedBy = 4L,
                            ProjectId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Phân tích dữ liệu mạng xã hội có chính xác không?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4034),
                            CreatedBy = 5L,
                            ProjectId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "App học ngoại ngữ hỗ trợ bao nhiêu ngôn ngữ?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4036),
                            CreatedBy = 6L,
                            ProjectId = 8L
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Hệ thống quản lý kho có tự động hóa không?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4037),
                            CreatedBy = 14L,
                            ProjectId = 9L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "App đặt lịch khám bệnh có thông báo nhắc nhở không?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4039),
                            CreatedBy = 15L,
                            ProjectId = 10L
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Hệ thống quản lý nhân sự có báo cáo không?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4041),
                            CreatedBy = 4L,
                            ProjectId = 11L
                        },
                        new
                        {
                            Id = 12L,
                            Content = "App học tập nhóm có tính năng chat không?",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4042),
                            CreatedBy = 5L,
                            ProjectId = 12L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Resource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3949),
                            CreatedBy = 4L,
                            FilePath = "resources/ai_doc.pdf",
                            ProjectId = 1L,
                            Title = "Tài liệu AI",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3951),
                            CreatedBy = 5L,
                            FilePath = "resources/report_template.docx",
                            GroupId = 2L,
                            Title = "Mẫu báo cáo",
                            Type = "SAMPLE"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3954),
                            CreatedBy = 6L,
                            FilePath = "resources/ecommerce.pdf",
                            ProjectId = 3L,
                            Title = "Tài liệu thương mại điện tử",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3956),
                            CreatedBy = 14L,
                            FilePath = "resources/data_analysis.pdf",
                            ProjectId = 4L,
                            Title = "Hướng dẫn phân tích dữ liệu",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3958),
                            CreatedBy = 15L,
                            FilePath = "resources/study_management.pdf",
                            ProjectId = 5L,
                            Title = "Tài liệu quản lý học tập",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3960),
                            CreatedBy = 4L,
                            FilePath = "resources/iot_security.pdf",
                            ProjectId = 6L,
                            Title = "Tài liệu bảo mật IoT",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3962),
                            CreatedBy = 5L,
                            FilePath = "resources/social_media_analysis.pdf",
                            ProjectId = 7L,
                            Title = "Phân tích mạng xã hội",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3964),
                            CreatedBy = 6L,
                            FilePath = "resources/language_learning.pdf",
                            ProjectId = 8L,
                            Title = "Tài liệu học ngoại ngữ",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3966),
                            CreatedBy = 14L,
                            FilePath = "resources/warehouse_management.pdf",
                            ProjectId = 9L,
                            Title = "Hướng dẫn quản lý kho",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3968),
                            CreatedBy = 15L,
                            FilePath = "resources/booking_system.pdf",
                            ProjectId = 10L,
                            Title = "Tài liệu đặt lịch khám bệnh",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3970),
                            CreatedBy = 4L,
                            FilePath = "resources/hr_management.pdf",
                            ProjectId = 11L,
                            Title = "Tài liệu quản lý nhân sự",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(3972),
                            CreatedBy = 5L,
                            FilePath = "resources/group_study.pdf",
                            ProjectId = 12L,
                            Title = "Hướng dẫn học tập nhóm",
                            Type = "REFERENCE"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "Quản trị viên",
                            Name = "ROLE_ADMIN"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "Giảng viên hướng dẫn",
                            Name = "ROLE_LECTURER_GUIDE"
                        },
                        new
                        {
                            Id = 3L,
                            Description = "Sinh viên",
                            Name = "ROLE_STUDENT"
                        },
                        new
                        {
                            Id = 4L,
                            Description = "Trưởng bộ môn",
                            Name = "ROLE_HEAD"
                        },
                        new
                        {
                            Id = 5L,
                            Description = "Giảng viên phản biện",
                            Name = "ROLE_LECTURER_REVIEW"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.RolePermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("EditGrading")
                        .HasColumnType("bit");

                    b.Property<bool>("EditProjects")
                        .HasColumnType("bit");

                    b.Property<bool>("EditUsers")
                        .HasColumnType("bit");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ViewGrading")
                        .HasColumnType("bit");

                    b.Property<bool>("ViewProjects")
                        .HasColumnType("bit");

                    b.Property<bool>("ViewUsers")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            EditGrading = true,
                            EditProjects = true,
                            EditUsers = true,
                            RoleId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5310),
                            ViewGrading = true,
                            ViewProjects = true,
                            ViewUsers = true
                        },
                        new
                        {
                            Id = 2L,
                            EditGrading = false,
                            EditProjects = false,
                            EditUsers = false,
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5313),
                            ViewGrading = false,
                            ViewProjects = true,
                            ViewUsers = false
                        },
                        new
                        {
                            Id = 3L,
                            EditGrading = false,
                            EditProjects = false,
                            EditUsers = false,
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5315),
                            ViewGrading = false,
                            ViewProjects = true,
                            ViewUsers = false
                        },
                        new
                        {
                            Id = 4L,
                            EditGrading = false,
                            EditProjects = false,
                            EditUsers = false,
                            RoleId = 4L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5317),
                            ViewGrading = false,
                            ViewProjects = true,
                            ViewUsers = false
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Semester", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Semesters");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5101),
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HK2-2025",
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5104),
                            EndDate = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HK1-2025",
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5106),
                            EndDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HK3-2025",
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SkillAssessment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("Skill")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("SkillAssessments");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4379),
                            Score = 8,
                            Skill = "Lập trình Python",
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4382),
                            Score = 7,
                            Skill = "Thiết kế giao diện",
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4384),
                            Score = 9,
                            Skill = "Phân tích dữ liệu",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4385),
                            Score = 6,
                            Skill = "Lập trình Java",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4387),
                            Score = 8,
                            Skill = "Quản lý dự án",
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4389),
                            Score = 7,
                            Skill = "Kiểm thử phần mềm",
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4391),
                            Score = 9,
                            Skill = "Lập trình JavaScript",
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4392),
                            Score = 6,
                            Skill = "Giao tiếp nhóm",
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4394),
                            Score = 8,
                            Skill = "Thiết kế cơ sở dữ liệu",
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4396),
                            Score = 7,
                            Skill = "Tích hợp API",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4398),
                            Score = 8,
                            Skill = "Lập trình C#",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4400),
                            Score = 9,
                            Skill = "Phân tích yêu cầu",
                            StudentId = 11L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.StudentCourse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EnrolledAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId", "CourseId")
                        .IsUnique();

                    b.ToTable("StudentCourses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CourseId = 1L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5145),
                            Status = "ENROLLED",
                            StudentId = 7L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5146)
                        },
                        new
                        {
                            Id = 2L,
                            CourseId = 1L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5192),
                            Status = "ENROLLED",
                            StudentId = 8L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5193)
                        },
                        new
                        {
                            Id = 3L,
                            CourseId = 1L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5196),
                            Status = "ENROLLED",
                            StudentId = 9L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5196)
                        },
                        new
                        {
                            Id = 4L,
                            CourseId = 1L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5198),
                            Status = "ENROLLED",
                            StudentId = 10L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5199)
                        },
                        new
                        {
                            Id = 5L,
                            CourseId = 1L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5201),
                            Status = "ENROLLED",
                            StudentId = 11L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5201)
                        },
                        new
                        {
                            Id = 6L,
                            CourseId = 2L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5203),
                            Status = "ENROLLED",
                            StudentId = 12L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5204)
                        },
                        new
                        {
                            Id = 7L,
                            CourseId = 2L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5206),
                            Status = "ENROLLED",
                            StudentId = 13L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5207)
                        },
                        new
                        {
                            Id = 8L,
                            CourseId = 3L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5209),
                            Status = "ENROLLED",
                            StudentId = 7L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5209)
                        },
                        new
                        {
                            Id = 9L,
                            CourseId = 3L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5211),
                            Status = "ENROLLED",
                            StudentId = 8L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5212)
                        },
                        new
                        {
                            Id = 10L,
                            CourseId = 4L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5214),
                            Status = "ENROLLED",
                            StudentId = 9L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5214)
                        },
                        new
                        {
                            Id = 11L,
                            CourseId = 4L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5216),
                            Status = "ENROLLED",
                            StudentId = 10L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5217)
                        },
                        new
                        {
                            Id = 12L,
                            CourseId = 5L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5219),
                            Status = "ENROLLED",
                            StudentId = 11L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5220)
                        },
                        new
                        {
                            Id = 13L,
                            CourseId = 5L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5222),
                            Status = "ENROLLED",
                            StudentId = 12L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5222)
                        },
                        new
                        {
                            Id = 14L,
                            CourseId = 6L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5224),
                            Status = "ENROLLED",
                            StudentId = 13L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5225)
                        },
                        new
                        {
                            Id = 15L,
                            CourseId = 6L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5227),
                            Status = "ENROLLED",
                            StudentId = 7L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5227)
                        },
                        new
                        {
                            Id = 16L,
                            CourseId = 7L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5229),
                            Status = "COMPLETED",
                            StudentId = 8L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5230)
                        },
                        new
                        {
                            Id = 17L,
                            CourseId = 7L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5232),
                            Status = "COMPLETED",
                            StudentId = 9L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5232)
                        },
                        new
                        {
                            Id = 18L,
                            CourseId = 8L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5234),
                            Status = "COMPLETED",
                            StudentId = 10L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5235)
                        },
                        new
                        {
                            Id = 19L,
                            CourseId = 8L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5237),
                            Status = "COMPLETED",
                            StudentId = 11L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5237)
                        },
                        new
                        {
                            Id = 20L,
                            CourseId = 9L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5239),
                            Status = "COMPLETED",
                            StudentId = 12L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5240)
                        },
                        new
                        {
                            Id = 21L,
                            CourseId = 9L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5242),
                            Status = "COMPLETED",
                            StudentId = 13L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5242)
                        },
                        new
                        {
                            Id = 22L,
                            CourseId = 10L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5244),
                            Status = "COMPLETED",
                            StudentId = 7L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5245)
                        },
                        new
                        {
                            Id = 23L,
                            CourseId = 10L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5247),
                            Status = "COMPLETED",
                            StudentId = 8L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5247)
                        },
                        new
                        {
                            Id = 24L,
                            CourseId = 11L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5250),
                            Status = "ENROLLED",
                            StudentId = 9L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5250)
                        },
                        new
                        {
                            Id = 25L,
                            CourseId = 11L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5252),
                            Status = "ENROLLED",
                            StudentId = 10L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5253)
                        },
                        new
                        {
                            Id = 26L,
                            CourseId = 12L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5255),
                            Status = "ENROLLED",
                            StudentId = 11L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5255)
                        },
                        new
                        {
                            Id = 27L,
                            CourseId = 12L,
                            EnrolledAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5257),
                            Status = "ENROLLED",
                            StudentId = 12L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(5258)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Submission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Submissions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FilePath = "submissions/dt001.pdf",
                            GroupId = 1L,
                            ProjectId = 1L,
                            Status = "SUBMITTED",
                            SubmittedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2421),
                            Version = 1
                        },
                        new
                        {
                            Id = 2L,
                            FilePath = "submissions/dt002.pdf",
                            GroupId = 2L,
                            ProjectId = 2L,
                            Status = "VALIDATED",
                            SubmittedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2425),
                            Version = 1
                        },
                        new
                        {
                            Id = 3L,
                            FilePath = "submissions/dt003.pdf",
                            GroupId = 3L,
                            ProjectId = 3L,
                            Status = "SUBMITTED",
                            SubmittedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2428),
                            Version = 1
                        },
                        new
                        {
                            Id = 4L,
                            FilePath = "submissions/dt004.pdf",
                            GroupId = 4L,
                            ProjectId = 4L,
                            Status = "REJECTED",
                            SubmittedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2430),
                            Version = 1
                        },
                        new
                        {
                            Id = 5L,
                            FilePath = "submissions/dt005.pdf",
                            GroupId = 5L,
                            ProjectId = 5L,
                            Status = "SUBMITTED",
                            SubmittedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2433),
                            Version = 1
                        },
                        new
                        {
                            Id = 6L,
                            FilePath = "submissions/dt006.pdf",
                            GroupId = 6L,
                            ProjectId = 6L,
                            Status = "VALIDATED",
                            SubmittedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2435),
                            Version = 1
                        },
                        new
                        {
                            Id = 7L,
                            FilePath = "submissions/dt007.pdf",
                            GroupId = 7L,
                            ProjectId = 7L,
                            Status = "SUBMITTED",
                            SubmittedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2437),
                            Version = 1
                        },
                        new
                        {
                            Id = 8L,
                            FilePath = "submissions/dt008.pdf",
                            GroupId = 8L,
                            ProjectId = 8L,
                            Status = "REJECTED",
                            SubmittedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2440),
                            Version = 1
                        },
                        new
                        {
                            Id = 9L,
                            FilePath = "submissions/dt009.pdf",
                            GroupId = 9L,
                            ProjectId = 9L,
                            Status = "SUBMITTED",
                            SubmittedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2442),
                            Version = 1
                        },
                        new
                        {
                            Id = 10L,
                            FilePath = "submissions/dt010.pdf",
                            GroupId = 10L,
                            ProjectId = 10L,
                            Status = "VALIDATED",
                            SubmittedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2445),
                            Version = 1
                        },
                        new
                        {
                            Id = 11L,
                            FilePath = "submissions/dt011.pdf",
                            GroupId = 11L,
                            ProjectId = 11L,
                            Status = "SUBMITTED",
                            SubmittedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2447),
                            Version = 1
                        },
                        new
                        {
                            Id = 12L,
                            FilePath = "submissions/dt012.pdf",
                            GroupId = 12L,
                            ProjectId = 12L,
                            Status = "REJECTED",
                            SubmittedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2450),
                            Version = 1
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SubmissionVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("SubmissionId")
                        .HasColumnType("bigint");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId");

                    b.ToTable("SubmissionVersions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2501),
                            FilePath = "submissions/dt001_v1.pdf",
                            SubmissionId = 1L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 19, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2503),
                            FilePath = "submissions/dt001_v2.pdf",
                            SubmissionId = 1L,
                            VersionNumber = 2
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2506),
                            FilePath = "submissions/dt002_v1.pdf",
                            SubmissionId = 2L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2508),
                            FilePath = "submissions/dt003_v1.pdf",
                            SubmissionId = 3L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2509),
                            FilePath = "submissions/dt004_v1.pdf",
                            SubmissionId = 4L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2511),
                            FilePath = "submissions/dt005_v1.pdf",
                            SubmissionId = 5L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2513),
                            FilePath = "submissions/dt006_v1.pdf",
                            SubmissionId = 6L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2515),
                            FilePath = "submissions/dt007_v1.pdf",
                            SubmissionId = 7L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2516),
                            FilePath = "submissions/dt008_v1.pdf",
                            SubmissionId = 8L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2518),
                            FilePath = "submissions/dt009_v1.pdf",
                            SubmissionId = 9L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2520),
                            FilePath = "submissions/dt010_v1.pdf",
                            SubmissionId = 10L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2522),
                            FilePath = "submissions/dt011_v1.pdf",
                            SubmissionId = 11L,
                            VersionNumber = 1
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SystemConfig", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("SystemConfigs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4547),
                            Key = "LOGO_URL",
                            Value = "images/hutech_logo.png"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4549),
                            Key = "THEME_COLOR",
                            Value = "#1976d2"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4551),
                            Key = "EMAIL_SERVER",
                            Value = "smtp.hutech.edu.vn"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4553),
                            Key = "MAX_FILE_SIZE",
                            Value = "10485760"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4554),
                            Key = "DEFAULT_LANGUAGE",
                            Value = "vi"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4556),
                            Key = "NOTIFICATION_DURATION",
                            Value = "7"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4558),
                            Key = "SESSION_TIMEOUT",
                            Value = "30"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4559),
                            Key = "BACKUP_FREQUENCY",
                            Value = "daily"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4561),
                            Key = "ALLOWED_FILE_TYPES",
                            Value = "pdf,docx,zip"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4562),
                            Key = "TIMEZONE",
                            Value = "Asia/Ho_Chi_Minh"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4564),
                            Key = "MAX_LOGIN_ATTEMPTS",
                            Value = "5"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4565),
                            Key = "CHAT_ENABLED",
                            Value = "true"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SystemMetric", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MetricType")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("MetricType");

                    b.ToTable("SystemMetrics");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4617),
                            MetricType = "CPU",
                            Value = 45.5f
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4619),
                            MetricType = "RAM",
                            Value = 60f
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4621),
                            MetricType = "DISK",
                            Value = 75f
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4623),
                            MetricType = "NETWORK",
                            Value = 120.5f
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 20, 17, 55, 45, 619, DateTimeKind.Utc).AddTicks(4624),
                            MetricType = "CPU",
                            Value = 50f
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 20, 17, 55, 45, 619, DateTimeKind.Utc).AddTicks(4626),
                            MetricType = "RAM",
                            Value = 65f
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 20, 17, 55, 45, 619, DateTimeKind.Utc).AddTicks(4628),
                            MetricType = "DISK",
                            Value = 80f
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 20, 17, 55, 45, 619, DateTimeKind.Utc).AddTicks(4630),
                            MetricType = "NETWORK",
                            Value = 130f
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 20, 16, 55, 45, 619, DateTimeKind.Utc).AddTicks(4632),
                            MetricType = "CPU",
                            Value = 55f
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 20, 16, 55, 45, 619, DateTimeKind.Utc).AddTicks(4634),
                            MetricType = "RAM",
                            Value = 70f
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 20, 16, 55, 45, 619, DateTimeKind.Utc).AddTicks(4635),
                            MetricType = "DISK",
                            Value = 85f
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 20, 16, 55, 45, 619, DateTimeKind.Utc).AddTicks(4637),
                            MetricType = "NETWORK",
                            Value = 140f
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Task", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("StudentId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2291),
                            Deadline = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phân tích yêu cầu hệ thống AI.",
                            GroupId = 1L,
                            ProjectId = 1L,
                            Status = "TODO",
                            Title = "Phân tích yêu cầu"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2295),
                            Deadline = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thiết kế giao diện quản lý đồ án.",
                            ProjectId = 2L,
                            Status = "IN_PROGRESS",
                            StudentId = 9L,
                            Title = "Thiết kế giao diện"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2298),
                            Deadline = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thiết kế và triển khai CSDL.",
                            GroupId = 3L,
                            ProjectId = 3L,
                            Status = "DONE",
                            Title = "Xây dựng cơ sở dữ liệu"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2300),
                            Deadline = new DateTime(2025, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tích hợp API phân tích dữ liệu.",
                            ProjectId = 4L,
                            Status = "IN_PROGRESS",
                            StudentId = 12L,
                            Title = "Tích hợp API"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2303),
                            Deadline = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phát triển tính năng quản lý lịch học.",
                            GroupId = 5L,
                            ProjectId = 5L,
                            Status = "TODO",
                            Title = "Phát triển tính năng"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2305),
                            Deadline = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Kiểm tra lỗ hổng bảo mật IoT.",
                            ProjectId = 6L,
                            Status = "IN_PROGRESS",
                            StudentId = 8L,
                            Title = "Kiểm tra bảo mật"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2308),
                            Deadline = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thu thập dữ liệu từ mạng xã hội.",
                            GroupId = 7L,
                            ProjectId = 7L,
                            Status = "DONE",
                            Title = "Thu thập dữ liệu"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2310),
                            Deadline = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tích hợp AI vào app học ngoại ngữ.",
                            ProjectId = 8L,
                            Status = "IN_PROGRESS",
                            StudentId = 10L,
                            Title = "Tích hợp AI"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2313),
                            Deadline = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thiết kế hệ thống quản lý kho.",
                            GroupId = 9L,
                            ProjectId = 9L,
                            Status = "TODO",
                            Title = "Thiết kế hệ thống"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2315),
                            Deadline = new DateTime(2025, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phát triển giao diện đặt lịch khám.",
                            ProjectId = 10L,
                            Status = "IN_PROGRESS",
                            StudentId = 12L,
                            Title = "Phát triển giao diện"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2318),
                            Deadline = new DateTime(2025, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Kiểm tra chức năng quản lý nhân sự.",
                            GroupId = 11L,
                            ProjectId = 11L,
                            Status = "DONE",
                            Title = "Kiểm tra chức năng"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(2320),
                            Deadline = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tích hợp tính năng chat nhóm.",
                            ProjectId = 12L,
                            Status = "TODO",
                            StudentId = 13L,
                            Title = "Tích hợp chat"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.TimeTracking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("StudentId");

                    b.ToTable("TimeTrackings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4453),
                            Duration = 120,
                            EndTime = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4451),
                            ProjectId = 1L,
                            StartTime = new DateTime(2025, 5, 20, 16, 55, 45, 619, DateTimeKind.Utc).AddTicks(4449),
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4457),
                            Duration = 60,
                            EndTime = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4456),
                            ProjectId = 1L,
                            StartTime = new DateTime(2025, 5, 20, 17, 55, 45, 619, DateTimeKind.Utc).AddTicks(4455),
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4460),
                            Duration = 180,
                            EndTime = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4459),
                            ProjectId = 2L,
                            StartTime = new DateTime(2025, 5, 20, 15, 55, 45, 619, DateTimeKind.Utc).AddTicks(4458),
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4463),
                            Duration = 60,
                            EndTime = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4462),
                            ProjectId = 3L,
                            StartTime = new DateTime(2025, 5, 20, 17, 55, 45, 619, DateTimeKind.Utc).AddTicks(4462),
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4470),
                            Duration = 120,
                            EndTime = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4469),
                            ProjectId = 4L,
                            StartTime = new DateTime(2025, 5, 20, 16, 55, 45, 619, DateTimeKind.Utc).AddTicks(4465),
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4477),
                            Duration = 240,
                            EndTime = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4473),
                            ProjectId = 5L,
                            StartTime = new DateTime(2025, 5, 20, 14, 55, 45, 619, DateTimeKind.Utc).AddTicks(4471),
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4480),
                            Duration = 60,
                            EndTime = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4479),
                            ProjectId = 6L,
                            StartTime = new DateTime(2025, 5, 20, 17, 55, 45, 619, DateTimeKind.Utc).AddTicks(4478),
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4485),
                            Duration = 120,
                            EndTime = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4484),
                            ProjectId = 7L,
                            StartTime = new DateTime(2025, 5, 20, 16, 55, 45, 619, DateTimeKind.Utc).AddTicks(4481),
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4488),
                            Duration = 180,
                            EndTime = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4487),
                            ProjectId = 8L,
                            StartTime = new DateTime(2025, 5, 20, 15, 55, 45, 619, DateTimeKind.Utc).AddTicks(4487),
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4491),
                            Duration = 60,
                            EndTime = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4490),
                            ProjectId = 9L,
                            StartTime = new DateTime(2025, 5, 20, 17, 55, 45, 619, DateTimeKind.Utc).AddTicks(4490),
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4494),
                            Duration = 120,
                            EndTime = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4493),
                            ProjectId = 10L,
                            StartTime = new DateTime(2025, 5, 20, 16, 55, 45, 619, DateTimeKind.Utc).AddTicks(4493),
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4498),
                            Duration = 180,
                            EndTime = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(4497),
                            ProjectId = 11L,
                            StartTime = new DateTime(2025, 5, 20, 15, 55, 45, 619, DateTimeKind.Utc).AddTicks(4496),
                            StudentId = 11L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ClassCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FailedLoginAttempts")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GroupId");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1228),
                            Email = "admin@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Quản trị viên",
                            Locked = false,
                            Password = "$2a$11$Tp6OZQcjnAawJC6aCZ/jZu1pyWDh0oGBhRgu9xkiUycbcWRqHVY22",
                            RoleId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1228),
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2L,
                            AvatarUrl = "/font-end/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1240),
                            DepartmentId = 1L,
                            Email = "AND123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Nguyễn Đình Ánh",
                            Locked = false,
                            Password = "$2a$11$Tp6OZQcjnAawJC6aCZ/jZu1pyWDh0oGBhRgu9xkiUycbcWRqHVY22",
                            RoleId = 4L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1240),
                            Username = "AND123456789"
                        },
                        new
                        {
                            Id = 3L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1368),
                            DepartmentId = 2L,
                            Email = "HVT123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Văn Thiên Hoàng",
                            Locked = false,
                            Password = "$2a$11$Tp6OZQcjnAawJC6aCZ/jZu1pyWDh0oGBhRgu9xkiUycbcWRqHVY22",
                            RoleId = 4L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1368),
                            Username = "HVT123456789"
                        },
                        new
                        {
                            Id = 4L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CourseId = 1L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1375),
                            Email = "CNH123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Nguyễn Huy Cường",
                            Locked = false,
                            Password = "$2a$11$Tp6OZQcjnAawJC6aCZ/jZu1pyWDh0oGBhRgu9xkiUycbcWRqHVY22",
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1376),
                            Username = "CNH123456789"
                        },
                        new
                        {
                            Id = 5L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CourseId = 2L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1382),
                            Email = "TNT123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Nguyễn Thanh Tùng",
                            Locked = false,
                            Password = "$2a$11$Tp6OZQcjnAawJC6aCZ/jZu1pyWDh0oGBhRgu9xkiUycbcWRqHVY22",
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1382),
                            Username = "TNT123456789"
                        },
                        new
                        {
                            Id = 6L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CourseId = 3L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1389),
                            Email = "KBP123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Bùi Phú Khuyên",
                            Locked = false,
                            Password = "$2a$11$Tp6OZQcjnAawJC6aCZ/jZu1pyWDh0oGBhRgu9xkiUycbcWRqHVY22",
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1389),
                            Username = "KBP123456789"
                        },
                        new
                        {
                            Id = 7L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA1",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1413),
                            DepartmentId = 1L,
                            Email = "2180601452@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Nguyễn Tri Bão Thắng",
                            Locked = false,
                            Password = "$2a$11$Tp6OZQcjnAawJC6aCZ/jZu1pyWDh0oGBhRgu9xkiUycbcWRqHVY22",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1413),
                            Username = "2180601452"
                        },
                        new
                        {
                            Id = 8L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA1",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1420),
                            DepartmentId = 1L,
                            Email = "2180600307@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Huỳnh Thành Đô",
                            Locked = false,
                            Password = "$2a$11$Tp6OZQcjnAawJC6aCZ/jZu1pyWDh0oGBhRgu9xkiUycbcWRqHVY22",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1421),
                            Username = "2180600307"
                        },
                        new
                        {
                            Id = 9L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA1",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1427),
                            DepartmentId = 1L,
                            Email = "1911256118@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Nguyễn Thuận An",
                            Locked = false,
                            Password = "$2a$11$Tp6OZQcjnAawJC6aCZ/jZu1pyWDh0oGBhRgu9xkiUycbcWRqHVY22",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1428),
                            Username = "1911256118"
                        },
                        new
                        {
                            Id = 10L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA1",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1481),
                            DepartmentId = 2L,
                            Email = "2180603746@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Võ Thành Trung",
                            Locked = false,
                            Password = "$2a$11$Tp6OZQcjnAawJC6aCZ/jZu1pyWDh0oGBhRgu9xkiUycbcWRqHVY22",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1482),
                            Username = "2180603746"
                        },
                        new
                        {
                            Id = 11L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA1",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1489),
                            DepartmentId = 3L,
                            Email = "2180603747@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Lê Quang Vinh",
                            Locked = false,
                            Password = "$2a$11$Tp6OZQcjnAawJC6aCZ/jZu1pyWDh0oGBhRgu9xkiUycbcWRqHVY22",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1489),
                            Username = "2180603747"
                        },
                        new
                        {
                            Id = 12L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA2",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1496),
                            DepartmentId = 3L,
                            Email = "2180603748@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Trần Quang Tài",
                            Locked = false,
                            Password = "$2a$11$Tp6OZQcjnAawJC6aCZ/jZu1pyWDh0oGBhRgu9xkiUycbcWRqHVY22",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1496),
                            Username = "2180603748"
                        },
                        new
                        {
                            Id = 13L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA2",
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1503),
                            DepartmentId = 3L,
                            Email = "2180603749@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Trần Văn Tuệ",
                            Locked = false,
                            Password = "$2a$11$Tp6OZQcjnAawJC6aCZ/jZu1pyWDh0oGBhRgu9xkiUycbcWRqHVY22",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1503),
                            Username = "2180603749"
                        },
                        new
                        {
                            Id = 14L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CourseId = 4L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1510),
                            DepartmentId = 2L,
                            Email = "TDTT123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Đặng Thị Thạch Thảo",
                            Locked = false,
                            Password = "$2a$11$Tp6OZQcjnAawJC6aCZ/jZu1pyWDh0oGBhRgu9xkiUycbcWRqHVY22",
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1510),
                            Username = "TDTT123456789"
                        },
                        new
                        {
                            Id = 15L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CourseId = 5L,
                            CreatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1517),
                            DepartmentId = 3L,
                            Email = "CHM123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Hàn Minh Châu",
                            Locked = false,
                            Password = "$2a$11$Tp6OZQcjnAawJC6aCZ/jZu1pyWDh0oGBhRgu9xkiUycbcWRqHVY22",
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 5, 20, 18, 55, 45, 619, DateTimeKind.Utc).AddTicks(1517),
                            Username = "CHM123456789"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.AISuggestion", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("AISuggestions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany("AISuggestions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Backup", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Calendar", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Calendars")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany("Calendars")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.CodeRun", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Submission", "Submission")
                        .WithMany("CodeRuns")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.CommitteeMember", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.DefenseCommittee", "Committee")
                        .WithMany("CommitteeMembers")
                        .HasForeignKey("CommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany("CommitteeMembers")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Committee");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Course", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Semester", "Semester")
                        .WithMany("Courses")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.DefenseCommittee", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.DefenseSchedule", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("DefenseSchedules")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Discussion", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("Discussions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany("Discussions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Feedback", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany("Feedbacks")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Submission", "Submission")
                        .WithMany("Feedbacks")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.FeedbackSurvey", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany("FeedbackSurveys")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Grade", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.GradeCriteria", "Criteria")
                        .WithMany("Grades")
                        .HasForeignKey("CriteriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "GradedByUser")
                        .WithMany("GradedGrades")
                        .HasForeignKey("GradedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Grades")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("Grades")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Criteria");

                    b.Navigation("GradedByUser");

                    b.Navigation("Group");

                    b.Navigation("Project");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeAppeal", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Grade", "Grade")
                        .WithMany("GradeAppeals")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("GradeAppeals")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeCriteria", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Course", "Course")
                        .WithMany("GradeCriteria")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeLog", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Grade", "Grade")
                        .WithMany("GradeLogs")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany("GradeLogs")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeSchedule", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany("GradeSchedules")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("GradeSchedules")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeVersion", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Grade", "Grade")
                        .WithMany("GradeVersions")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Group", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany()
                        .HasForeignKey("LecturerId");

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithOne("Group")
                        .HasForeignKey("EduProject_TADProgrammer.Entities.Group", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GroupMember", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("GroupMembers")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("GroupMembers")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GroupRequest", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("GroupRequests")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("GroupRequests")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Log", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany("Logs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Meeting", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "CreatedByUser")
                        .WithMany("Meetings")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Meetings")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.MeetingRecord", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Meeting", "Meeting")
                        .WithMany("MeetingRecords")
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Notification", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Notifications")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.PeerReview", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("PeerReviews")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Reviewee")
                        .WithMany("PeerReviewsAsReviewee")
                        .HasForeignKey("RevieweeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Reviewer")
                        .WithMany("PeerReviewsAsReviewer")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Reviewee");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Project", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Course", "Course")
                        .WithMany("Projects")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.ProjectVersion", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("ProjectVersions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Question", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "CreatedByUser")
                        .WithMany("Questions")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("Questions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Resource", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "CreatedByUser")
                        .WithMany("Resources")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Resources")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("Resources")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("Group");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.RolePermission", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SkillAssessment", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("SkillAssessments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.StudentCourse", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Submission", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Submissions")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("Submissions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SubmissionVersion", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Submission", "Submission")
                        .WithMany("SubmissionVersions")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Task", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Tasks")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("Tasks")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Group");

                    b.Navigation("Project");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.TimeTracking", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("TimeTrackings")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("TimeTrackings")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.User", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Course", "Course")
                        .WithMany("Lecturers")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EduProject_TADProgrammer.Entities.Department", "Department")
                        .WithMany("HeadLecturers")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("EduProject_TADProgrammer.Entities.Group", null)
                        .WithMany("Students")
                        .HasForeignKey("GroupId");

                    b.HasOne("EduProject_TADProgrammer.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Department");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Course", b =>
                {
                    b.Navigation("GradeCriteria");

                    b.Navigation("Lecturers");

                    b.Navigation("Projects");

                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.DefenseCommittee", b =>
                {
                    b.Navigation("CommitteeMembers");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("HeadLecturers");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Grade", b =>
                {
                    b.Navigation("GradeAppeals");

                    b.Navigation("GradeLogs");

                    b.Navigation("GradeVersions");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeCriteria", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Group", b =>
                {
                    b.Navigation("Calendars");

                    b.Navigation("Grades");

                    b.Navigation("GroupMembers");

                    b.Navigation("GroupRequests");

                    b.Navigation("Meetings");

                    b.Navigation("Notifications");

                    b.Navigation("PeerReviews");

                    b.Navigation("Resources");

                    b.Navigation("Students");

                    b.Navigation("Submissions");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Meeting", b =>
                {
                    b.Navigation("MeetingRecords");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Project", b =>
                {
                    b.Navigation("AISuggestions");

                    b.Navigation("DefenseSchedules");

                    b.Navigation("Discussions");

                    b.Navigation("GradeSchedules");

                    b.Navigation("Grades");

                    b.Navigation("Group")
                        .IsRequired();

                    b.Navigation("ProjectVersions");

                    b.Navigation("Questions");

                    b.Navigation("Resources");

                    b.Navigation("Submissions");

                    b.Navigation("Tasks");

                    b.Navigation("TimeTrackings");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Semester", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Submission", b =>
                {
                    b.Navigation("CodeRuns");

                    b.Navigation("Feedbacks");

                    b.Navigation("SubmissionVersions");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.User", b =>
                {
                    b.Navigation("AISuggestions");

                    b.Navigation("Calendars");

                    b.Navigation("CommitteeMembers");

                    b.Navigation("Discussions");

                    b.Navigation("FeedbackSurveys");

                    b.Navigation("Feedbacks");

                    b.Navigation("GradeAppeals");

                    b.Navigation("GradeLogs");

                    b.Navigation("GradeSchedules");

                    b.Navigation("GradedGrades");

                    b.Navigation("Grades");

                    b.Navigation("GroupMembers");

                    b.Navigation("GroupRequests");

                    b.Navigation("Logs");

                    b.Navigation("Meetings");

                    b.Navigation("Notifications");

                    b.Navigation("PeerReviewsAsReviewee");

                    b.Navigation("PeerReviewsAsReviewer");

                    b.Navigation("Questions");

                    b.Navigation("Resources");

                    b.Navigation("SkillAssessments");

                    b.Navigation("StudentCourses");

                    b.Navigation("Tasks");

                    b.Navigation("TimeTrackings");
                });
#pragma warning restore 612, 618
        }
    }
}
