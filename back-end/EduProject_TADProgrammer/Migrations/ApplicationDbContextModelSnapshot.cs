// <auto-generated />
using System;
using EduProject_TADProgrammer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduProject_TADProgrammer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.AISuggestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("AISuggestions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Đề xuất thêm tính năng phân tích dữ liệu thời gian thực.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3447),
                            Type = "PROJECT",
                            UserId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Điểm nội dung có thể tăng nếu bổ sung tài liệu tham khảo.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3450),
                            ProjectId = 1L,
                            Type = "GRADE"
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Nên tích hợp tính năng chat vào hệ thống quản lý.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3453),
                            Type = "PROJECT",
                            UserId = 8L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Điểm trình bày có thể tăng nếu cải thiện bố cục.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3455),
                            ProjectId = 2L,
                            Type = "GRADE"
                        },
                        new
                        {
                            Id = 5L,
                            Content = "Đề xuất thêm cổng thanh toán cho website thương mại.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3459),
                            Type = "PROJECT",
                            UserId = 9L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Điểm nội dung có thể tăng nếu bổ sung ví dụ thực tế.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3462),
                            ProjectId = 3L,
                            Type = "GRADE"
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Nên tích hợp công cụ phân tích dữ liệu mạnh hơn.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3465),
                            Type = "PROJECT",
                            UserId = 10L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "Điểm phân tích có thể tăng nếu cải thiện độ chính xác.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3468),
                            ProjectId = 4L,
                            Type = "GRADE"
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Đề xuất thêm chế độ offline cho app quản lý học tập.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3471),
                            Type = "PROJECT",
                            UserId = 11L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "Điểm thực hành có thể tăng nếu bổ sung tính năng.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3473),
                            ProjectId = 5L,
                            Type = "GRADE"
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Nên tăng cường bảo mật cho hệ thống IoT.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3477),
                            Type = "PROJECT",
                            UserId = 12L
                        },
                        new
                        {
                            Id = 12L,
                            Content = "Điểm bảo mật có thể tăng nếu kiểm tra kỹ hơn.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3480),
                            ProjectId = 6L,
                            Type = "GRADE"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Backup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Backups");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3637),
                            CreatedBy = 1L,
                            Description = "Daily full database backup",
                            FilePath = "backups/db_backup_2025_02_01.sql",
                            FileSize = 104857600L,
                            Status = "Success",
                            Type = "Full",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3637)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 26, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3642),
                            CreatedBy = 1L,
                            Description = "Incremental backup for Feb 2",
                            FilePath = "backups/db_backup_2025_02_02.sql",
                            FileSize = 52428800L,
                            Status = "Success",
                            Type = "Incremental",
                            UpdatedAt = new DateTime(2025, 5, 26, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3643)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 25, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3647),
                            CreatedBy = 2L,
                            Description = "Daily full database backup",
                            FilePath = "backups/db_backup_2025_02_03.sql",
                            FileSize = 110100480L,
                            Status = "Success",
                            Type = "Full",
                            UpdatedAt = new DateTime(2025, 5, 25, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3648)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 24, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3652),
                            Description = "Differential backup for Feb 4",
                            FilePath = "backups/db_backup_2025_02_04.sql",
                            FileSize = 73400320L,
                            Status = "Success",
                            Type = "Differential",
                            UpdatedAt = new DateTime(2025, 5, 24, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3653)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 23, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3656),
                            CreatedBy = 1L,
                            Description = "Incremental backup failed due to disk space",
                            FilePath = "backups/db_backup_2025_02_05.sql",
                            Status = "Failed",
                            Type = "Incremental",
                            UpdatedAt = new DateTime(2025, 5, 23, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3664)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 22, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3667),
                            CreatedBy = 2L,
                            Description = "Weekly full database backup",
                            FilePath = "backups/db_backup_2025_02_06.sql",
                            FileSize = 115343360L,
                            Status = "Success",
                            Type = "Full",
                            UpdatedAt = new DateTime(2025, 5, 22, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3668)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 21, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3672),
                            Description = "Incremental backup for Feb 7",
                            FilePath = "backups/db_backup_2025_02_07.sql",
                            FileSize = 41943040L,
                            Status = "Success",
                            Type = "Incremental",
                            UpdatedAt = new DateTime(2025, 5, 21, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3673)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 20, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3675),
                            CreatedBy = 1L,
                            Description = "Differential backup in progress",
                            FilePath = "backups/db_backup_2025_02_08.sql",
                            Status = "Pending",
                            Type = "Differential",
                            UpdatedAt = new DateTime(2025, 5, 20, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3676)
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 19, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3679),
                            CreatedBy = 2L,
                            Description = "Daily full database backup",
                            FilePath = "backups/db_backup_2025_02_09.sql",
                            FileSize = 120586240L,
                            Status = "Success",
                            Type = "Full",
                            UpdatedAt = new DateTime(2025, 5, 19, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3680)
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 18, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3683),
                            Description = "Incremental backup for Feb 10",
                            FilePath = "backups/db_backup_2025_02_10.sql",
                            FileSize = 52428800L,
                            Status = "Success",
                            Type = "Incremental",
                            UpdatedAt = new DateTime(2025, 5, 18, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3684)
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 17, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3687),
                            CreatedBy = 1L,
                            Description = "Differential backup for Feb 11",
                            FilePath = "backups/db_backup_2025_02_11.sql",
                            FileSize = 83886080L,
                            Status = "Success",
                            Type = "Differential",
                            UpdatedAt = new DateTime(2025, 5, 17, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3688)
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 16, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3692),
                            CreatedBy = 2L,
                            Description = "Daily full database backup",
                            FilePath = "backups/db_backup_2025_02_12.sql",
                            FileSize = 125829120L,
                            Status = "Success",
                            Type = "Full",
                            UpdatedAt = new DateTime(2025, 5, 16, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3693)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Calendar", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAllDay")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Calendars");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3221),
                            Description = "Họp nhóm để thảo luận tiến độ dự án",
                            EndTime = new DateTime(2025, 2, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            IsAllDay = false,
                            Location = "Phòng họp A",
                            StartTime = new DateTime(2025, 2, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3222),
                            UserId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3228),
                            Description = "Nộp bài tập lớn môn Lập trình",
                            EndTime = new DateTime(2025, 2, 28, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Nộp bài",
                            GroupId = 1L,
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 2, 28, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Deadline",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3229),
                            UserId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3234),
                            Description = "Họp nhóm để phân công nhiệm vụ",
                            EndTime = new DateTime(2025, 2, 17, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 2L,
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 2, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3234),
                            UserId = 8L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3239),
                            Description = "Bảo vệ đồ án tốt nghiệp",
                            EndTime = new DateTime(2025, 3, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Bảo vệ đồ án",
                            IsAllDay = false,
                            Location = "Hội trường",
                            StartTime = new DateTime(2025, 3, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Other",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3240),
                            UserId = 9L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3246),
                            Description = "Họp nhóm để kiểm tra tiến độ",
                            EndTime = new DateTime(2025, 2, 24, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 3L,
                            IsAllDay = false,
                            Location = "Phòng họp C",
                            StartTime = new DateTime(2025, 2, 24, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3247),
                            UserId = 10L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3251),
                            Description = "Nộp báo cáo nhiệm vụ cá nhân",
                            EndTime = new DateTime(2025, 2, 25, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Hạn nộp nhiệm vụ",
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 2, 25, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Deadline",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3251),
                            UserId = 11L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3269),
                            Description = "Họp nhóm để chuẩn bị thuyết trình",
                            EndTime = new DateTime(2025, 3, 3, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 4L,
                            IsAllDay = false,
                            Location = "Phòng họp A",
                            StartTime = new DateTime(2025, 3, 3, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3270),
                            UserId = 12L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3274),
                            Description = "Bảo vệ đồ án chuyên ngành",
                            EndTime = new DateTime(2025, 3, 5, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Bảo vệ đồ án",
                            IsAllDay = false,
                            Location = "Hội trường",
                            StartTime = new DateTime(2025, 3, 5, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Other",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3274),
                            UserId = 13L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3279),
                            Description = "Họp nhóm để hoàn thiện dự án",
                            EndTime = new DateTime(2025, 3, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 5L,
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 3, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3279),
                            UserId = 7L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3283),
                            Description = "Nộp báo cáo thực tập",
                            EndTime = new DateTime(2025, 3, 15, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Hạn nộp nhiệm vụ",
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 3, 15, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Deadline",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3284),
                            UserId = 8L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3289),
                            Description = "Họp nhóm để đánh giá tiến độ",
                            EndTime = new DateTime(2025, 3, 17, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 6L,
                            IsAllDay = false,
                            Location = "Phòng họp C",
                            StartTime = new DateTime(2025, 3, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3289),
                            UserId = 9L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3293),
                            Description = "Bảo vệ đồ án tốt nghiệp",
                            EndTime = new DateTime(2025, 3, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Bảo vệ đồ án",
                            IsAllDay = false,
                            Location = "Hội trường",
                            StartTime = new DateTime(2025, 3, 20, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Other",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3294),
                            UserId = 10L
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2025, 5, 26, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3298),
                            Description = "Họp nhóm để phân tích yêu cầu dự án",
                            EndTime = new DateTime(2025, 3, 24, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 7L,
                            IsAllDay = false,
                            Location = "Phòng họp A",
                            StartTime = new DateTime(2025, 3, 24, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 26, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3300),
                            UserId = 11L
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(2025, 5, 26, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3307),
                            Description = "Nộp bài tập môn Cấu trúc dữ liệu",
                            EndTime = new DateTime(2025, 3, 25, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Hạn nộp bài tập",
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 3, 25, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Deadline",
                            UpdatedAt = new DateTime(2025, 5, 26, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3308),
                            UserId = 12L
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(2025, 5, 25, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3312),
                            Description = "Họp nhóm để chuẩn bị báo cáo",
                            EndTime = new DateTime(2025, 3, 31, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 8L,
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 3, 31, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 25, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3314),
                            UserId = 13L
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTime(2025, 5, 25, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3319),
                            Description = "Thi cuối kỳ môn Lập trình nâng cao",
                            EndTime = new DateTime(2025, 4, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Thi cuối kỳ",
                            IsAllDay = false,
                            Location = "Phòng thi 101",
                            StartTime = new DateTime(2025, 4, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Other",
                            UpdatedAt = new DateTime(2025, 5, 25, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3320),
                            UserId = 7L
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTime(2025, 5, 24, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3324),
                            Description = "Họp nhóm bị hủy do lịch trùng",
                            EndTime = new DateTime(2025, 4, 7, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 9L,
                            IsAllDay = false,
                            Location = "Phòng họp C",
                            StartTime = new DateTime(2025, 4, 7, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Cancelled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 24, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3325),
                            UserId = 8L
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTime(2025, 5, 24, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3330),
                            Description = "Nộp báo cáo dự án nhóm",
                            EndTime = new DateTime(2025, 4, 10, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Hạn nộp báo cáo",
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 4, 10, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Deadline",
                            UpdatedAt = new DateTime(2025, 5, 24, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3331),
                            UserId = 9L
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTime(2025, 5, 23, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3335),
                            Description = "Họp nhóm để hoàn thiện thuyết trình",
                            EndTime = new DateTime(2025, 4, 14, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 10L,
                            IsAllDay = false,
                            Location = "Phòng họp A",
                            StartTime = new DateTime(2025, 4, 14, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 23, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3336),
                            UserId = 10L
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTime(2025, 5, 23, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3340),
                            Description = "Thi cuối kỳ môn Cơ sở dữ liệu",
                            EndTime = new DateTime(2025, 4, 15, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Thi cuối kỳ",
                            IsAllDay = false,
                            Location = "Phòng thi 102",
                            StartTime = new DateTime(2025, 4, 15, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Other",
                            UpdatedAt = new DateTime(2025, 5, 23, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3341),
                            UserId = 11L
                        },
                        new
                        {
                            Id = 21L,
                            CreatedAt = new DateTime(2025, 5, 22, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3345),
                            Description = "Họp nhóm để đánh giá dự án",
                            EndTime = new DateTime(2025, 4, 21, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 11L,
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 4, 21, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 5, 22, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3346),
                            UserId = 12L
                        },
                        new
                        {
                            Id = 22L,
                            CreatedAt = new DateTime(2025, 5, 22, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3350),
                            Description = "Bảo vệ đồ án chuyên ngành",
                            EndTime = new DateTime(2025, 4, 25, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Bảo vệ đồ án",
                            IsAllDay = false,
                            Location = "Hội trường",
                            StartTime = new DateTime(2025, 4, 25, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Other",
                            UpdatedAt = new DateTime(2025, 5, 22, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3351),
                            UserId = 13L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.CodeRun", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("ExecutionTime")
                        .HasColumnType("real");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("PlagiarismScore")
                        .HasColumnType("real");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubmissionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId");

                    b.ToTable("CodeRuns");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Code = "print('Hello World')",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(278),
                            ExecutionTime = 50.5f,
                            Language = "Python",
                            PlagiarismScore = 0.1f,
                            Result = "Output: Hello World",
                            Status = "Success",
                            SubmissionId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(279)
                        },
                        new
                        {
                            Id = 2L,
                            Code = "public class Main { public static void main(String[] args) { System.out.println(\"Hello\"); } }",
                            CreatedAt = new DateTime(2025, 5, 27, 2, 50, 7, 466, DateTimeKind.Utc).AddTicks(283),
                            ExecutionTime = 120f,
                            Language = "Java",
                            PlagiarismScore = 0.2f,
                            Result = "Output: Hello",
                            Status = "Success",
                            SubmissionId = 2L,
                            UpdatedAt = new DateTime(2025, 5, 27, 2, 50, 7, 466, DateTimeKind.Utc).AddTicks(288)
                        },
                        new
                        {
                            Id = 3L,
                            Code = "console.log('Hello World');",
                            CreatedAt = new DateTime(2025, 5, 27, 1, 50, 7, 466, DateTimeKind.Utc).AddTicks(292),
                            ExecutionTime = 30.2f,
                            Language = "JavaScript",
                            PlagiarismScore = 0.15f,
                            Result = "Output: Hello World",
                            Status = "Success",
                            SubmissionId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 27, 1, 50, 7, 466, DateTimeKind.Utc).AddTicks(293)
                        },
                        new
                        {
                            Id = 4L,
                            Code = "print('Error Test')",
                            CreatedAt = new DateTime(2025, 5, 27, 0, 50, 7, 466, DateTimeKind.Utc).AddTicks(297),
                            ErrorMessage = "SyntaxError: unexpected EOF while parsing",
                            Language = "Python",
                            PlagiarismScore = 0.3f,
                            Result = "Error: Invalid syntax",
                            Status = "Failed",
                            SubmissionId = 4L,
                            UpdatedAt = new DateTime(2025, 5, 27, 0, 50, 7, 466, DateTimeKind.Utc).AddTicks(298)
                        },
                        new
                        {
                            Id = 5L,
                            Code = "public class Test { public static void main(String[] args) { System.out.println(\"Test\"); } }",
                            CreatedAt = new DateTime(2025, 5, 26, 23, 50, 7, 466, DateTimeKind.Utc).AddTicks(302),
                            ExecutionTime = 110.5f,
                            Language = "Java",
                            PlagiarismScore = 0.1f,
                            Result = "Output: Test",
                            Status = "Success",
                            SubmissionId = 5L,
                            UpdatedAt = new DateTime(2025, 5, 26, 23, 50, 7, 466, DateTimeKind.Utc).AddTicks(303)
                        },
                        new
                        {
                            Id = 6L,
                            Code = "print('IoT Security')",
                            CreatedAt = new DateTime(2025, 5, 26, 22, 50, 7, 466, DateTimeKind.Utc).AddTicks(306),
                            ExecutionTime = 45f,
                            Language = "Python",
                            PlagiarismScore = 0.05f,
                            Result = "Output: IoT Security",
                            Status = "Success",
                            SubmissionId = 6L,
                            UpdatedAt = new DateTime(2025, 5, 26, 22, 50, 7, 466, DateTimeKind.Utc).AddTicks(307)
                        },
                        new
                        {
                            Id = 7L,
                            Code = "console.log('Social Media');",
                            CreatedAt = new DateTime(2025, 5, 26, 21, 50, 7, 466, DateTimeKind.Utc).AddTicks(310),
                            ExecutionTime = 25.8f,
                            Language = "JavaScript",
                            PlagiarismScore = 0.2f,
                            Result = "Output: Social Media",
                            Status = "Success",
                            SubmissionId = 7L,
                            UpdatedAt = new DateTime(2025, 5, 26, 21, 50, 7, 466, DateTimeKind.Utc).AddTicks(311)
                        },
                        new
                        {
                            Id = 8L,
                            Code = "print('Language Learning')",
                            CreatedAt = new DateTime(2025, 5, 26, 20, 50, 7, 466, DateTimeKind.Utc).AddTicks(314),
                            ErrorMessage = "Process exceeded 5-second limit",
                            Language = "Python",
                            PlagiarismScore = 0.4f,
                            Result = "Execution timed out",
                            Status = "Timeout",
                            SubmissionId = 8L,
                            UpdatedAt = new DateTime(2025, 5, 26, 20, 50, 7, 466, DateTimeKind.Utc).AddTicks(315)
                        },
                        new
                        {
                            Id = 9L,
                            Code = "public class Warehouse { public static void main(String[] args) { System.out.println(\"Warehouse\"); } }",
                            CreatedAt = new DateTime(2025, 5, 26, 19, 50, 7, 466, DateTimeKind.Utc).AddTicks(319),
                            ExecutionTime = 130f,
                            Language = "Java",
                            PlagiarismScore = 0.1f,
                            Result = "Output: Warehouse",
                            Status = "Success",
                            SubmissionId = 9L,
                            UpdatedAt = new DateTime(2025, 5, 26, 19, 50, 7, 466, DateTimeKind.Utc).AddTicks(320)
                        },
                        new
                        {
                            Id = 10L,
                            Code = "print('Booking System')",
                            CreatedAt = new DateTime(2025, 5, 26, 18, 50, 7, 466, DateTimeKind.Utc).AddTicks(323),
                            ExecutionTime = 48.3f,
                            Language = "Python",
                            PlagiarismScore = 0.05f,
                            Result = "Output: Booking System",
                            Status = "Success",
                            SubmissionId = 10L,
                            UpdatedAt = new DateTime(2025, 5, 26, 18, 50, 7, 466, DateTimeKind.Utc).AddTicks(324)
                        },
                        new
                        {
                            Id = 11L,
                            Code = "console.log('HR System');",
                            CreatedAt = new DateTime(2025, 5, 26, 17, 50, 7, 466, DateTimeKind.Utc).AddTicks(327),
                            ExecutionTime = 28.7f,
                            Language = "JavaScript",
                            PlagiarismScore = 0.15f,
                            Result = "Output: HR System",
                            Status = "Success",
                            SubmissionId = 11L,
                            UpdatedAt = new DateTime(2025, 5, 26, 17, 50, 7, 466, DateTimeKind.Utc).AddTicks(328)
                        },
                        new
                        {
                            Id = 12L,
                            Code = "print('Group Study')",
                            CreatedAt = new DateTime(2025, 5, 26, 16, 50, 7, 466, DateTimeKind.Utc).AddTicks(331),
                            ErrorMessage = "NameError: name 'undefined_variable' is not defined",
                            Language = "Python",
                            PlagiarismScore = 0.3f,
                            Result = "Error: NameError",
                            Status = "Failed",
                            SubmissionId = 12L,
                            UpdatedAt = new DateTime(2025, 5, 26, 16, 50, 7, 466, DateTimeKind.Utc).AddTicks(332)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.CommitteeMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CommitteeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("LecturerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CommitteeId");

                    b.HasIndex("LecturerId");

                    b.ToTable("CommitteeMembers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CommitteeId = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1284),
                            LecturerId = 2L,
                            Role = "Chủ tịch",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1285)
                        },
                        new
                        {
                            Id = 2L,
                            CommitteeId = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1288),
                            LecturerId = 4L,
                            Role = "Thành viên",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1289)
                        },
                        new
                        {
                            Id = 3L,
                            CommitteeId = 2L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1292),
                            LecturerId = 3L,
                            Role = "Chủ tịch",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1293)
                        },
                        new
                        {
                            Id = 4L,
                            CommitteeId = 2L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1295),
                            LecturerId = 5L,
                            Role = "Thư ký",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1296)
                        },
                        new
                        {
                            Id = 5L,
                            CommitteeId = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1298),
                            LecturerId = 6L,
                            Role = "Thành viên",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1299)
                        },
                        new
                        {
                            Id = 6L,
                            CommitteeId = 4L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1302),
                            LecturerId = 14L,
                            Role = "Chủ tịch",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1302)
                        },
                        new
                        {
                            Id = 7L,
                            CommitteeId = 5L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1305),
                            LecturerId = 15L,
                            Role = "Thư ký",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1305)
                        },
                        new
                        {
                            Id = 8L,
                            CommitteeId = 6L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1307),
                            LecturerId = 4L,
                            Role = "Thành viên",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1308)
                        },
                        new
                        {
                            Id = 9L,
                            CommitteeId = 7L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1311),
                            LecturerId = 5L,
                            Role = "Chủ tịch",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1311)
                        },
                        new
                        {
                            Id = 10L,
                            CommitteeId = 8L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1313),
                            LecturerId = 6L,
                            Role = "Thư ký",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1314)
                        },
                        new
                        {
                            Id = 11L,
                            CommitteeId = 9L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1316),
                            LecturerId = 14L,
                            Role = "Thành viên",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1317)
                        },
                        new
                        {
                            Id = 12L,
                            CommitteeId = 10L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1319),
                            LecturerId = 15L,
                            Role = "Chủ tịch",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1320)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DefenseDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("SemesterId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("SemesterId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CourseCode = "CNTT_TN_2025",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8910),
                            DefenseDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp CNPM",
                            SemesterId = 1L,
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8911)
                        },
                        new
                        {
                            Id = 2L,
                            CourseCode = "CNTT_CS_2025",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8917),
                            DefenseDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở CNPM",
                            SemesterId = 1L,
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8918)
                        },
                        new
                        {
                            Id = 3L,
                            CourseCode = "KTPM_TN_2025",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8923),
                            DefenseDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp KTPM",
                            SemesterId = 1L,
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8923)
                        },
                        new
                        {
                            Id = 4L,
                            CourseCode = "KTPM_CS_2025",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8927),
                            DefenseDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở KTPM",
                            SemesterId = 1L,
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8928)
                        },
                        new
                        {
                            Id = 5L,
                            CourseCode = "ATTT_TN_2025",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8932),
                            DefenseDate = new DateTime(2025, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2L,
                            EndDate = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp ATTT",
                            SemesterId = 2L,
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8933)
                        },
                        new
                        {
                            Id = 6L,
                            CourseCode = "ATTT_CS_2025",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8940),
                            DefenseDate = new DateTime(2025, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2L,
                            EndDate = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở ATTT",
                            SemesterId = 2L,
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8941)
                        },
                        new
                        {
                            Id = 7L,
                            CourseCode = "KHMT_TN_2025",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8945),
                            DefenseDate = new DateTime(2025, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp KHMT",
                            SemesterId = 2L,
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8946)
                        },
                        new
                        {
                            Id = 8L,
                            CourseCode = "KHMT_CS_2025",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8951),
                            DefenseDate = new DateTime(2025, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở KHMT",
                            SemesterId = 2L,
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8951)
                        },
                        new
                        {
                            Id = 9L,
                            CourseCode = "HTTT_TN_2025",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8956),
                            DefenseDate = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp HTTT",
                            SemesterId = 3L,
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "PLANNED",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8957)
                        },
                        new
                        {
                            Id = 10L,
                            CourseCode = "HTTT_CS_2025",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8972),
                            DefenseDate = new DateTime(2025, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở HTTT",
                            SemesterId = 3L,
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "PLANNED",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8972)
                        },
                        new
                        {
                            Id = 11L,
                            CourseCode = "CNPM_TN_2025",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8978),
                            DefenseDate = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp TTNT",
                            SemesterId = 3L,
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "PLANNED",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8979)
                        },
                        new
                        {
                            Id = 12L,
                            CourseCode = "CNPM_CS_2025",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8997),
                            DefenseDate = new DateTime(2025, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở TTNT",
                            SemesterId = 3L,
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "PLANNED",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8998)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.DefenseCommittee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("SemesterId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("SemesterId");

                    b.ToTable("DefenseCommittees");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1168),
                            Name = "Hội đồng 1",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1169)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1173),
                            Name = "Hội đồng 2",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1174)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1177),
                            Name = "Hội đồng 3",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1177)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1180),
                            Name = "Hội đồng 4",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1181)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1183),
                            Name = "Hội đồng 5",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1184)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1187),
                            Name = "Hội đồng 6",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1187)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1190),
                            Name = "Hội đồng 7",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1191)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1194),
                            Name = "Hội đồng 8",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1194)
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1197),
                            Name = "Hội đồng 9",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1201)
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1203),
                            Name = "Hội đồng 10",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1204)
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1206),
                            Name = "Hội đồng 11",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1207)
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1209),
                            Name = "Hội đồng 12",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1210)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.DefenseSchedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("MeetingId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MeetingId");

                    b.HasIndex("ProjectId");

                    b.ToTable("DefenseSchedules");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1404),
                            EndTime = new DateTime(2025, 3, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            MeetingId = 1L,
                            ProjectId = 1L,
                            Room = "A101",
                            StartTime = new DateTime(2025, 3, 1, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1408),
                            EndTime = new DateTime(2025, 3, 2, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 2L,
                            Room = "A102",
                            StartTime = new DateTime(2025, 3, 2, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1411),
                            EndTime = new DateTime(2025, 3, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 3L,
                            Room = "A103",
                            StartTime = new DateTime(2025, 3, 3, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1414),
                            EndTime = new DateTime(2025, 3, 4, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 4L,
                            Room = "A104",
                            StartTime = new DateTime(2025, 3, 4, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1417),
                            EndTime = new DateTime(2025, 3, 5, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 5L,
                            Room = "A105",
                            StartTime = new DateTime(2025, 3, 5, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1419),
                            EndTime = new DateTime(2025, 3, 6, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 6L,
                            Room = "A106",
                            StartTime = new DateTime(2025, 3, 6, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1422),
                            EndTime = new DateTime(2025, 3, 7, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 7L,
                            Room = "A107",
                            StartTime = new DateTime(2025, 3, 7, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1424),
                            EndTime = new DateTime(2025, 3, 8, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 8L,
                            Room = "A108",
                            StartTime = new DateTime(2025, 3, 8, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1427),
                            EndTime = new DateTime(2025, 3, 9, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 9L,
                            Room = "A109",
                            StartTime = new DateTime(2025, 3, 9, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1430),
                            EndTime = new DateTime(2025, 3, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 10L,
                            Room = "A110",
                            StartTime = new DateTime(2025, 3, 10, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1435),
                            EndTime = new DateTime(2025, 3, 11, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 11L,
                            Room = "A111",
                            StartTime = new DateTime(2025, 3, 11, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1437),
                            EndTime = new DateTime(2025, 3, 12, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 12L,
                            Room = "A112",
                            StartTime = new DateTime(2025, 3, 12, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("FacultyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FacultyCode = "CNPM",
                            FacultyName = "Công nghệ phần mềm"
                        },
                        new
                        {
                            Id = 2L,
                            FacultyCode = "ATTT",
                            FacultyName = "An toàn thông tin"
                        },
                        new
                        {
                            Id = 3L,
                            FacultyCode = "MMT",
                            FacultyName = "Mạng máy tính"
                        },
                        new
                        {
                            Id = 4L,
                            FacultyCode = "HTTT",
                            FacultyName = "Hệ thống thông tin"
                        },
                        new
                        {
                            Id = 5L,
                            FacultyCode = "TTNT",
                            FacultyName = "Trí tuệ nhân tạo"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Discussion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int>("Votes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Discussions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Có ai biết cách tích hợp AI vào ứng dụng y tế?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2467),
                            ProjectId = 1L,
                            Title = "Hỏi về AI trong y tế",
                            UserId = 7L,
                            Votes = 5
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Nên dùng framework nào cho giao diện?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2470),
                            Title = "Thắc mắc về thiết kế giao diện",
                            UserId = 9L,
                            Votes = 3
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Nên dùng cổng thanh toán nào?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2472),
                            ProjectId = 3L,
                            Title = "Thanh toán thương mại điện tử",
                            UserId = 10L,
                            Votes = 4
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Có công cụ nào tốt để phân tích dữ liệu?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2475),
                            ProjectId = 4L,
                            Title = "Phân tích dữ liệu",
                            UserId = 12L,
                            Votes = 2
                        },
                        new
                        {
                            Id = 5L,
                            Content = "App quản lý học tập nên có tính năng gì?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2478),
                            ProjectId = 5L,
                            Title = "Quản lý học tập",
                            UserId = 7L,
                            Votes = 6
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Làm sao để tăng cường bảo mật IoT?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2480),
                            ProjectId = 6L,
                            Title = "Bảo mật IoT",
                            UserId = 8L,
                            Votes = 3
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Có công cụ nào miễn phí để phân tích?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2483),
                            ProjectId = 7L,
                            Title = "Phân tích mạng xã hội",
                            UserId = 9L,
                            Votes = 5
                        },
                        new
                        {
                            Id = 8L,
                            Content = "App học ngoại ngữ nên có gì đặc biệt?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2486),
                            ProjectId = 8L,
                            Title = "Học ngoại ngữ",
                            UserId = 10L,
                            Votes = 4
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Hệ thống quản lý kho nên tự động hóa thế nào?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2489),
                            ProjectId = 9L,
                            Title = "Quản lý kho",
                            UserId = 11L,
                            Votes = 3
                        },
                        new
                        {
                            Id = 10L,
                            Content = "App đặt lịch nên có thông báo không?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2492),
                            ProjectId = 10L,
                            Title = "Đặt lịch khám bệnh",
                            UserId = 12L,
                            Votes = 5
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Hệ thống nhân sự cần báo cáo gì?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2495),
                            ProjectId = 11L,
                            Title = "Quản lý nhân sự",
                            UserId = 13L,
                            Votes = 2
                        },
                        new
                        {
                            Id = 12L,
                            Content = "App học nhóm nên có tính năng gì?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2497),
                            ProjectId = 12L,
                            Title = "Học tập nhóm",
                            UserId = 7L,
                            Votes = 4
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.FAQ", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.ToTable("FAQs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Answer = "Đăng nhập, vào mục Nộp bài, tải file lên.",
                            Category = "Nộp bài",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2202),
                            Question = "Làm thế nào để nộp đồ án?"
                        },
                        new
                        {
                            Id = 2L,
                            Answer = "Xem lịch bảo vệ trong mục Lịch.",
                            Category = "Bảo vệ",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2205),
                            Question = "Thời gian bảo vệ là khi nào?"
                        },
                        new
                        {
                            Id = 3L,
                            Answer = "Vào mục Nhóm, gửi yêu cầu tham gia.",
                            Category = "Nhóm",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2208),
                            Question = "Làm sao để tham gia nhóm?"
                        },
                        new
                        {
                            Id = 4L,
                            Answer = "Vào mục Điểm số, chọn đồ án của bạn.",
                            Category = "Điểm số",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2210),
                            Question = "Cách xem điểm đồ án?"
                        },
                        new
                        {
                            Id = 5L,
                            Answer = "Vào mục Phản hồi, điền nội dung.",
                            Category = "Phản hồi",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2212),
                            Question = "Làm sao để gửi phản hồi?"
                        },
                        new
                        {
                            Id = 6L,
                            Answer = "Có, AI hỗ trợ gợi ý và đánh giá.",
                            Category = "Hỗ trợ",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2215),
                            Question = "Hệ thống có hỗ trợ AI không?"
                        },
                        new
                        {
                            Id = 7L,
                            Answer = "Vào mục Nhiệm vụ, nhấn Tạo mới.",
                            Category = "Nhiệm vụ",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2217),
                            Question = "Làm sao để tạo nhiệm vụ?"
                        },
                        new
                        {
                            Id = 8L,
                            Answer = "Vào mục Tài liệu, chọn tài liệu và tải.",
                            Category = "Tài liệu",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2219),
                            Question = "Cách tải tài liệu tham khảo?"
                        },
                        new
                        {
                            Id = 9L,
                            Answer = "Vào mục Lịch, chọn lịch họp nhóm.",
                            Category = "Họp nhóm",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2221),
                            Question = "Làm sao để xem lịch họp?"
                        },
                        new
                        {
                            Id = 10L,
                            Answer = "Vào mục Điểm số, chọn Kháng nghị.",
                            Category = "Kháng nghị",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2223),
                            Question = "Cách gửi kháng nghị điểm?"
                        },
                        new
                        {
                            Id = 11L,
                            Answer = "Có, vào mục Chat để trò chuyện nhóm.",
                            Category = "Chat",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2225),
                            Question = "Hệ thống có hỗ trợ chat không?"
                        },
                        new
                        {
                            Id = 12L,
                            Answer = "Vào Cài đặt, chọn Đổi mật khẩu.",
                            Category = "Tài khoản",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2227),
                            Question = "Làm sao để đổi mật khẩu?"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Feedback", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("LecturerId")
                        .HasColumnType("bigint");

                    b.Property<long>("SubmissionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LecturerId");

                    b.HasIndex("SubmissionId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Cần cải thiện phần phân tích dữ liệu.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(171),
                            LecturerId = 4L,
                            SubmissionId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Tốt, nhưng cần bổ sung tài liệu tham khảo.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(178),
                            LecturerId = 5L,
                            SubmissionId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Cần chỉnh sửa bố cục báo cáo.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(179),
                            LecturerId = 6L,
                            SubmissionId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Bài nộp chưa đạt yêu cầu.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(181),
                            LecturerId = 14L,
                            SubmissionId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Content = "Cần bổ sung hình ảnh minh họa.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(183),
                            LecturerId = 15L,
                            SubmissionId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Tốt, nội dung đầy đủ.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(188),
                            LecturerId = 4L,
                            SubmissionId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Cần cải thiện phần kết luận.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(190),
                            LecturerId = 5L,
                            SubmissionId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "Bài nộp không đúng định dạng.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(191),
                            LecturerId = 6L,
                            SubmissionId = 8L
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Cần bổ sung tài liệu tham khảo.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(193),
                            LecturerId = 14L,
                            SubmissionId = 9L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "Tốt, đạt yêu cầu.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(194),
                            LecturerId = 15L,
                            SubmissionId = 10L
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Cần chỉnh sửa phần giới thiệu.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(196),
                            LecturerId = 4L,
                            SubmissionId = 11L
                        },
                        new
                        {
                            Id = 12L,
                            Content = "Bài nộp không đạt, cần làm lại.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(199),
                            LecturerId = 5L,
                            SubmissionId = 12L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.FeedbackSurvey", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FeedbackSurveys");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Hệ thống dễ sử dụng.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2656),
                            Rating = 4,
                            UserId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Cần cải thiện tốc độ tải.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2659),
                            Rating = 3,
                            UserId = 8L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Giao diện thân thiện.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2661),
                            Rating = 5,
                            UserId = 9L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Chat nhóm bị lỗi.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2663),
                            Rating = 2,
                            UserId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            Content = "Hỗ trợ tốt.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2666),
                            Rating = 4,
                            UserId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Cần thêm hướng dẫn sử dụng.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2668),
                            Rating = 3,
                            UserId = 12L
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Tính năng quản lý nhóm tốt.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2669),
                            Rating = 5,
                            UserId = 13L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "Thông báo không hoạt động.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2672),
                            Rating = 2,
                            UserId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Rất hài lòng với hệ thống.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2674),
                            Rating = 5,
                            UserId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "Cần cải thiện tốc độ.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2676),
                            Rating = 3,
                            UserId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Giao diện đẹp.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2678),
                            Rating = 4,
                            UserId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            Content = "Hệ thống ổn định.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2682),
                            Rating = 4,
                            UserId = 11L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Grade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CriteriaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("GradedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GradedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CriteriaId");

                    b.HasIndex("GradedBy");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("StudentId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Comment = "Đã duyệt",
                            CriteriaId = 1L,
                            GradedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(655),
                            GradedBy = 4L,
                            GroupId = 1L,
                            ProjectId = 1L,
                            Score = 8.5f,
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            Comment = "Đã duyệt",
                            CriteriaId = 2L,
                            GradedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(660),
                            GradedBy = 4L,
                            GroupId = 1L,
                            ProjectId = 1L,
                            Score = 8f,
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 3L,
                            Comment = "Đã duyệt",
                            CriteriaId = 1L,
                            GradedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(663),
                            GradedBy = 5L,
                            GroupId = 2L,
                            ProjectId = 2L,
                            Score = 7.5f
                        },
                        new
                        {
                            Id = 4L,
                            Comment = "Chưa duyệt",
                            CriteriaId = 4L,
                            GradedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(665),
                            GradedBy = 6L,
                            GroupId = 3L,
                            ProjectId = 3L,
                            Score = 8f
                        },
                        new
                        {
                            Id = 5L,
                            Comment = "Chưa duyệt",
                            CriteriaId = 6L,
                            GradedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(668),
                            GradedBy = 14L,
                            GroupId = 4L,
                            ProjectId = 4L,
                            Score = 7f
                        },
                        new
                        {
                            Id = 6L,
                            Comment = "Chưa duyệt",
                            CriteriaId = 7L,
                            GradedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(671),
                            GradedBy = 15L,
                            GroupId = 5L,
                            ProjectId = 5L,
                            Score = 8.5f
                        },
                        new
                        {
                            Id = 7L,
                            Comment = "Chưa duyệt",
                            CriteriaId = 8L,
                            GradedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(673),
                            GradedBy = 4L,
                            GroupId = 6L,
                            ProjectId = 6L,
                            Score = 9f
                        },
                        new
                        {
                            Id = 8L,
                            Comment = "Chưa duyệt",
                            CriteriaId = 9L,
                            GradedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(676),
                            GradedBy = 5L,
                            GroupId = 7L,
                            ProjectId = 7L,
                            Score = 6.5f
                        },
                        new
                        {
                            Id = 9L,
                            Comment = "Chưa duyệt",
                            CriteriaId = 10L,
                            GradedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(678),
                            GradedBy = 6L,
                            GroupId = 8L,
                            ProjectId = 8L,
                            Score = 8f
                        },
                        new
                        {
                            Id = 10L,
                            Comment = "Chưa duyệt",
                            CriteriaId = 11L,
                            GradedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(681),
                            GradedBy = 14L,
                            GroupId = 9L,
                            ProjectId = 9L,
                            Score = 7.5f
                        },
                        new
                        {
                            Id = 11L,
                            Comment = "Chưa duyệt",
                            CriteriaId = 12L,
                            GradedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(684),
                            GradedBy = 15L,
                            GroupId = 10L,
                            ProjectId = 10L,
                            Score = 8f
                        },
                        new
                        {
                            Id = 12L,
                            Comment = "Đã duyệt",
                            CriteriaId = 13L,
                            GradedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(686),
                            GradedBy = 4L,
                            GroupId = 11L,
                            ProjectId = 11L,
                            Score = 7f
                        },
                        new
                        {
                            Id = 13L,
                            Comment = "Đã duyệt",
                            CriteriaId = 3L,
                            GradedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(689),
                            GradedBy = 4L,
                            GroupId = 1L,
                            ProjectId = 1L,
                            Score = 8f,
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 14L,
                            Comment = "Đã duyệt",
                            CriteriaId = 1L,
                            GradedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(692),
                            GradedBy = 4L,
                            GroupId = 1L,
                            ProjectId = 1L,
                            Score = 8f,
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 15L,
                            Comment = "Đã duyệt",
                            CriteriaId = 2L,
                            GradedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(695),
                            GradedBy = 4L,
                            GroupId = 1L,
                            ProjectId = 1L,
                            Score = 8f,
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 16L,
                            Comment = "Đã duyệt",
                            CriteriaId = 3L,
                            GradedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(698),
                            GradedBy = 4L,
                            GroupId = 1L,
                            ProjectId = 1L,
                            Score = 8.5f,
                            StudentId = 7L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeAppeal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GradeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("StudentId");

                    b.ToTable("GradeAppeals");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1070),
                            GradeId = 1L,
                            Reason = "Điểm nội dung chưa hợp lý.",
                            Status = "PENDING",
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1073),
                            GradeId = 2L,
                            Reason = "Điểm trình bày thấp.",
                            Response = "Đã điều chỉnh điểm.",
                            Status = "APPROVED",
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1075),
                            GradeId = 3L,
                            Reason = "Điểm nội dung không hợp lý.",
                            Response = "Điểm đã hợp lý.",
                            Status = "REJECTED",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1077),
                            GradeId = 4L,
                            Reason = "Điểm nội dung thấp.",
                            Status = "PENDING",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1079),
                            GradeId = 5L,
                            Reason = "Cần xem lại điểm.",
                            Status = "PENDING",
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1080),
                            GradeId = 6L,
                            Reason = "Điểm thực hành chưa đúng.",
                            Response = "Đã điều chỉnh.",
                            Status = "APPROVED",
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1083),
                            GradeId = 7L,
                            Reason = "Điểm bảo mật không hợp lý.",
                            Response = "Điểm hợp lý.",
                            Status = "REJECTED",
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1085),
                            GradeId = 8L,
                            Reason = "Điểm phân tích thấp.",
                            Status = "PENDING",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1087),
                            GradeId = 9L,
                            Reason = "Điểm ứng dụng chưa đúng.",
                            Response = "Đã điều chỉnh.",
                            Status = "APPROVED",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1089),
                            GradeId = 10L,
                            Reason = "Điểm quản lý chưa hợp lý.",
                            Response = "Điểm hợp lý.",
                            Status = "REJECTED",
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1091),
                            GradeId = 11L,
                            Reason = "Điểm tiện ích thấp.",
                            Status = "PENDING",
                            StudentId = 12L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeCriteria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("GradeCriteria");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CourseId = 1L,
                            Description = "Chất lượng nội dung đồ án.",
                            Name = "Nội dung",
                            Weight = 0.4f
                        },
                        new
                        {
                            Id = 2L,
                            CourseId = 1L,
                            Description = "Cách trình bày báo cáo.",
                            Name = "Trình bày",
                            Weight = 0.3f
                        },
                        new
                        {
                            Id = 3L,
                            CourseId = 1L,
                            Description = "Kỹ năng bảo vệ.",
                            Name = "Bảo vệ",
                            Weight = 0.3f
                        },
                        new
                        {
                            Id = 4L,
                            CourseId = 2L,
                            Description = "Chất lượng nội dung đồ án cơ sở.",
                            Name = "Nội dung",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 5L,
                            CourseId = 2L,
                            Description = "Kỹ năng thực hành.",
                            Name = "Thực hành",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 6L,
                            CourseId = 3L,
                            Description = "Chất lượng nội dung đồ án KTPM.",
                            Name = "Nội dung",
                            Weight = 0.4f
                        },
                        new
                        {
                            Id = 7L,
                            CourseId = 4L,
                            Description = "Kỹ năng thực hành KTPM.",
                            Name = "Thực hành",
                            Weight = 0.6f
                        },
                        new
                        {
                            Id = 8L,
                            CourseId = 5L,
                            Description = "Mức độ bảo mật.",
                            Name = "Bảo mật",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 9L,
                            CourseId = 6L,
                            Description = "Kỹ năng phân tích dữ liệu.",
                            Name = "Phân tích",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 10L,
                            CourseId = 7L,
                            Description = "Ứng dụng thực tế.",
                            Name = "Ứng dụng",
                            Weight = 0.4f
                        },
                        new
                        {
                            Id = 11L,
                            CourseId = 8L,
                            Description = "Khả năng quản lý kho.",
                            Name = "Quản lý",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 12L,
                            CourseId = 9L,
                            Description = "Tính tiện ích của app.",
                            Name = "Tiện ích",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 13L,
                            CourseId = 10L,
                            Description = "Hiệu quả quản lý nhân sự.",
                            Name = "Hiệu quả",
                            Weight = 0.5f
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("GradeId")
                        .HasColumnType("bigint");

                    b.Property<long>("LecturerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("LecturerId");

                    b.ToTable("GradeLogs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(884),
                            Details = "Tạo điểm cho nhóm 1.",
                            GradeId = 1L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 2L,
                            Action = "UPDATE",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(887),
                            Details = "Cập nhật điểm nhóm 1.",
                            GradeId = 1L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 3L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(889),
                            Details = "Tạo điểm cho nhóm 1.",
                            GradeId = 2L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 4L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(891),
                            Details = "Tạo điểm cho nhóm 2.",
                            GradeId = 3L,
                            LecturerId = 5L
                        },
                        new
                        {
                            Id = 5L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(893),
                            Details = "Tạo điểm cho nhóm 3.",
                            GradeId = 4L,
                            LecturerId = 6L
                        },
                        new
                        {
                            Id = 6L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(895),
                            Details = "Tạo điểm cho nhóm 4.",
                            GradeId = 5L,
                            LecturerId = 14L
                        },
                        new
                        {
                            Id = 7L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(897),
                            Details = "Tạo điểm cho nhóm 5.",
                            GradeId = 6L,
                            LecturerId = 15L
                        },
                        new
                        {
                            Id = 8L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(899),
                            Details = "Tạo điểm cho nhóm 6.",
                            GradeId = 7L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 9L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(901),
                            Details = "Tạo điểm cho nhóm 7.",
                            GradeId = 8L,
                            LecturerId = 5L
                        },
                        new
                        {
                            Id = 10L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(903),
                            Details = "Tạo điểm cho nhóm 8.",
                            GradeId = 9L,
                            LecturerId = 6L
                        },
                        new
                        {
                            Id = 11L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(904),
                            Details = "Tạo điểm cho nhóm 9.",
                            GradeId = 10L,
                            LecturerId = 14L
                        },
                        new
                        {
                            Id = 12L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(907),
                            Details = "Tạo điểm cho nhóm 10.",
                            GradeId = 11L,
                            LecturerId = 15L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeSchedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<long>("LecturerId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LecturerId");

                    b.HasIndex("ProjectId");

                    b.ToTable("GradeSchedules");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(974),
                            Deadline = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 4L,
                            ProjectId = 1L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(980),
                            Deadline = new DateTime(2025, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 5L,
                            ProjectId = 2L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(983),
                            Deadline = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 6L,
                            ProjectId = 3L,
                            Status = "COMPLETED"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(985),
                            Deadline = new DateTime(2025, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 14L,
                            ProjectId = 4L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(987),
                            Deadline = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 15L,
                            ProjectId = 5L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(990),
                            Deadline = new DateTime(2025, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 4L,
                            ProjectId = 6L,
                            Status = "COMPLETED"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(992),
                            Deadline = new DateTime(2025, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 5L,
                            ProjectId = 7L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(994),
                            Deadline = new DateTime(2025, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 6L,
                            ProjectId = 8L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(996),
                            Deadline = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 14L,
                            ProjectId = 9L,
                            Status = "COMPLETED"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(998),
                            Deadline = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 15L,
                            ProjectId = 10L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1001),
                            Deadline = new DateTime(2025, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 4L,
                            ProjectId = 11L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1003),
                            Deadline = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 5L,
                            ProjectId = 12L,
                            Status = "COMPLETED"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GradeId")
                        .HasColumnType("bigint");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.ToTable("GradeVersions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 26, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(786),
                            GradeId = 1L,
                            Score = 8f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 2L,
                            Comment = "Cập nhật điểm.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(791),
                            GradeId = 1L,
                            Score = 8.5f,
                            VersionNumber = 2
                        },
                        new
                        {
                            Id = 3L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(793),
                            GradeId = 2L,
                            Score = 8f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 4L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(794),
                            GradeId = 3L,
                            Score = 7.5f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 5L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(797),
                            GradeId = 4L,
                            Score = 8f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 6L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(799),
                            GradeId = 5L,
                            Score = 7f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 7L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(801),
                            GradeId = 6L,
                            Score = 8.5f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 8L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(803),
                            GradeId = 7L,
                            Score = 9f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 9L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(805),
                            GradeId = 8L,
                            Score = 6.5f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 10L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(807),
                            GradeId = 9L,
                            Score = 8f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 11L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(809),
                            GradeId = 10L,
                            Score = 7.5f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 12L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(811),
                            GradeId = 11L,
                            Score = 8f,
                            VersionNumber = 1
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LecturerId")
                        .HasColumnType("bigint");

                    b.Property<int>("MaxMembers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LecturerId");

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9389),
                            MaxMembers = 5,
                            Name = "Nhóm 1",
                            ProjectId = 1L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9389)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9395),
                            MaxMembers = 5,
                            Name = "Nhóm 2",
                            ProjectId = 2L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9396)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9401),
                            MaxMembers = 5,
                            Name = "Nhóm 3",
                            ProjectId = 3L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9401)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9406),
                            MaxMembers = 5,
                            Name = "Nhóm 4",
                            ProjectId = 4L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9407)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9411),
                            MaxMembers = 5,
                            Name = "Nhóm 5",
                            ProjectId = 5L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9412)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9417),
                            MaxMembers = 5,
                            Name = "Nhóm 6",
                            ProjectId = 6L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9417)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9422),
                            MaxMembers = 5,
                            Name = "Nhóm 7",
                            ProjectId = 7L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9423)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9428),
                            MaxMembers = 5,
                            Name = "Nhóm 8",
                            ProjectId = 8L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9428)
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9434),
                            MaxMembers = 5,
                            Name = "Nhóm 9",
                            ProjectId = 9L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9435)
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9439),
                            MaxMembers = 5,
                            Name = "Nhóm 10",
                            ProjectId = 10L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9440)
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9445),
                            MaxMembers = 5,
                            Name = "Nhóm 11",
                            ProjectId = 11L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9446)
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9460),
                            MaxMembers = 5,
                            Name = "Nhóm 12",
                            ProjectId = 12L,
                            Status = "PENDING",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9460)
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9467),
                            MaxMembers = 5,
                            Name = "Nhóm 13",
                            ProjectId = 13L,
                            Status = "PENDING",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9467)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GroupMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsLeader")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudentId");

                    b.ToTable("GroupMembers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            GroupId = 1L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9533),
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            GroupId = 1L,
                            IsLeader = false,
                            JoinedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9536),
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 3L,
                            GroupId = 2L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9538),
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 4L,
                            GroupId = 3L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9539),
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            GroupId = 3L,
                            IsLeader = false,
                            JoinedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9541),
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            GroupId = 4L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9544),
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 7L,
                            GroupId = 4L,
                            IsLeader = false,
                            JoinedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9546),
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 8L,
                            GroupId = 5L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9549),
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            GroupId = 6L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9551),
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            GroupId = 7L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9556),
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            GroupId = 8L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9558),
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            GroupId = 9L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9560),
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 13L,
                            GroupId = 10L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9562),
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 14L,
                            GroupId = 11L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9564),
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 15L,
                            GroupId = 12L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9565),
                            StudentId = 7L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GroupRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudentId");

                    b.ToTable("GroupRequests");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9655),
                            GroupId = 1L,
                            Status = "PENDING",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9658),
                            GroupId = 2L,
                            Status = "APPROVED",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9660),
                            GroupId = 3L,
                            Status = "REJECTED",
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9661),
                            GroupId = 4L,
                            Status = "PENDING",
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9663),
                            GroupId = 5L,
                            Status = "APPROVED",
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9665),
                            GroupId = 6L,
                            Status = "PENDING",
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9667),
                            GroupId = 7L,
                            Status = "APPROVED",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9669),
                            GroupId = 8L,
                            Status = "REJECTED",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9670),
                            GroupId = 9L,
                            Status = "PENDING",
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9672),
                            GroupId = 10L,
                            Status = "APPROVED",
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9674),
                            GroupId = 11L,
                            Status = "PENDING",
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9676),
                            GroupId = 12L,
                            Status = "REJECTED",
                            StudentId = 7L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Logs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Action = "LOGIN",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3551),
                            Details = "Admin đăng nhập hệ thống.",
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Action = "SUBMISSION",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3554),
                            Details = "Sinh viên nộp bài cho đồ án 1.",
                            UserId = 7L
                        },
                        new
                        {
                            Id = 3L,
                            Action = "JOIN_GROUP",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3557),
                            Details = "Sinh viên tham gia Nhóm 1.",
                            UserId = 8L
                        },
                        new
                        {
                            Id = 4L,
                            Action = "SEND_MESSAGE",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3559),
                            Details = "Gửi tin nhắn trong Nhóm 2.",
                            UserId = 9L
                        },
                        new
                        {
                            Id = 5L,
                            Action = "SUBMISSION",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3561),
                            Details = "Sinh viên nộp bài cho đồ án 3.",
                            UserId = 10L
                        },
                        new
                        {
                            Id = 6L,
                            Action = "CREATE_TASK",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3563),
                            Details = "Tạo nhiệm vụ mới trong đồ án 4.",
                            UserId = 11L
                        },
                        new
                        {
                            Id = 7L,
                            Action = "JOIN_GROUP",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3566),
                            Details = "Sinh viên tham gia Nhóm 5.",
                            UserId = 12L
                        },
                        new
                        {
                            Id = 8L,
                            Action = "SEND_MESSAGE",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3568),
                            Details = "Gửi tin nhắn trong Nhóm 6.",
                            UserId = 13L
                        },
                        new
                        {
                            Id = 9L,
                            Action = "GRADE",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3570),
                            Details = "Chấm điểm cho Nhóm 1.",
                            UserId = 4L
                        },
                        new
                        {
                            Id = 10L,
                            Action = "GRADE",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3571),
                            Details = "Chấm điểm cho Nhóm 2.",
                            UserId = 5L
                        },
                        new
                        {
                            Id = 11L,
                            Action = "CREATE_PROJECT",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3573),
                            Details = "Tạo đồ án mới.",
                            UserId = 6L
                        },
                        new
                        {
                            Id = 12L,
                            Action = "UPDATE_PROJECT",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3575),
                            Details = "Cập nhật đồ án 4.",
                            UserId = 14L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Meeting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("GroupId");

                    b.ToTable("Meetings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1519),
                            CreatedBy = 4L,
                            EndTime = new DateTime(2025, 2, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 1L,
                            Location = "Phòng B101",
                            StartTime = new DateTime(2025, 2, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 1"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1523),
                            CreatedBy = 5L,
                            EndTime = new DateTime(2025, 2, 17, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 2L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 2, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 2"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1535),
                            CreatedBy = 6L,
                            EndTime = new DateTime(2025, 2, 24, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 3L,
                            Location = "Phòng B102",
                            StartTime = new DateTime(2025, 2, 24, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 3"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1539),
                            CreatedBy = 14L,
                            EndTime = new DateTime(2025, 3, 3, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 4L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 3, 3, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 4"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1542),
                            CreatedBy = 15L,
                            EndTime = new DateTime(2025, 3, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 5L,
                            Location = "Phòng B103",
                            StartTime = new DateTime(2025, 3, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 5"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1546),
                            CreatedBy = 4L,
                            EndTime = new DateTime(2025, 3, 17, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 6L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 3, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 6"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1550),
                            CreatedBy = 5L,
                            EndTime = new DateTime(2025, 3, 24, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 7L,
                            Location = "Phòng B104",
                            StartTime = new DateTime(2025, 3, 24, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 7"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1553),
                            CreatedBy = 6L,
                            EndTime = new DateTime(2025, 3, 31, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 8L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 3, 31, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 8"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1556),
                            CreatedBy = 14L,
                            EndTime = new DateTime(2025, 4, 7, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 9L,
                            Location = "Phòng B105",
                            StartTime = new DateTime(2025, 4, 7, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 9"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1559),
                            CreatedBy = 15L,
                            EndTime = new DateTime(2025, 4, 14, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 10L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 4, 14, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 10"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1562),
                            CreatedBy = 4L,
                            EndTime = new DateTime(2025, 4, 21, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 11L,
                            Location = "Phòng B106",
                            StartTime = new DateTime(2025, 4, 21, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 11"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1565),
                            CreatedBy = 5L,
                            EndTime = new DateTime(2025, 4, 28, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 12L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 4, 28, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 12"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.MeetingRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("MeetingId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MeetingId");

                    b.ToTable("MeetingRecords");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1631),
                            FilePath = "records/meeting1.mp3",
                            MeetingId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1635),
                            FilePath = "records/meeting2.mp4",
                            MeetingId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1638),
                            FilePath = "records/meeting3.mp3",
                            MeetingId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1642),
                            FilePath = "records/meeting4.mp4",
                            MeetingId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1645),
                            FilePath = "records/meeting5.mp3",
                            MeetingId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1648),
                            FilePath = "records/meeting6.mp4",
                            MeetingId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1651),
                            FilePath = "records/meeting7.mp3",
                            MeetingId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1654),
                            FilePath = "records/meeting8.mp4",
                            MeetingId = 8L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1657),
                            FilePath = "records/meeting9.mp3",
                            MeetingId = 9L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1660),
                            FilePath = "records/meeting10.mp4",
                            MeetingId = 10L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1663),
                            FilePath = "records/meeting11.mp3",
                            MeetingId = 11L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1666),
                            FilePath = "records/meeting12.mp4",
                            MeetingId = 12L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("RecipientType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Hạn nộp là 28/02/2025.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1785),
                            RecipientType = "user",
                            Status = "SENT",
                            Title = "Hạn nộp đồ án",
                            Type = "WEB",
                            UserId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Bài nộp đã được phản hồi.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1789),
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Phản hồi bài nộp",
                            Type = "EMAIL",
                            UserId = 9L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Bạn được thêm vào Nhóm 1.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1792),
                            GroupId = 1L,
                            RecipientType = "user",
                            Status = "SENT",
                            Title = "Nhóm mới",
                            Type = "WEB",
                            UserId = 8L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Họp nhóm vào 14:00, 03/03/2025.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1795),
                            GroupId = 3L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Họp nhóm",
                            Type = "WEB",
                            UserId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            Content = "Đồ án Nhóm 4 cần chỉnh sửa.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1798),
                            GroupId = 4L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Phản hồi đồ án",
                            Type = "WEB",
                            UserId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Bạn được giao nhiệm vụ mới.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1801),
                            GroupId = 5L,
                            RecipientType = "user",
                            Status = "SENT",
                            Title = "Nhiệm vụ mới",
                            Type = "WEB",
                            UserId = 12L
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Điểm của Nhóm 6 đã được cập nhật.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1804),
                            GroupId = 6L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Cập nhật điểm",
                            Type = "WEB",
                            UserId = 13L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "Hạn chót nhiệm vụ là 10/03/2025.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1807),
                            GroupId = 7L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Hạn chót nhiệm vụ",
                            Type = "WEB",
                            UserId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Lịch bảo vệ: 08/03/2025, A108.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1810),
                            GroupId = 8L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Lịch bảo vệ",
                            Type = "WEB",
                            UserId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "Nhóm 9 nhận phản hồi mới.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1813),
                            GroupId = 9L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Phản hồi mới",
                            Type = "WEB",
                            UserId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Đồ án Nhóm 10 đã được phê duyệt.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1816),
                            GroupId = 10L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Cập nhật đồ án",
                            Type = "WEB",
                            UserId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            Content = "Nhiệm vụ của Nhóm 11 đã hoàn thành.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1819),
                            GroupId = 11L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Nhiệm vụ hoàn thành",
                            Type = "WEB",
                            UserId = 11L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.PeerReview", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("RevieweeId")
                        .HasColumnType("bigint");

                    b.Property<long>("ReviewerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("RevieweeId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("PeerReviews");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Comment = "Làm việc tốt.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1885),
                            GroupId = 1L,
                            RevieweeId = 8L,
                            ReviewerId = 7L,
                            Score = 8
                        },
                        new
                        {
                            Id = 2L,
                            Comment = "Cần cải thiện giao tiếp.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1902),
                            GroupId = 1L,
                            RevieweeId = 7L,
                            ReviewerId = 8L,
                            Score = 7
                        },
                        new
                        {
                            Id = 3L,
                            Comment = "Hỗ trợ nhóm tốt.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1904),
                            GroupId = 3L,
                            RevieweeId = 11L,
                            ReviewerId = 10L,
                            Score = 9
                        },
                        new
                        {
                            Id = 4L,
                            Comment = "Cần chủ động hơn.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1906),
                            GroupId = 3L,
                            RevieweeId = 10L,
                            ReviewerId = 11L,
                            Score = 6
                        },
                        new
                        {
                            Id = 5L,
                            Comment = "Đóng góp tích cực.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1909),
                            GroupId = 4L,
                            RevieweeId = 13L,
                            ReviewerId = 12L,
                            Score = 8
                        },
                        new
                        {
                            Id = 6L,
                            Comment = "Cần cải thiện kỹ năng.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1912),
                            GroupId = 4L,
                            RevieweeId = 12L,
                            ReviewerId = 13L,
                            Score = 7
                        },
                        new
                        {
                            Id = 7L,
                            Comment = "Làm việc hiệu quả.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1914),
                            GroupId = 5L,
                            RevieweeId = 8L,
                            ReviewerId = 7L,
                            Score = 9
                        },
                        new
                        {
                            Id = 8L,
                            Comment = "Cần tập trung hơn.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1917),
                            GroupId = 6L,
                            RevieweeId = 9L,
                            ReviewerId = 8L,
                            Score = 6
                        },
                        new
                        {
                            Id = 9L,
                            Comment = "Hợp tác tốt.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1919),
                            GroupId = 7L,
                            RevieweeId = 10L,
                            ReviewerId = 9L,
                            Score = 8
                        },
                        new
                        {
                            Id = 10L,
                            Comment = "Cần cải thiện thái độ.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1921),
                            GroupId = 8L,
                            RevieweeId = 11L,
                            ReviewerId = 10L,
                            Score = 7
                        },
                        new
                        {
                            Id = 11L,
                            Comment = "Đóng góp lớn.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1924),
                            GroupId = 9L,
                            RevieweeId = 12L,
                            ReviewerId = 11L,
                            Score = 9
                        },
                        new
                        {
                            Id = 12L,
                            Comment = "Làm việc ổn.",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(1926),
                            GroupId = 10L,
                            RevieweeId = 13L,
                            ReviewerId = 12L,
                            Score = 8
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("ProjectCode")
                        .IsUnique();

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CourseId = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9122),
                            Description = "Phát triển ứng dụng AI hỗ trợ chẩn đoán bệnh.",
                            GroupId = 1L,
                            ProjectCode = "AI_YTE_2025_01",
                            Status = "NOT_SUBMITTED",
                            Title = "Ứng dụng AI trong y tế",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9123)
                        },
                        new
                        {
                            Id = 2L,
                            CourseId = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9132),
                            Description = "Xây dựng hệ thống quản lý đồ án sinh viên.",
                            GroupId = 2L,
                            ProjectCode = "QLDA_2025_01",
                            Status = "NOT_SUBMITTED",
                            Title = "Hệ thống quản lý đồ án",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9133)
                        },
                        new
                        {
                            Id = 3L,
                            CourseId = 2L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9139),
                            Description = "Phát triển website bán hàng trực tuyến.",
                            GroupId = 3L,
                            ProjectCode = "TMĐT_2025_01",
                            Status = "NOT_SUBMITTED",
                            Title = "Ứng dụng thương mại điện tử",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9139)
                        },
                        new
                        {
                            Id = 4L,
                            CourseId = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9144),
                            Description = "Xây dựng hệ thống phân tích dữ liệu thời gian thực.",
                            GroupId = 4L,
                            ProjectCode = "PTDL_2025_01",
                            Status = "SUBMITTED",
                            Title = "Phân tích dữ liệu thời gian thực",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9145)
                        },
                        new
                        {
                            Id = 5L,
                            CourseId = 4L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9150),
                            Description = "Phát triển app quản lý học tập cho sinh viên.",
                            GroupId = 5L,
                            ProjectCode = "QLHT_2025_01",
                            Status = "SUBMITTED",
                            Title = "Ứng dụng quản lý học tập",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9150)
                        },
                        new
                        {
                            Id = 6L,
                            CourseId = 5L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9155),
                            Description = "Xây dựng giải pháp bảo mật cho thiết bị IoT.",
                            GroupId = 6L,
                            ProjectCode = "BM_IOT_2025_01",
                            Status = "SUBMITTED",
                            Title = "Hệ thống bảo mật IoT",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9156)
                        },
                        new
                        {
                            Id = 7L,
                            CourseId = 6L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9161),
                            Description = "Phân tích hành vi người dùng trên mạng xã hội.",
                            GroupId = 7L,
                            ProjectCode = "PTMXH_2025_01",
                            Status = "SUBMITTED",
                            Title = "Phân tích dữ liệu mạng xã hội",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9161)
                        },
                        new
                        {
                            Id = 8L,
                            CourseId = 7L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9166),
                            Description = "Phát triển app học ngoại ngữ với AI.",
                            GroupId = 9L,
                            ProjectCode = "HNN_2025_01",
                            Status = "GRADED",
                            Title = "Ứng dụng học ngoại ngữ",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9167)
                        },
                        new
                        {
                            Id = 9L,
                            CourseId = 8L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9171),
                            Description = "Xây dựng hệ thống quản lý kho hàng tự động.",
                            GroupId = 8L,
                            ProjectCode = "QLK_2025_01",
                            Status = "GRADED",
                            Title = "Hệ thống quản lý kho",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9171)
                        },
                        new
                        {
                            Id = 10L,
                            CourseId = 9L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9177),
                            Description = "Phát triển app đặt lịch khám bệnh trực tuyến.",
                            GroupId = 10L,
                            ProjectCode = "DLKB_2025_01",
                            Status = "GRADED",
                            Title = "Ứng dụng đặt lịch khám bệnh",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9177)
                        },
                        new
                        {
                            Id = 11L,
                            CourseId = 10L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9183),
                            Description = "Xây dựng hệ thống quản lý nhân sự cho doanh nghiệp.",
                            GroupId = 12L,
                            ProjectCode = "QLNS_2025_01",
                            Status = "GRADED",
                            Title = "Hệ thống quản lý nhân sự",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9183)
                        },
                        new
                        {
                            Id = 12L,
                            CourseId = 11L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9188),
                            Description = "Phát triển app hỗ trợ học tập nhóm.",
                            GroupId = 11L,
                            ProjectCode = "HTN_2025_01",
                            Status = "PENDING",
                            Title = "Ứng dụng học tập nhóm",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9189)
                        },
                        new
                        {
                            Id = 13L,
                            CourseId = 12L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9193),
                            Description = "Xây dựng hệ thống phân tích tài chính cá nhân.",
                            GroupId = 13L,
                            ProjectCode = "PTTC_2025_01",
                            Status = "PENDING",
                            Title = "Hệ thống phân tích tài chính",
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9194)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.ProjectVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectVersions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9276),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 1L,
                            Title = "Ứng dụng AI trong y tế",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 26, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9279),
                            Description = "Cập nhật mô tả.",
                            ProjectId = 1L,
                            Title = "Ứng dụng AI trong y tế (Cập nhật)",
                            VersionNumber = 2
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9290),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 2L,
                            Title = "Hệ thống quản lý đồ án",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9293),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 3L,
                            Title = "Ứng dụng thương mại điện tử",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9295),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 4L,
                            Title = "Phân tích dữ liệu thời gian thực",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9298),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 5L,
                            Title = "Ứng dụng quản lý học tập",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9299),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 6L,
                            Title = "Hệ thống bảo mật IoT",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9301),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 7L,
                            Title = "Phân tích dữ liệu mạng xã hội",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9303),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 8L,
                            Title = "Ứng dụng học ngoại ngữ",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9305),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 9L,
                            Title = "Hệ thống quản lý kho",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9307),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 10L,
                            Title = "Ứng dụng đặt lịch khám bệnh",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9309),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 11L,
                            Title = "Hệ thống quản lý nhân sự",
                            VersionNumber = 1
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ProjectId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Ứng dụng AI của bạn giải quyết vấn đề gì?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2098),
                            CreatedBy = 4L,
                            ProjectId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Hệ thống quản lý đồ án có những tính năng gì?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2100),
                            CreatedBy = 5L,
                            ProjectId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Website thương mại điện tử có tích hợp thanh toán không?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2103),
                            CreatedBy = 6L,
                            ProjectId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Phân tích dữ liệu thời gian thực dùng công nghệ gì?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2105),
                            CreatedBy = 14L,
                            ProjectId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Content = "App quản lý học tập có hỗ trợ offline không?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2108),
                            CreatedBy = 15L,
                            ProjectId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Hệ thống bảo mật IoT đã kiểm tra lỗ hổng chưa?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2110),
                            CreatedBy = 4L,
                            ProjectId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Phân tích dữ liệu mạng xã hội có chính xác không?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2112),
                            CreatedBy = 5L,
                            ProjectId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "App học ngoại ngữ hỗ trợ bao nhiêu ngôn ngữ?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2114),
                            CreatedBy = 6L,
                            ProjectId = 8L
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Hệ thống quản lý kho có tự động hóa không?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2116),
                            CreatedBy = 14L,
                            ProjectId = 9L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "App đặt lịch khám bệnh có thông báo nhắc nhở không?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2118),
                            CreatedBy = 15L,
                            ProjectId = 10L
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Hệ thống quản lý nhân sự có báo cáo không?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2120),
                            CreatedBy = 4L,
                            ProjectId = 11L
                        },
                        new
                        {
                            Id = 12L,
                            Content = "App học tập nhóm có tính năng chat không?",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2123),
                            CreatedBy = 5L,
                            ProjectId = 12L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Resource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2000),
                            CreatedBy = 4L,
                            FilePath = "resources/ai_doc.pdf",
                            ProjectId = 1L,
                            Title = "Tài liệu AI",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2003),
                            CreatedBy = 5L,
                            FilePath = "resources/report_template.docx",
                            GroupId = 2L,
                            Title = "Mẫu báo cáo",
                            Type = "SAMPLE"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2005),
                            CreatedBy = 6L,
                            FilePath = "resources/ecommerce.pdf",
                            ProjectId = 3L,
                            Title = "Tài liệu thương mại điện tử",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2008),
                            CreatedBy = 14L,
                            FilePath = "resources/data_analysis.pdf",
                            ProjectId = 4L,
                            Title = "Hướng dẫn phân tích dữ liệu",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2010),
                            CreatedBy = 15L,
                            FilePath = "resources/study_management.pdf",
                            ProjectId = 5L,
                            Title = "Tài liệu quản lý học tập",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2012),
                            CreatedBy = 4L,
                            FilePath = "resources/iot_security.pdf",
                            ProjectId = 6L,
                            Title = "Tài liệu bảo mật IoT",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2015),
                            CreatedBy = 5L,
                            FilePath = "resources/social_media_analysis.pdf",
                            ProjectId = 7L,
                            Title = "Phân tích mạng xã hội",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2017),
                            CreatedBy = 6L,
                            FilePath = "resources/language_learning.pdf",
                            ProjectId = 8L,
                            Title = "Tài liệu học ngoại ngữ",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2019),
                            CreatedBy = 14L,
                            FilePath = "resources/warehouse_management.pdf",
                            ProjectId = 9L,
                            Title = "Hướng dẫn quản lý kho",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2021),
                            CreatedBy = 15L,
                            FilePath = "resources/booking_system.pdf",
                            ProjectId = 10L,
                            Title = "Tài liệu đặt lịch khám bệnh",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2023),
                            CreatedBy = 4L,
                            FilePath = "resources/hr_management.pdf",
                            ProjectId = 11L,
                            Title = "Tài liệu quản lý nhân sự",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2026),
                            CreatedBy = 5L,
                            FilePath = "resources/group_study.pdf",
                            ProjectId = 12L,
                            Title = "Hướng dẫn học tập nhóm",
                            Type = "REFERENCE"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "Quản trị viên",
                            Name = "ROLE_ADMIN"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "Giảng viên hướng dẫn",
                            Name = "ROLE_LECTURER_GUIDE"
                        },
                        new
                        {
                            Id = 3L,
                            Description = "Sinh viên",
                            Name = "ROLE_STUDENT"
                        },
                        new
                        {
                            Id = 4L,
                            Description = "Trưởng bộ môn",
                            Name = "ROLE_HEAD"
                        },
                        new
                        {
                            Id = 5L,
                            Description = "Giảng viên phản biện",
                            Name = "ROLE_LECTURER_REVIEW"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.RolePermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("EditGrading")
                        .HasColumnType("bit");

                    b.Property<bool>("EditProjects")
                        .HasColumnType("bit");

                    b.Property<bool>("EditUsers")
                        .HasColumnType("bit");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ViewGrading")
                        .HasColumnType("bit");

                    b.Property<bool>("ViewProjects")
                        .HasColumnType("bit");

                    b.Property<bool>("ViewUsers")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            EditGrading = true,
                            EditProjects = true,
                            EditUsers = true,
                            RoleId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(4025),
                            ViewGrading = true,
                            ViewProjects = true,
                            ViewUsers = true
                        },
                        new
                        {
                            Id = 2L,
                            EditGrading = false,
                            EditProjects = false,
                            EditUsers = false,
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(4028),
                            ViewGrading = false,
                            ViewProjects = true,
                            ViewUsers = false
                        },
                        new
                        {
                            Id = 3L,
                            EditGrading = false,
                            EditProjects = false,
                            EditUsers = false,
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(4031),
                            ViewGrading = false,
                            ViewProjects = true,
                            ViewUsers = false
                        },
                        new
                        {
                            Id = 4L,
                            EditGrading = false,
                            EditProjects = false,
                            EditUsers = false,
                            RoleId = 4L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(4033),
                            ViewGrading = false,
                            ViewProjects = true,
                            ViewUsers = false
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Semester", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Semesters");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3794),
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HK2-2025",
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3798),
                            EndDate = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HK1-2025",
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3801),
                            EndDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HK3-2025",
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SkillAssessment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("Skill")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("SkillAssessments");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2766),
                            Score = 8,
                            Skill = "Lập trình Python",
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2770),
                            Score = 7,
                            Skill = "Thiết kế giao diện",
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2772),
                            Score = 9,
                            Skill = "Phân tích dữ liệu",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2774),
                            Score = 6,
                            Skill = "Lập trình Java",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2776),
                            Score = 8,
                            Skill = "Quản lý dự án",
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2778),
                            Score = 7,
                            Skill = "Kiểm thử phần mềm",
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2781),
                            Score = 9,
                            Skill = "Lập trình JavaScript",
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2783),
                            Score = 6,
                            Skill = "Giao tiếp nhóm",
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2785),
                            Score = 8,
                            Skill = "Thiết kế cơ sở dữ liệu",
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2787),
                            Score = 7,
                            Skill = "Tích hợp API",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2790),
                            Score = 8,
                            Skill = "Lập trình C#",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2792),
                            Score = 9,
                            Skill = "Phân tích yêu cầu",
                            StudentId = 11L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.StudentCourse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EnrolledAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId", "CourseId")
                        .IsUnique();

                    b.ToTable("StudentCourses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CourseId = 1L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3865),
                            Status = "ENROLLED",
                            StudentId = 7L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3865)
                        },
                        new
                        {
                            Id = 2L,
                            CourseId = 1L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3869),
                            Status = "ENROLLED",
                            StudentId = 8L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3870)
                        },
                        new
                        {
                            Id = 3L,
                            CourseId = 1L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3872),
                            Status = "ENROLLED",
                            StudentId = 9L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3873)
                        },
                        new
                        {
                            Id = 4L,
                            CourseId = 1L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3875),
                            Status = "ENROLLED",
                            StudentId = 10L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3875)
                        },
                        new
                        {
                            Id = 5L,
                            CourseId = 1L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3878),
                            Status = "ENROLLED",
                            StudentId = 11L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3879)
                        },
                        new
                        {
                            Id = 6L,
                            CourseId = 2L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3881),
                            Status = "ENROLLED",
                            StudentId = 12L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3882)
                        },
                        new
                        {
                            Id = 7L,
                            CourseId = 2L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3885),
                            Status = "ENROLLED",
                            StudentId = 13L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3885)
                        },
                        new
                        {
                            Id = 8L,
                            CourseId = 3L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3888),
                            Status = "ENROLLED",
                            StudentId = 7L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3888)
                        },
                        new
                        {
                            Id = 9L,
                            CourseId = 3L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3891),
                            Status = "ENROLLED",
                            StudentId = 8L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3891)
                        },
                        new
                        {
                            Id = 10L,
                            CourseId = 4L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3894),
                            Status = "ENROLLED",
                            StudentId = 9L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3895)
                        },
                        new
                        {
                            Id = 11L,
                            CourseId = 4L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3897),
                            Status = "ENROLLED",
                            StudentId = 10L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3899)
                        },
                        new
                        {
                            Id = 12L,
                            CourseId = 5L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3901),
                            Status = "ENROLLED",
                            StudentId = 11L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3902)
                        },
                        new
                        {
                            Id = 13L,
                            CourseId = 5L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3904),
                            Status = "ENROLLED",
                            StudentId = 12L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3905)
                        },
                        new
                        {
                            Id = 14L,
                            CourseId = 6L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3907),
                            Status = "ENROLLED",
                            StudentId = 13L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3908)
                        },
                        new
                        {
                            Id = 15L,
                            CourseId = 6L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3910),
                            Status = "ENROLLED",
                            StudentId = 7L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3911)
                        },
                        new
                        {
                            Id = 16L,
                            CourseId = 7L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3914),
                            Status = "COMPLETED",
                            StudentId = 8L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3914)
                        },
                        new
                        {
                            Id = 17L,
                            CourseId = 7L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3917),
                            Status = "COMPLETED",
                            StudentId = 9L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3918)
                        },
                        new
                        {
                            Id = 18L,
                            CourseId = 8L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3920),
                            Status = "COMPLETED",
                            StudentId = 10L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3921)
                        },
                        new
                        {
                            Id = 19L,
                            CourseId = 8L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3923),
                            Status = "COMPLETED",
                            StudentId = 11L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3924)
                        },
                        new
                        {
                            Id = 20L,
                            CourseId = 9L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3926),
                            Status = "COMPLETED",
                            StudentId = 12L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3927)
                        },
                        new
                        {
                            Id = 21L,
                            CourseId = 9L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3929),
                            Status = "COMPLETED",
                            StudentId = 13L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3930)
                        },
                        new
                        {
                            Id = 22L,
                            CourseId = 10L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3932),
                            Status = "COMPLETED",
                            StudentId = 7L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3933)
                        },
                        new
                        {
                            Id = 23L,
                            CourseId = 10L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3935),
                            Status = "COMPLETED",
                            StudentId = 8L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3936)
                        },
                        new
                        {
                            Id = 24L,
                            CourseId = 11L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3938),
                            Status = "ENROLLED",
                            StudentId = 9L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3939)
                        },
                        new
                        {
                            Id = 25L,
                            CourseId = 11L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3941),
                            Status = "ENROLLED",
                            StudentId = 10L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3942)
                        },
                        new
                        {
                            Id = 26L,
                            CourseId = 12L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3944),
                            Status = "ENROLLED",
                            StudentId = 11L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3945)
                        },
                        new
                        {
                            Id = 27L,
                            CourseId = 12L,
                            EnrolledAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3948),
                            Status = "ENROLLED",
                            StudentId = 12L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3948)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Submission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("TaskId")
                        .HasColumnType("bigint");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TaskId");

                    b.ToTable("Submissions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FilePath = "submissions/dt001.pdf",
                            GroupId = 1L,
                            ProjectId = 1L,
                            Status = "SUBMITTED",
                            SubmittedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9929),
                            TaskId = 1L,
                            Version = 1
                        },
                        new
                        {
                            Id = 2L,
                            FilePath = "submissions/dt002.pdf",
                            GroupId = 2L,
                            ProjectId = 2L,
                            Status = "VALIDATED",
                            SubmittedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9951),
                            TaskId = 2L,
                            Version = 1
                        },
                        new
                        {
                            Id = 3L,
                            FilePath = "submissions/dt003.pdf",
                            GroupId = 3L,
                            ProjectId = 3L,
                            Status = "SUBMITTED",
                            SubmittedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9955),
                            TaskId = 3L,
                            Version = 1
                        },
                        new
                        {
                            Id = 4L,
                            FilePath = "submissions/dt004.pdf",
                            GroupId = 4L,
                            ProjectId = 4L,
                            Status = "REJECTED",
                            SubmittedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9959),
                            TaskId = 4L,
                            Version = 1
                        },
                        new
                        {
                            Id = 5L,
                            FilePath = "submissions/dt005.pdf",
                            GroupId = 5L,
                            ProjectId = 5L,
                            Status = "SUBMITTED",
                            SubmittedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9963),
                            TaskId = 5L,
                            Version = 1
                        },
                        new
                        {
                            Id = 6L,
                            FilePath = "submissions/dt006.pdf",
                            GroupId = 6L,
                            ProjectId = 6L,
                            Status = "VALIDATED",
                            SubmittedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9967),
                            TaskId = 6L,
                            Version = 1
                        },
                        new
                        {
                            Id = 7L,
                            FilePath = "submissions/dt007.pdf",
                            GroupId = 7L,
                            ProjectId = 7L,
                            Status = "SUBMITTED",
                            SubmittedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9970),
                            TaskId = 7L,
                            Version = 1
                        },
                        new
                        {
                            Id = 8L,
                            FilePath = "submissions/dt008.pdf",
                            GroupId = 8L,
                            ProjectId = 8L,
                            Status = "REJECTED",
                            SubmittedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9973),
                            TaskId = 8L,
                            Version = 1
                        },
                        new
                        {
                            Id = 9L,
                            FilePath = "submissions/dt009.pdf",
                            GroupId = 9L,
                            ProjectId = 9L,
                            Status = "SUBMITTED",
                            SubmittedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9977),
                            TaskId = 9L,
                            Version = 1
                        },
                        new
                        {
                            Id = 10L,
                            FilePath = "submissions/dt010.pdf",
                            GroupId = 10L,
                            ProjectId = 10L,
                            Status = "VALIDATED",
                            SubmittedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9981),
                            TaskId = 10L,
                            Version = 1
                        },
                        new
                        {
                            Id = 11L,
                            FilePath = "submissions/dt011.pdf",
                            GroupId = 11L,
                            ProjectId = 11L,
                            Status = "SUBMITTED",
                            SubmittedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9985),
                            TaskId = 11L,
                            Version = 1
                        },
                        new
                        {
                            Id = 12L,
                            FilePath = "submissions/dt012.pdf",
                            GroupId = 12L,
                            ProjectId = 12L,
                            Status = "REJECTED",
                            SubmittedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9989),
                            TaskId = 12L,
                            Version = 1
                        },
                        new
                        {
                            Id = 13L,
                            FilePath = "submissions/dt013.pdf",
                            GroupId = 1L,
                            ProjectId = 1L,
                            Status = "SUBMITTED",
                            SubmittedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9992),
                            TaskId = 1L,
                            Version = 1
                        },
                        new
                        {
                            Id = 14L,
                            FilePath = "submissions/dt014.pdf",
                            GroupId = 1L,
                            ProjectId = 1L,
                            Status = "SUBMITTED",
                            SubmittedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9996),
                            TaskId = 15L,
                            Version = 1
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SubmissionVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("SubmissionId")
                        .HasColumnType("bigint");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId");

                    b.ToTable("SubmissionVersions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(83),
                            FilePath = "submissions/dt001_v1.pdf",
                            SubmissionId = 1L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 26, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(86),
                            FilePath = "submissions/dt001_v2.pdf",
                            SubmissionId = 1L,
                            VersionNumber = 2
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(90),
                            FilePath = "submissions/dt002_v1.pdf",
                            SubmissionId = 2L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(93),
                            FilePath = "submissions/dt003_v1.pdf",
                            SubmissionId = 3L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(94),
                            FilePath = "submissions/dt004_v1.pdf",
                            SubmissionId = 4L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(96),
                            FilePath = "submissions/dt005_v1.pdf",
                            SubmissionId = 5L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(98),
                            FilePath = "submissions/dt006_v1.pdf",
                            SubmissionId = 6L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(99),
                            FilePath = "submissions/dt007_v1.pdf",
                            SubmissionId = 7L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(101),
                            FilePath = "submissions/dt008_v1.pdf",
                            SubmissionId = 8L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(103),
                            FilePath = "submissions/dt009_v1.pdf",
                            SubmissionId = 9L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(105),
                            FilePath = "submissions/dt010_v1.pdf",
                            SubmissionId = 10L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(106),
                            FilePath = "submissions/dt011_v1.pdf",
                            SubmissionId = 11L,
                            VersionNumber = 1
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SystemConfig", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("SystemConfigs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3018),
                            Key = "LOGO_URL",
                            Value = "images/hutech_logo.png"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3020),
                            Key = "THEME_COLOR",
                            Value = "#1976d2"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3022),
                            Key = "EMAIL_SERVER",
                            Value = "smtp.hutech.edu.vn"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3024),
                            Key = "MAX_FILE_SIZE",
                            Value = "10485760"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3026),
                            Key = "DEFAULT_LANGUAGE",
                            Value = "vi"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3028),
                            Key = "NOTIFICATION_DURATION",
                            Value = "7"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3030),
                            Key = "SESSION_TIMEOUT",
                            Value = "30"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3032),
                            Key = "BACKUP_FREQUENCY",
                            Value = "daily"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3033),
                            Key = "ALLOWED_FILE_TYPES",
                            Value = "pdf,docx,zip"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3035),
                            Key = "TIMEZONE",
                            Value = "Asia/Ho_Chi_Minh"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3037),
                            Key = "MAX_LOGIN_ATTEMPTS",
                            Value = "5"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3039),
                            Key = "CHAT_ENABLED",
                            Value = "true"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SystemMetric", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MetricType")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("MetricType");

                    b.ToTable("SystemMetrics");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3119),
                            MetricType = "CPU",
                            Value = 45.5f
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3121),
                            MetricType = "RAM",
                            Value = 60f
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3123),
                            MetricType = "DISK",
                            Value = 75f
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(3126),
                            MetricType = "NETWORK",
                            Value = 120.5f
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 27, 2, 50, 7, 466, DateTimeKind.Utc).AddTicks(3128),
                            MetricType = "CPU",
                            Value = 50f
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 27, 2, 50, 7, 466, DateTimeKind.Utc).AddTicks(3131),
                            MetricType = "RAM",
                            Value = 65f
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 27, 2, 50, 7, 466, DateTimeKind.Utc).AddTicks(3133),
                            MetricType = "DISK",
                            Value = 80f
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 27, 2, 50, 7, 466, DateTimeKind.Utc).AddTicks(3136),
                            MetricType = "NETWORK",
                            Value = 130f
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 27, 1, 50, 7, 466, DateTimeKind.Utc).AddTicks(3139),
                            MetricType = "CPU",
                            Value = 55f
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 27, 1, 50, 7, 466, DateTimeKind.Utc).AddTicks(3141),
                            MetricType = "RAM",
                            Value = 70f
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 27, 1, 50, 7, 466, DateTimeKind.Utc).AddTicks(3143),
                            MetricType = "DISK",
                            Value = 85f
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 27, 1, 50, 7, 466, DateTimeKind.Utc).AddTicks(3146),
                            MetricType = "NETWORK",
                            Value = 140f
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Task", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("StudentId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9752),
                            Deadline = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phân tích yêu cầu hệ thống AI.",
                            GroupId = 1L,
                            ProjectId = 1L,
                            Status = "TODO",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9756),
                            Deadline = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thiết kế giao diện quản lý đồ án.",
                            GroupId = 2L,
                            ProjectId = 2L,
                            Status = "IN_PROGRESS",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9759),
                            Deadline = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thiết kế và triển khai CSDL.",
                            GroupId = 3L,
                            ProjectId = 3L,
                            Status = "DONE",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9763),
                            Deadline = new DateTime(2025, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tích hợp API phân tích dữ liệu.",
                            GroupId = 4L,
                            ProjectId = 4L,
                            Status = "IN_PROGRESS",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9767),
                            Deadline = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phát triển tính năng quản lý lịch học.",
                            GroupId = 5L,
                            ProjectId = 5L,
                            Status = "TODO",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9770),
                            Deadline = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Kiểm tra lỗ hổng bảo mật IoT.",
                            GroupId = 6L,
                            ProjectId = 6L,
                            Status = "IN_PROGRESS",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9773),
                            Deadline = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thu thập dữ liệu từ mạng xã hội.",
                            GroupId = 7L,
                            ProjectId = 7L,
                            Status = "DONE",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9777),
                            Deadline = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tích hợp AI vào app học ngoại ngữ.",
                            GroupId = 8L,
                            ProjectId = 8L,
                            Status = "IN_PROGRESS",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9780),
                            Deadline = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thiết kế hệ thống quản lý kho.",
                            GroupId = 9L,
                            ProjectId = 9L,
                            Status = "TODO",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9784),
                            Deadline = new DateTime(2025, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phát triển giao diện đặt lịch khám.",
                            GroupId = 10L,
                            ProjectId = 10L,
                            Status = "IN_PROGRESS",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9788),
                            Deadline = new DateTime(2025, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Kiểm tra chức năng quản lý nhân sự.",
                            GroupId = 11L,
                            ProjectId = 11L,
                            Status = "DONE",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9791),
                            Deadline = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tích hợp tính năng chat nhóm.",
                            GroupId = 12L,
                            ProjectId = 12L,
                            Status = "TODO",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9796),
                            Deadline = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thiết kế giao diện quản lý đồ án.",
                            GroupId = 1L,
                            ProjectId = 1L,
                            Status = "IN_PROGRESS",
                            Title = "Báo cáo tuần 2"
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9806),
                            Deadline = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thiết kế giao diện quản lý đồ án.",
                            GroupId = 1L,
                            ProjectId = 1L,
                            Status = "IN_PROGRESS",
                            Title = "Báo cáo tuần 3"
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(9809),
                            Deadline = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Báo cáo đồ án.",
                            GroupId = 1L,
                            ProjectId = 1L,
                            Status = "IN_PROGRESS",
                            Title = "Báo cáo cuối kỳ"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.TimeTracking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("StudentId");

                    b.ToTable("TimeTrackings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2876),
                            Duration = 120,
                            EndTime = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2874),
                            ProjectId = 1L,
                            StartTime = new DateTime(2025, 5, 27, 1, 50, 7, 466, DateTimeKind.Utc).AddTicks(2870),
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2883),
                            Duration = 60,
                            EndTime = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2882),
                            ProjectId = 1L,
                            StartTime = new DateTime(2025, 5, 27, 2, 50, 7, 466, DateTimeKind.Utc).AddTicks(2881),
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2893),
                            Duration = 180,
                            EndTime = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2886),
                            ProjectId = 2L,
                            StartTime = new DateTime(2025, 5, 27, 0, 50, 7, 466, DateTimeKind.Utc).AddTicks(2885),
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2897),
                            Duration = 60,
                            EndTime = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2896),
                            ProjectId = 3L,
                            StartTime = new DateTime(2025, 5, 27, 2, 50, 7, 466, DateTimeKind.Utc).AddTicks(2894),
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2905),
                            Duration = 120,
                            EndTime = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2903),
                            ProjectId = 4L,
                            StartTime = new DateTime(2025, 5, 27, 1, 50, 7, 466, DateTimeKind.Utc).AddTicks(2899),
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2910),
                            Duration = 240,
                            EndTime = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2909),
                            ProjectId = 5L,
                            StartTime = new DateTime(2025, 5, 26, 23, 50, 7, 466, DateTimeKind.Utc).AddTicks(2908),
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2913),
                            Duration = 60,
                            EndTime = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2912),
                            ProjectId = 6L,
                            StartTime = new DateTime(2025, 5, 27, 2, 50, 7, 466, DateTimeKind.Utc).AddTicks(2911),
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2927),
                            Duration = 120,
                            EndTime = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2925),
                            ProjectId = 7L,
                            StartTime = new DateTime(2025, 5, 27, 1, 50, 7, 466, DateTimeKind.Utc).AddTicks(2915),
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2931),
                            Duration = 180,
                            EndTime = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2930),
                            ProjectId = 8L,
                            StartTime = new DateTime(2025, 5, 27, 0, 50, 7, 466, DateTimeKind.Utc).AddTicks(2929),
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2935),
                            Duration = 60,
                            EndTime = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2934),
                            ProjectId = 9L,
                            StartTime = new DateTime(2025, 5, 27, 2, 50, 7, 466, DateTimeKind.Utc).AddTicks(2933),
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2938),
                            Duration = 120,
                            EndTime = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2938),
                            ProjectId = 10L,
                            StartTime = new DateTime(2025, 5, 27, 1, 50, 7, 466, DateTimeKind.Utc).AddTicks(2937),
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2942),
                            Duration = 180,
                            EndTime = new DateTime(2025, 5, 27, 3, 50, 7, 466, DateTimeKind.Utc).AddTicks(2941),
                            ProjectId = 11L,
                            StartTime = new DateTime(2025, 5, 27, 0, 50, 7, 466, DateTimeKind.Utc).AddTicks(2940),
                            StudentId = 11L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ClassCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FailedLoginAttempts")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GroupId");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8452),
                            Email = "admin@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Quản trị viên",
                            Locked = false,
                            Password = "$2a$11$MmTOc1jf3rBjKFC.8v5XfeFTeV5mEemXGLLFKFKddKenYqKoE0X12",
                            RoleId = 1L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8453),
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2L,
                            AvatarUrl = "/font-end/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8468),
                            DepartmentId = 1L,
                            Email = "AND123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Nguyễn Đình Ánh",
                            Locked = false,
                            Password = "$2a$11$MmTOc1jf3rBjKFC.8v5XfeFTeV5mEemXGLLFKFKddKenYqKoE0X12",
                            RoleId = 4L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8469),
                            Username = "AND123456789"
                        },
                        new
                        {
                            Id = 3L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8477),
                            DepartmentId = 2L,
                            Email = "HVT123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Văn Thiên Hoàng",
                            Locked = false,
                            Password = "$2a$11$MmTOc1jf3rBjKFC.8v5XfeFTeV5mEemXGLLFKFKddKenYqKoE0X12",
                            RoleId = 4L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8478),
                            Username = "HVT123456789"
                        },
                        new
                        {
                            Id = 4L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CourseId = 1L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8487),
                            Email = "CNH123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Nguyễn Huy Cường",
                            Locked = false,
                            Password = "$2a$11$MmTOc1jf3rBjKFC.8v5XfeFTeV5mEemXGLLFKFKddKenYqKoE0X12",
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8487),
                            Username = "CNH123456789"
                        },
                        new
                        {
                            Id = 5L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CourseId = 2L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8584),
                            Email = "TNT123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Nguyễn Thanh Tùng",
                            Locked = false,
                            Password = "$2a$11$MmTOc1jf3rBjKFC.8v5XfeFTeV5mEemXGLLFKFKddKenYqKoE0X12",
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8585),
                            Username = "TNT123456789"
                        },
                        new
                        {
                            Id = 6L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CourseId = 3L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8595),
                            Email = "KBP123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Bùi Phú Khuyên",
                            Locked = false,
                            Password = "$2a$11$MmTOc1jf3rBjKFC.8v5XfeFTeV5mEemXGLLFKFKddKenYqKoE0X12",
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8595),
                            Username = "KBP123456789"
                        },
                        new
                        {
                            Id = 7L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA1",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8605),
                            DepartmentId = 1L,
                            Email = "2180601452@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Nguyễn Tri Bão Thắng",
                            Locked = false,
                            Password = "$2a$11$MmTOc1jf3rBjKFC.8v5XfeFTeV5mEemXGLLFKFKddKenYqKoE0X12",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8605),
                            Username = "2180601452"
                        },
                        new
                        {
                            Id = 8L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA1",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8637),
                            DepartmentId = 1L,
                            Email = "2180600307@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Huỳnh Thành Đô",
                            Locked = false,
                            Password = "$2a$11$MmTOc1jf3rBjKFC.8v5XfeFTeV5mEemXGLLFKFKddKenYqKoE0X12",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8638),
                            Username = "2180600307"
                        },
                        new
                        {
                            Id = 9L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA1",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8648),
                            DepartmentId = 1L,
                            Email = "1911256118@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Nguyễn Thuận An",
                            Locked = false,
                            Password = "$2a$11$MmTOc1jf3rBjKFC.8v5XfeFTeV5mEemXGLLFKFKddKenYqKoE0X12",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8649),
                            Username = "1911256118"
                        },
                        new
                        {
                            Id = 10L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA1",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8658),
                            DepartmentId = 2L,
                            Email = "2180603746@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Võ Thành Trung",
                            Locked = false,
                            Password = "$2a$11$MmTOc1jf3rBjKFC.8v5XfeFTeV5mEemXGLLFKFKddKenYqKoE0X12",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8659),
                            Username = "2180603746"
                        },
                        new
                        {
                            Id = 11L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA1",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8668),
                            DepartmentId = 3L,
                            Email = "2180603747@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Lê Quang Vinh",
                            Locked = false,
                            Password = "$2a$11$MmTOc1jf3rBjKFC.8v5XfeFTeV5mEemXGLLFKFKddKenYqKoE0X12",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8669),
                            Username = "2180603747"
                        },
                        new
                        {
                            Id = 12L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA2",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8689),
                            DepartmentId = 3L,
                            Email = "2180603748@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Trần Quang Tài",
                            Locked = false,
                            Password = "$2a$11$MmTOc1jf3rBjKFC.8v5XfeFTeV5mEemXGLLFKFKddKenYqKoE0X12",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8690),
                            Username = "2180603748"
                        },
                        new
                        {
                            Id = 13L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA2",
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8700),
                            DepartmentId = 3L,
                            Email = "2180603749@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Trần Văn Tuệ",
                            Locked = false,
                            Password = "$2a$11$MmTOc1jf3rBjKFC.8v5XfeFTeV5mEemXGLLFKFKddKenYqKoE0X12",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8700),
                            Username = "2180603749"
                        },
                        new
                        {
                            Id = 14L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CourseId = 4L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8713),
                            DepartmentId = 2L,
                            Email = "TDTT123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Đặng Thị Thạch Thảo",
                            Locked = false,
                            Password = "$2a$11$MmTOc1jf3rBjKFC.8v5XfeFTeV5mEemXGLLFKFKddKenYqKoE0X12",
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8714),
                            Username = "TDTT123456789"
                        },
                        new
                        {
                            Id = 15L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CourseId = 5L,
                            CreatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8723),
                            DepartmentId = 3L,
                            Email = "CHM123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Hàn Minh Châu",
                            Locked = false,
                            Password = "$2a$11$MmTOc1jf3rBjKFC.8v5XfeFTeV5mEemXGLLFKFKddKenYqKoE0X12",
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 5, 27, 3, 50, 7, 465, DateTimeKind.Utc).AddTicks(8724),
                            Username = "CHM123456789"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.AISuggestion", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("AISuggestions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany("AISuggestions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Backup", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Calendar", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Calendars")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany("Calendars")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.CodeRun", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Submission", "Submission")
                        .WithMany("CodeRuns")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.CommitteeMember", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.DefenseCommittee", "Committee")
                        .WithMany("CommitteeMembers")
                        .HasForeignKey("CommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany("CommitteeMembers")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Committee");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Course", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Semester", "Semester")
                        .WithMany("Courses")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.DefenseCommittee", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.DefenseSchedule", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Meeting", "Meeting")
                        .WithMany("DefenseSchedules")
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("DefenseSchedules")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Discussion", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("Discussions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany("Discussions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Feedback", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany("Feedbacks")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Submission", "Submission")
                        .WithMany("Feedbacks")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.FeedbackSurvey", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany("FeedbackSurveys")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Grade", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.GradeCriteria", "Criteria")
                        .WithMany("Grades")
                        .HasForeignKey("CriteriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "GradedByUser")
                        .WithMany("GradedGrades")
                        .HasForeignKey("GradedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Grades")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("Grades")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Criteria");

                    b.Navigation("GradedByUser");

                    b.Navigation("Group");

                    b.Navigation("Project");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeAppeal", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Grade", "Grade")
                        .WithMany("GradeAppeals")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("GradeAppeals")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeCriteria", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Course", "Course")
                        .WithMany("GradeCriteria")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeLog", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Grade", "Grade")
                        .WithMany("GradeLogs")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany("GradeLogs")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeSchedule", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany("GradeSchedules")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("GradeSchedules")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeVersion", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Grade", "Grade")
                        .WithMany("GradeVersions")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Group", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany()
                        .HasForeignKey("LecturerId");

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithOne("Group")
                        .HasForeignKey("EduProject_TADProgrammer.Entities.Group", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GroupMember", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("GroupMembers")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("GroupMembers")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GroupRequest", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("GroupRequests")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("GroupRequests")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Log", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany("Logs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Meeting", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "CreatedByUser")
                        .WithMany("Meetings")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Meetings")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.MeetingRecord", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Meeting", "Meeting")
                        .WithMany("MeetingRecords")
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Notification", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Notifications")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.PeerReview", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("PeerReviews")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Reviewee")
                        .WithMany("PeerReviewsAsReviewee")
                        .HasForeignKey("RevieweeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Reviewer")
                        .WithMany("PeerReviewsAsReviewer")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Reviewee");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Project", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Course", "Course")
                        .WithMany("Projects")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.ProjectVersion", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("ProjectVersions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Question", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "CreatedByUser")
                        .WithMany("Questions")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("Questions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Resource", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "CreatedByUser")
                        .WithMany("Resources")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Resources")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("Resources")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("Group");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.RolePermission", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SkillAssessment", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("SkillAssessments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.StudentCourse", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Submission", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Submissions")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("Submissions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Task", "Task")
                        .WithMany("Submissions")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Group");

                    b.Navigation("Project");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SubmissionVersion", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Submission", "Submission")
                        .WithMany("SubmissionVersions")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Task", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Tasks")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("Tasks")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Group");

                    b.Navigation("Project");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.TimeTracking", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("TimeTrackings")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("TimeTrackings")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.User", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Course", "Course")
                        .WithMany("Lecturers")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EduProject_TADProgrammer.Entities.Department", "Department")
                        .WithMany("HeadLecturers")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("EduProject_TADProgrammer.Entities.Group", null)
                        .WithMany("Students")
                        .HasForeignKey("GroupId");

                    b.HasOne("EduProject_TADProgrammer.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Department");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Course", b =>
                {
                    b.Navigation("GradeCriteria");

                    b.Navigation("Lecturers");

                    b.Navigation("Projects");

                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.DefenseCommittee", b =>
                {
                    b.Navigation("CommitteeMembers");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("HeadLecturers");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Grade", b =>
                {
                    b.Navigation("GradeAppeals");

                    b.Navigation("GradeLogs");

                    b.Navigation("GradeVersions");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeCriteria", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Group", b =>
                {
                    b.Navigation("Calendars");

                    b.Navigation("Grades");

                    b.Navigation("GroupMembers");

                    b.Navigation("GroupRequests");

                    b.Navigation("Meetings");

                    b.Navigation("Notifications");

                    b.Navigation("PeerReviews");

                    b.Navigation("Resources");

                    b.Navigation("Students");

                    b.Navigation("Submissions");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Meeting", b =>
                {
                    b.Navigation("DefenseSchedules");

                    b.Navigation("MeetingRecords");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Project", b =>
                {
                    b.Navigation("AISuggestions");

                    b.Navigation("DefenseSchedules");

                    b.Navigation("Discussions");

                    b.Navigation("GradeSchedules");

                    b.Navigation("Grades");

                    b.Navigation("Group")
                        .IsRequired();

                    b.Navigation("ProjectVersions");

                    b.Navigation("Questions");

                    b.Navigation("Resources");

                    b.Navigation("Submissions");

                    b.Navigation("Tasks");

                    b.Navigation("TimeTrackings");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Semester", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Submission", b =>
                {
                    b.Navigation("CodeRuns");

                    b.Navigation("Feedbacks");

                    b.Navigation("SubmissionVersions");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Task", b =>
                {
                    b.Navigation("Submissions");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.User", b =>
                {
                    b.Navigation("AISuggestions");

                    b.Navigation("Calendars");

                    b.Navigation("CommitteeMembers");

                    b.Navigation("Discussions");

                    b.Navigation("FeedbackSurveys");

                    b.Navigation("Feedbacks");

                    b.Navigation("GradeAppeals");

                    b.Navigation("GradeLogs");

                    b.Navigation("GradeSchedules");

                    b.Navigation("GradedGrades");

                    b.Navigation("Grades");

                    b.Navigation("GroupMembers");

                    b.Navigation("GroupRequests");

                    b.Navigation("Logs");

                    b.Navigation("Meetings");

                    b.Navigation("Notifications");

                    b.Navigation("PeerReviewsAsReviewee");

                    b.Navigation("PeerReviewsAsReviewer");

                    b.Navigation("Questions");

                    b.Navigation("Resources");

                    b.Navigation("SkillAssessments");

                    b.Navigation("StudentCourses");

                    b.Navigation("Tasks");

                    b.Navigation("TimeTrackings");
                });
#pragma warning restore 612, 618
        }
    }
}
