// <auto-generated />
using System;
using EduProject_TADProgrammer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduProject_TADProgrammer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.AISuggestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("AISuggestions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Đề xuất thêm tính năng phân tích dữ liệu thời gian thực.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9346),
                            Type = "PROJECT",
                            UserId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Điểm nội dung có thể tăng nếu bổ sung tài liệu tham khảo.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9348),
                            ProjectId = 1L,
                            Type = "GRADE"
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Nên tích hợp tính năng chat vào hệ thống quản lý.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9350),
                            Type = "PROJECT",
                            UserId = 8L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Điểm trình bày có thể tăng nếu cải thiện bố cục.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9352),
                            ProjectId = 2L,
                            Type = "GRADE"
                        },
                        new
                        {
                            Id = 5L,
                            Content = "Đề xuất thêm cổng thanh toán cho website thương mại.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9416),
                            Type = "PROJECT",
                            UserId = 9L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Điểm nội dung có thể tăng nếu bổ sung ví dụ thực tế.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9418),
                            ProjectId = 3L,
                            Type = "GRADE"
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Nên tích hợp công cụ phân tích dữ liệu mạnh hơn.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9420),
                            Type = "PROJECT",
                            UserId = 10L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "Điểm phân tích có thể tăng nếu cải thiện độ chính xác.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9422),
                            ProjectId = 4L,
                            Type = "GRADE"
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Đề xuất thêm chế độ offline cho app quản lý học tập.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9423),
                            Type = "PROJECT",
                            UserId = 11L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "Điểm thực hành có thể tăng nếu bổ sung tính năng.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9425),
                            ProjectId = 5L,
                            Type = "GRADE"
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Nên tăng cường bảo mật cho hệ thống IoT.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9428),
                            Type = "PROJECT",
                            UserId = 12L
                        },
                        new
                        {
                            Id = 12L,
                            Content = "Điểm bảo mật có thể tăng nếu kiểm tra kỹ hơn.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9429),
                            ProjectId = 6L,
                            Type = "GRADE"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Backup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Backups");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9548),
                            CreatedBy = 1L,
                            Description = "Daily full database backup",
                            FilePath = "backups/db_backup_2025_02_01.sql",
                            FileSize = 104857600L,
                            Status = "Success",
                            Type = "Full",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9549)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 6, 6, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9552),
                            CreatedBy = 1L,
                            Description = "Incremental backup for Feb 2",
                            FilePath = "backups/db_backup_2025_02_02.sql",
                            FileSize = 52428800L,
                            Status = "Success",
                            Type = "Incremental",
                            UpdatedAt = new DateTime(2025, 6, 6, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9554)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 6, 5, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9556),
                            CreatedBy = 2L,
                            Description = "Daily full database backup",
                            FilePath = "backups/db_backup_2025_02_03.sql",
                            FileSize = 110100480L,
                            Status = "Success",
                            Type = "Full",
                            UpdatedAt = new DateTime(2025, 6, 5, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9557)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 6, 4, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9560),
                            Description = "Differential backup for Feb 4",
                            FilePath = "backups/db_backup_2025_02_04.sql",
                            FileSize = 73400320L,
                            Status = "Success",
                            Type = "Differential",
                            UpdatedAt = new DateTime(2025, 6, 4, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9560)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 6, 3, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9563),
                            CreatedBy = 1L,
                            Description = "Incremental backup failed due to disk space",
                            FilePath = "backups/db_backup_2025_02_05.sql",
                            Status = "Failed",
                            Type = "Incremental",
                            UpdatedAt = new DateTime(2025, 6, 3, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9569)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 6, 2, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9571),
                            CreatedBy = 2L,
                            Description = "Weekly full database backup",
                            FilePath = "backups/db_backup_2025_02_06.sql",
                            FileSize = 115343360L,
                            Status = "Success",
                            Type = "Full",
                            UpdatedAt = new DateTime(2025, 6, 2, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9572)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 6, 1, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9574),
                            Description = "Incremental backup for Feb 7",
                            FilePath = "backups/db_backup_2025_02_07.sql",
                            FileSize = 41943040L,
                            Status = "Success",
                            Type = "Incremental",
                            UpdatedAt = new DateTime(2025, 6, 1, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9575)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 5, 31, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9578),
                            CreatedBy = 1L,
                            Description = "Differential backup in progress",
                            FilePath = "backups/db_backup_2025_02_08.sql",
                            Status = "Pending",
                            Type = "Differential",
                            UpdatedAt = new DateTime(2025, 5, 31, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9578)
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 5, 30, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9581),
                            CreatedBy = 2L,
                            Description = "Daily full database backup",
                            FilePath = "backups/db_backup_2025_02_09.sql",
                            FileSize = 120586240L,
                            Status = "Success",
                            Type = "Full",
                            UpdatedAt = new DateTime(2025, 5, 30, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9582)
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 5, 29, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9584),
                            Description = "Incremental backup for Feb 10",
                            FilePath = "backups/db_backup_2025_02_10.sql",
                            FileSize = 52428800L,
                            Status = "Success",
                            Type = "Incremental",
                            UpdatedAt = new DateTime(2025, 5, 29, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9585)
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 5, 28, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9588),
                            CreatedBy = 1L,
                            Description = "Differential backup for Feb 11",
                            FilePath = "backups/db_backup_2025_02_11.sql",
                            FileSize = 83886080L,
                            Status = "Success",
                            Type = "Differential",
                            UpdatedAt = new DateTime(2025, 5, 28, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9588)
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 5, 27, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9591),
                            CreatedBy = 2L,
                            Description = "Daily full database backup",
                            FilePath = "backups/db_backup_2025_02_12.sql",
                            FileSize = 125829120L,
                            Status = "Success",
                            Type = "Full",
                            UpdatedAt = new DateTime(2025, 5, 27, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9592)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Calendar", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAllDay")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Calendars");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9201),
                            Description = "Họp nhóm để thảo luận tiến độ dự án",
                            EndTime = new DateTime(2025, 2, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            IsAllDay = false,
                            Location = "Phòng họp A",
                            StartTime = new DateTime(2025, 2, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9201),
                            UserId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9207),
                            Description = "Nộp bài tập lớn môn Lập trình",
                            EndTime = new DateTime(2025, 2, 28, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Nộp bài",
                            GroupId = 1L,
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 2, 28, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Deadline",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9208),
                            UserId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9212),
                            Description = "Họp nhóm để phân công nhiệm vụ",
                            EndTime = new DateTime(2025, 2, 17, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 2L,
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 2, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9212),
                            UserId = 8L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9215),
                            Description = "Bảo vệ đồ án tốt nghiệp",
                            EndTime = new DateTime(2025, 3, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Bảo vệ đồ án",
                            IsAllDay = false,
                            Location = "Hội trường",
                            StartTime = new DateTime(2025, 3, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Other",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9216),
                            UserId = 9L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9220),
                            Description = "Họp nhóm để kiểm tra tiến độ",
                            EndTime = new DateTime(2025, 2, 24, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 3L,
                            IsAllDay = false,
                            Location = "Phòng họp C",
                            StartTime = new DateTime(2025, 2, 24, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9220),
                            UserId = 10L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9224),
                            Description = "Nộp báo cáo nhiệm vụ cá nhân",
                            EndTime = new DateTime(2025, 2, 25, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Hạn nộp nhiệm vụ",
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 2, 25, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Deadline",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9224),
                            UserId = 11L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9227),
                            Description = "Họp nhóm để chuẩn bị thuyết trình",
                            EndTime = new DateTime(2025, 3, 3, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 4L,
                            IsAllDay = false,
                            Location = "Phòng họp A",
                            StartTime = new DateTime(2025, 3, 3, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9228),
                            UserId = 12L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9231),
                            Description = "Bảo vệ đồ án chuyên ngành",
                            EndTime = new DateTime(2025, 3, 5, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Bảo vệ đồ án",
                            IsAllDay = false,
                            Location = "Hội trường",
                            StartTime = new DateTime(2025, 3, 5, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Other",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9231),
                            UserId = 13L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9235),
                            Description = "Họp nhóm để hoàn thiện dự án",
                            EndTime = new DateTime(2025, 3, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 5L,
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 3, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9236),
                            UserId = 7L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9239),
                            Description = "Nộp báo cáo thực tập",
                            EndTime = new DateTime(2025, 3, 15, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Hạn nộp nhiệm vụ",
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 3, 15, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Deadline",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9239),
                            UserId = 8L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9244),
                            Description = "Họp nhóm để đánh giá tiến độ",
                            EndTime = new DateTime(2025, 3, 17, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 6L,
                            IsAllDay = false,
                            Location = "Phòng họp C",
                            StartTime = new DateTime(2025, 3, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9244),
                            UserId = 9L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9247),
                            Description = "Bảo vệ đồ án tốt nghiệp",
                            EndTime = new DateTime(2025, 3, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Bảo vệ đồ án",
                            IsAllDay = false,
                            Location = "Hội trường",
                            StartTime = new DateTime(2025, 3, 20, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Other",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9248),
                            UserId = 10L
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2025, 6, 6, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9251),
                            Description = "Họp nhóm để phân tích yêu cầu dự án",
                            EndTime = new DateTime(2025, 3, 24, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 7L,
                            IsAllDay = false,
                            Location = "Phòng họp A",
                            StartTime = new DateTime(2025, 3, 24, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 6, 6, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9252),
                            UserId = 11L
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(2025, 6, 6, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9255),
                            Description = "Nộp bài tập môn Cấu trúc dữ liệu",
                            EndTime = new DateTime(2025, 3, 25, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Hạn nộp bài tập",
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 3, 25, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Deadline",
                            UpdatedAt = new DateTime(2025, 6, 6, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9256),
                            UserId = 12L
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(2025, 6, 5, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9259),
                            Description = "Họp nhóm để chuẩn bị báo cáo",
                            EndTime = new DateTime(2025, 3, 31, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 8L,
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 3, 31, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 6, 5, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9260),
                            UserId = 13L
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTime(2025, 6, 5, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9263),
                            Description = "Thi cuối kỳ môn Lập trình nâng cao",
                            EndTime = new DateTime(2025, 4, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Thi cuối kỳ",
                            IsAllDay = false,
                            Location = "Phòng thi 101",
                            StartTime = new DateTime(2025, 4, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Other",
                            UpdatedAt = new DateTime(2025, 6, 5, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9263),
                            UserId = 7L
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTime(2025, 6, 4, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9267),
                            Description = "Họp nhóm bị hủy do lịch trùng",
                            EndTime = new DateTime(2025, 4, 7, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 9L,
                            IsAllDay = false,
                            Location = "Phòng họp C",
                            StartTime = new DateTime(2025, 4, 7, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Cancelled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 6, 4, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9268),
                            UserId = 8L
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTime(2025, 6, 4, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9271),
                            Description = "Nộp báo cáo dự án nhóm",
                            EndTime = new DateTime(2025, 4, 10, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Hạn nộp báo cáo",
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 4, 10, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Deadline",
                            UpdatedAt = new DateTime(2025, 6, 4, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9271),
                            UserId = 9L
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTime(2025, 6, 3, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9275),
                            Description = "Họp nhóm để hoàn thiện thuyết trình",
                            EndTime = new DateTime(2025, 4, 14, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 10L,
                            IsAllDay = false,
                            Location = "Phòng họp A",
                            StartTime = new DateTime(2025, 4, 14, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 6, 3, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9276),
                            UserId = 10L
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTime(2025, 6, 3, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9279),
                            Description = "Thi cuối kỳ môn Cơ sở dữ liệu",
                            EndTime = new DateTime(2025, 4, 15, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Thi cuối kỳ",
                            IsAllDay = false,
                            Location = "Phòng thi 102",
                            StartTime = new DateTime(2025, 4, 15, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Other",
                            UpdatedAt = new DateTime(2025, 6, 3, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9280),
                            UserId = 11L
                        },
                        new
                        {
                            Id = 21L,
                            CreatedAt = new DateTime(2025, 6, 2, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9283),
                            Description = "Họp nhóm để đánh giá dự án",
                            EndTime = new DateTime(2025, 4, 21, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Họp nhóm",
                            GroupId = 11L,
                            IsAllDay = false,
                            Location = "Phòng họp B",
                            StartTime = new DateTime(2025, 4, 21, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Meeting",
                            UpdatedAt = new DateTime(2025, 6, 2, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9284),
                            UserId = 12L
                        },
                        new
                        {
                            Id = 22L,
                            CreatedAt = new DateTime(2025, 6, 2, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9287),
                            Description = "Bảo vệ đồ án chuyên ngành",
                            EndTime = new DateTime(2025, 4, 25, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Bảo vệ đồ án",
                            IsAllDay = false,
                            Location = "Hội trường",
                            StartTime = new DateTime(2025, 4, 25, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Scheduled",
                            Type = "Other",
                            UpdatedAt = new DateTime(2025, 6, 2, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9288),
                            UserId = 13L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.CodeRun", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("ExecutionTime")
                        .HasColumnType("real");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("PlagiarismScore")
                        .HasColumnType("real");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubmissionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId");

                    b.ToTable("CodeRuns");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Code = "print('Hello World')",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7089),
                            ExecutionTime = 50.5f,
                            Language = "Python",
                            PlagiarismScore = 0.1f,
                            Result = "Output: Hello World",
                            Status = "Success",
                            SubmissionId = 1L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7090)
                        },
                        new
                        {
                            Id = 2L,
                            Code = "public class Main { public static void main(String[] args) { System.out.println(\"Hello\"); } }",
                            CreatedAt = new DateTime(2025, 6, 7, 5, 11, 14, 130, DateTimeKind.Utc).AddTicks(7094),
                            ExecutionTime = 120f,
                            Language = "Java",
                            PlagiarismScore = 0.2f,
                            Result = "Output: Hello",
                            Status = "Success",
                            SubmissionId = 2L,
                            UpdatedAt = new DateTime(2025, 6, 7, 5, 11, 14, 130, DateTimeKind.Utc).AddTicks(7096)
                        },
                        new
                        {
                            Id = 3L,
                            Code = "console.log('Hello World');",
                            CreatedAt = new DateTime(2025, 6, 7, 4, 11, 14, 130, DateTimeKind.Utc).AddTicks(7099),
                            ExecutionTime = 30.2f,
                            Language = "JavaScript",
                            PlagiarismScore = 0.15f,
                            Result = "Output: Hello World",
                            Status = "Success",
                            SubmissionId = 3L,
                            UpdatedAt = new DateTime(2025, 6, 7, 4, 11, 14, 130, DateTimeKind.Utc).AddTicks(7100)
                        },
                        new
                        {
                            Id = 4L,
                            Code = "print('Error Test')",
                            CreatedAt = new DateTime(2025, 6, 7, 3, 11, 14, 130, DateTimeKind.Utc).AddTicks(7103),
                            ErrorMessage = "SyntaxError: unexpected EOF while parsing",
                            Language = "Python",
                            PlagiarismScore = 0.3f,
                            Result = "Error: Invalid syntax",
                            Status = "Failed",
                            SubmissionId = 4L,
                            UpdatedAt = new DateTime(2025, 6, 7, 3, 11, 14, 130, DateTimeKind.Utc).AddTicks(7104)
                        },
                        new
                        {
                            Id = 5L,
                            Code = "public class Test { public static void main(String[] args) { System.out.println(\"Test\"); } }",
                            CreatedAt = new DateTime(2025, 6, 7, 2, 11, 14, 130, DateTimeKind.Utc).AddTicks(7108),
                            ExecutionTime = 110.5f,
                            Language = "Java",
                            PlagiarismScore = 0.1f,
                            Result = "Output: Test",
                            Status = "Success",
                            SubmissionId = 5L,
                            UpdatedAt = new DateTime(2025, 6, 7, 2, 11, 14, 130, DateTimeKind.Utc).AddTicks(7108)
                        },
                        new
                        {
                            Id = 6L,
                            Code = "print('IoT Security')",
                            CreatedAt = new DateTime(2025, 6, 7, 1, 11, 14, 130, DateTimeKind.Utc).AddTicks(7112),
                            ExecutionTime = 45f,
                            Language = "Python",
                            PlagiarismScore = 0.05f,
                            Result = "Output: IoT Security",
                            Status = "Success",
                            SubmissionId = 6L,
                            UpdatedAt = new DateTime(2025, 6, 7, 1, 11, 14, 130, DateTimeKind.Utc).AddTicks(7112)
                        },
                        new
                        {
                            Id = 7L,
                            Code = "console.log('Social Media');",
                            CreatedAt = new DateTime(2025, 6, 7, 0, 11, 14, 130, DateTimeKind.Utc).AddTicks(7115),
                            ExecutionTime = 25.8f,
                            Language = "JavaScript",
                            PlagiarismScore = 0.2f,
                            Result = "Output: Social Media",
                            Status = "Success",
                            SubmissionId = 7L,
                            UpdatedAt = new DateTime(2025, 6, 7, 0, 11, 14, 130, DateTimeKind.Utc).AddTicks(7116)
                        },
                        new
                        {
                            Id = 8L,
                            Code = "print('Language Learning')",
                            CreatedAt = new DateTime(2025, 6, 6, 23, 11, 14, 130, DateTimeKind.Utc).AddTicks(7119),
                            ErrorMessage = "Process exceeded 5-second limit",
                            Language = "Python",
                            PlagiarismScore = 0.4f,
                            Result = "Execution timed out",
                            Status = "Timeout",
                            SubmissionId = 8L,
                            UpdatedAt = new DateTime(2025, 6, 6, 23, 11, 14, 130, DateTimeKind.Utc).AddTicks(7119)
                        },
                        new
                        {
                            Id = 9L,
                            Code = "public class Warehouse { public static void main(String[] args) { System.out.println(\"Warehouse\"); } }",
                            CreatedAt = new DateTime(2025, 6, 6, 22, 11, 14, 130, DateTimeKind.Utc).AddTicks(7122),
                            ExecutionTime = 130f,
                            Language = "Java",
                            PlagiarismScore = 0.1f,
                            Result = "Output: Warehouse",
                            Status = "Success",
                            SubmissionId = 9L,
                            UpdatedAt = new DateTime(2025, 6, 6, 22, 11, 14, 130, DateTimeKind.Utc).AddTicks(7123)
                        },
                        new
                        {
                            Id = 10L,
                            Code = "print('Booking System')",
                            CreatedAt = new DateTime(2025, 6, 6, 21, 11, 14, 130, DateTimeKind.Utc).AddTicks(7126),
                            ExecutionTime = 48.3f,
                            Language = "Python",
                            PlagiarismScore = 0.05f,
                            Result = "Output: Booking System",
                            Status = "Success",
                            SubmissionId = 10L,
                            UpdatedAt = new DateTime(2025, 6, 6, 21, 11, 14, 130, DateTimeKind.Utc).AddTicks(7127)
                        },
                        new
                        {
                            Id = 11L,
                            Code = "console.log('HR System');",
                            CreatedAt = new DateTime(2025, 6, 6, 20, 11, 14, 130, DateTimeKind.Utc).AddTicks(7129),
                            ExecutionTime = 28.7f,
                            Language = "JavaScript",
                            PlagiarismScore = 0.15f,
                            Result = "Output: HR System",
                            Status = "Success",
                            SubmissionId = 11L,
                            UpdatedAt = new DateTime(2025, 6, 6, 20, 11, 14, 130, DateTimeKind.Utc).AddTicks(7130)
                        },
                        new
                        {
                            Id = 12L,
                            Code = "print('Group Study')",
                            CreatedAt = new DateTime(2025, 6, 6, 19, 11, 14, 130, DateTimeKind.Utc).AddTicks(7133),
                            ErrorMessage = "NameError: name 'undefined_variable' is not defined",
                            Language = "Python",
                            PlagiarismScore = 0.3f,
                            Result = "Error: NameError",
                            Status = "Failed",
                            SubmissionId = 12L,
                            UpdatedAt = new DateTime(2025, 6, 6, 19, 11, 14, 130, DateTimeKind.Utc).AddTicks(7134)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.CommitteeMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CommitteeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("LecturerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CommitteeId");

                    b.HasIndex("LecturerId");

                    b.ToTable("CommitteeMembers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CommitteeId = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7809),
                            LecturerId = 2L,
                            Role = "Chủ tịch",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7810)
                        },
                        new
                        {
                            Id = 2L,
                            CommitteeId = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7812),
                            LecturerId = 4L,
                            Role = "Thành viên",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7812)
                        },
                        new
                        {
                            Id = 3L,
                            CommitteeId = 2L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7814),
                            LecturerId = 3L,
                            Role = "Chủ tịch",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7815)
                        },
                        new
                        {
                            Id = 4L,
                            CommitteeId = 2L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7817),
                            LecturerId = 5L,
                            Role = "Thư ký",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7817)
                        },
                        new
                        {
                            Id = 5L,
                            CommitteeId = 3L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7819),
                            LecturerId = 6L,
                            Role = "Thành viên",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7820)
                        },
                        new
                        {
                            Id = 6L,
                            CommitteeId = 4L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7822),
                            LecturerId = 14L,
                            Role = "Chủ tịch",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7822)
                        },
                        new
                        {
                            Id = 7L,
                            CommitteeId = 5L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7824),
                            LecturerId = 15L,
                            Role = "Thư ký",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7824)
                        },
                        new
                        {
                            Id = 8L,
                            CommitteeId = 6L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7826),
                            LecturerId = 4L,
                            Role = "Thành viên",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7827)
                        },
                        new
                        {
                            Id = 9L,
                            CommitteeId = 7L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7829),
                            LecturerId = 5L,
                            Role = "Chủ tịch",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7829)
                        },
                        new
                        {
                            Id = 10L,
                            CommitteeId = 8L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7831),
                            LecturerId = 6L,
                            Role = "Thư ký",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7831)
                        },
                        new
                        {
                            Id = 11L,
                            CommitteeId = 9L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7833),
                            LecturerId = 14L,
                            Role = "Thành viên",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7834)
                        },
                        new
                        {
                            Id = 12L,
                            CommitteeId = 10L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7835),
                            LecturerId = 15L,
                            Role = "Chủ tịch",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7836)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DefenseDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("SemesterId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("SemesterId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CourseCode = "CNTT_TN_2025",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5848),
                            DefenseDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp CNPM",
                            SemesterId = 1L,
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5848)
                        },
                        new
                        {
                            Id = 2L,
                            CourseCode = "CNTT_CS_2025",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5854),
                            DefenseDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở CNPM",
                            SemesterId = 1L,
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5855)
                        },
                        new
                        {
                            Id = 3L,
                            CourseCode = "KTPM_TN_2025",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5859),
                            DefenseDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp KTPM",
                            SemesterId = 1L,
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5859)
                        },
                        new
                        {
                            Id = 4L,
                            CourseCode = "KTPM_CS_2025",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5863),
                            DefenseDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở KTPM",
                            SemesterId = 1L,
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5864)
                        },
                        new
                        {
                            Id = 5L,
                            CourseCode = "ATTT_TN_2025",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5868),
                            DefenseDate = new DateTime(2025, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2L,
                            EndDate = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp ATTT",
                            SemesterId = 2L,
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5868)
                        },
                        new
                        {
                            Id = 6L,
                            CourseCode = "ATTT_CS_2025",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5872),
                            DefenseDate = new DateTime(2025, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2L,
                            EndDate = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở ATTT",
                            SemesterId = 2L,
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5873)
                        },
                        new
                        {
                            Id = 7L,
                            CourseCode = "KHMT_TN_2025",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5876),
                            DefenseDate = new DateTime(2025, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp KHMT",
                            SemesterId = 2L,
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5877)
                        },
                        new
                        {
                            Id = 8L,
                            CourseCode = "KHMT_CS_2025",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5881),
                            DefenseDate = new DateTime(2025, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở KHMT",
                            SemesterId = 2L,
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "OPEN",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5881)
                        },
                        new
                        {
                            Id = 9L,
                            CourseCode = "HTTT_TN_2025",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5886),
                            DefenseDate = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp HTTT",
                            SemesterId = 3L,
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "PLANNED",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5887)
                        },
                        new
                        {
                            Id = 10L,
                            CourseCode = "HTTT_CS_2025",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5895),
                            DefenseDate = new DateTime(2025, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở HTTT",
                            SemesterId = 3L,
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "PLANNED",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5895)
                        },
                        new
                        {
                            Id = 11L,
                            CourseCode = "CNPM_TN_2025",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5899),
                            DefenseDate = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Tốt nghiệp TTNT",
                            SemesterId = 3L,
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "PLANNED",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5900)
                        },
                        new
                        {
                            Id = 12L,
                            CourseCode = "CNPM_CS_2025",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5904),
                            DefenseDate = new DateTime(2025, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1L,
                            EndDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đồ án Cơ sở TTNT",
                            SemesterId = 3L,
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "PLANNED",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5904)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.DefenseCommittee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("SemesterId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("SemesterId");

                    b.ToTable("DefenseCommittees");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7734),
                            Name = "Hội đồng 1",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7736)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7738),
                            Name = "Hội đồng 2",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7739)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7741),
                            Name = "Hội đồng 3",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7741)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7743),
                            Name = "Hội đồng 4",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7744)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7746),
                            Name = "Hội đồng 5",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7746)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7748),
                            Name = "Hội đồng 6",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7749)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7751),
                            Name = "Hội đồng 7",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7751)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7753),
                            Name = "Hội đồng 8",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7753)
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7755),
                            Name = "Hội đồng 9",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7756)
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7758),
                            Name = "Hội đồng 10",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7758)
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7760),
                            Name = "Hội đồng 11",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7760)
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7762),
                            Name = "Hội đồng 12",
                            SemesterId = 1L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7763)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.DefenseSchedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("MeetingId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MeetingId");

                    b.HasIndex("ProjectId");

                    b.ToTable("DefenseSchedules");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7880),
                            EndTime = new DateTime(2025, 3, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            MeetingId = 1L,
                            ProjectId = 1L,
                            Room = "A101",
                            StartTime = new DateTime(2025, 3, 1, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7883),
                            EndTime = new DateTime(2025, 3, 2, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 2L,
                            Room = "A102",
                            StartTime = new DateTime(2025, 3, 2, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7885),
                            EndTime = new DateTime(2025, 3, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 3L,
                            Room = "A103",
                            StartTime = new DateTime(2025, 3, 3, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7887),
                            EndTime = new DateTime(2025, 3, 4, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 4L,
                            Room = "A104",
                            StartTime = new DateTime(2025, 3, 4, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7889),
                            EndTime = new DateTime(2025, 3, 5, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 5L,
                            Room = "A105",
                            StartTime = new DateTime(2025, 3, 5, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7891),
                            EndTime = new DateTime(2025, 3, 6, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 6L,
                            Room = "A106",
                            StartTime = new DateTime(2025, 3, 6, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7893),
                            EndTime = new DateTime(2025, 3, 7, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 7L,
                            Room = "A107",
                            StartTime = new DateTime(2025, 3, 7, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7895),
                            EndTime = new DateTime(2025, 3, 8, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 8L,
                            Room = "A108",
                            StartTime = new DateTime(2025, 3, 8, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7897),
                            EndTime = new DateTime(2025, 3, 9, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 9L,
                            Room = "A109",
                            StartTime = new DateTime(2025, 3, 9, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7899),
                            EndTime = new DateTime(2025, 3, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 10L,
                            Room = "A110",
                            StartTime = new DateTime(2025, 3, 10, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7901),
                            EndTime = new DateTime(2025, 3, 11, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 11L,
                            Room = "A111",
                            StartTime = new DateTime(2025, 3, 11, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7903),
                            EndTime = new DateTime(2025, 3, 12, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 12L,
                            Room = "A112",
                            StartTime = new DateTime(2025, 3, 12, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("FacultyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FacultyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FacultyCode = "CNPM",
                            FacultyName = "Công nghệ phần mềm"
                        },
                        new
                        {
                            Id = 2L,
                            FacultyCode = "ATTT",
                            FacultyName = "An toàn thông tin"
                        },
                        new
                        {
                            Id = 3L,
                            FacultyCode = "MMT",
                            FacultyName = "Mạng máy tính"
                        },
                        new
                        {
                            Id = 4L,
                            FacultyCode = "HTTT",
                            FacultyName = "Hệ thống thông tin"
                        },
                        new
                        {
                            Id = 5L,
                            FacultyCode = "TTNT",
                            FacultyName = "Trí tuệ nhân tạo"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Discussion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int>("Votes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Discussions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Có ai biết cách tích hợp AI vào ứng dụng y tế?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8632),
                            ProjectId = 1L,
                            Title = "Hỏi về AI trong y tế",
                            UserId = 7L,
                            Votes = 5
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Nên dùng framework nào cho giao diện?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8635),
                            Title = "Thắc mắc về thiết kế giao diện",
                            UserId = 9L,
                            Votes = 3
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Nên dùng cổng thanh toán nào?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8637),
                            ProjectId = 3L,
                            Title = "Thanh toán thương mại điện tử",
                            UserId = 10L,
                            Votes = 4
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Có công cụ nào tốt để phân tích dữ liệu?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8639),
                            ProjectId = 4L,
                            Title = "Phân tích dữ liệu",
                            UserId = 12L,
                            Votes = 2
                        },
                        new
                        {
                            Id = 5L,
                            Content = "App quản lý học tập nên có tính năng gì?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8641),
                            ProjectId = 5L,
                            Title = "Quản lý học tập",
                            UserId = 7L,
                            Votes = 6
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Làm sao để tăng cường bảo mật IoT?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8643),
                            ProjectId = 6L,
                            Title = "Bảo mật IoT",
                            UserId = 8L,
                            Votes = 3
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Có công cụ nào miễn phí để phân tích?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8645),
                            ProjectId = 7L,
                            Title = "Phân tích mạng xã hội",
                            UserId = 9L,
                            Votes = 5
                        },
                        new
                        {
                            Id = 8L,
                            Content = "App học ngoại ngữ nên có gì đặc biệt?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8648),
                            ProjectId = 8L,
                            Title = "Học ngoại ngữ",
                            UserId = 10L,
                            Votes = 4
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Hệ thống quản lý kho nên tự động hóa thế nào?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8649),
                            ProjectId = 9L,
                            Title = "Quản lý kho",
                            UserId = 11L,
                            Votes = 3
                        },
                        new
                        {
                            Id = 10L,
                            Content = "App đặt lịch nên có thông báo không?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8652),
                            ProjectId = 10L,
                            Title = "Đặt lịch khám bệnh",
                            UserId = 12L,
                            Votes = 5
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Hệ thống nhân sự cần báo cáo gì?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8653),
                            ProjectId = 11L,
                            Title = "Quản lý nhân sự",
                            UserId = 13L,
                            Votes = 2
                        },
                        new
                        {
                            Id = 12L,
                            Content = "App học nhóm nên có tính năng gì?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8655),
                            ProjectId = 12L,
                            Title = "Học tập nhóm",
                            UserId = 7L,
                            Votes = 4
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.FAQ", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.ToTable("FAQs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Answer = "Đăng nhập, vào mục Nộp bài, tải file lên.",
                            Category = "Nộp bài",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8460),
                            Question = "Làm thế nào để nộp đồ án?"
                        },
                        new
                        {
                            Id = 2L,
                            Answer = "Xem lịch bảo vệ trong mục Lịch.",
                            Category = "Bảo vệ",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8462),
                            Question = "Thời gian bảo vệ là khi nào?"
                        },
                        new
                        {
                            Id = 3L,
                            Answer = "Vào mục Nhóm, gửi yêu cầu tham gia.",
                            Category = "Nhóm",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8464),
                            Question = "Làm sao để tham gia nhóm?"
                        },
                        new
                        {
                            Id = 4L,
                            Answer = "Vào mục Điểm số, chọn đồ án của bạn.",
                            Category = "Điểm số",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8465),
                            Question = "Cách xem điểm đồ án?"
                        },
                        new
                        {
                            Id = 5L,
                            Answer = "Vào mục Phản hồi, điền nội dung.",
                            Category = "Phản hồi",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8467),
                            Question = "Làm sao để gửi phản hồi?"
                        },
                        new
                        {
                            Id = 6L,
                            Answer = "Có, AI hỗ trợ gợi ý và đánh giá.",
                            Category = "Hỗ trợ",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8468),
                            Question = "Hệ thống có hỗ trợ AI không?"
                        },
                        new
                        {
                            Id = 7L,
                            Answer = "Vào mục Nhiệm vụ, nhấn Tạo mới.",
                            Category = "Nhiệm vụ",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8470),
                            Question = "Làm sao để tạo nhiệm vụ?"
                        },
                        new
                        {
                            Id = 8L,
                            Answer = "Vào mục Tài liệu, chọn tài liệu và tải.",
                            Category = "Tài liệu",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8472),
                            Question = "Cách tải tài liệu tham khảo?"
                        },
                        new
                        {
                            Id = 9L,
                            Answer = "Vào mục Lịch, chọn lịch họp nhóm.",
                            Category = "Họp nhóm",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8473),
                            Question = "Làm sao để xem lịch họp?"
                        },
                        new
                        {
                            Id = 10L,
                            Answer = "Vào mục Điểm số, chọn Kháng nghị.",
                            Category = "Kháng nghị",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8475),
                            Question = "Cách gửi kháng nghị điểm?"
                        },
                        new
                        {
                            Id = 11L,
                            Answer = "Có, vào mục Chat để trò chuyện nhóm.",
                            Category = "Chat",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8476),
                            Question = "Hệ thống có hỗ trợ chat không?"
                        },
                        new
                        {
                            Id = 12L,
                            Answer = "Vào Cài đặt, chọn Đổi mật khẩu.",
                            Category = "Tài khoản",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8478),
                            Question = "Làm sao để đổi mật khẩu?"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Feedback", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("LecturerId")
                        .HasColumnType("bigint");

                    b.Property<long>("SubmissionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LecturerId");

                    b.HasIndex("SubmissionId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Cần cải thiện phần phân tích dữ liệu.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7020),
                            LecturerId = 4L,
                            SubmissionId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Tốt, nhưng cần bổ sung tài liệu tham khảo.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7022),
                            LecturerId = 5L,
                            SubmissionId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Cần chỉnh sửa bố cục báo cáo.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7024),
                            LecturerId = 6L,
                            SubmissionId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Bài nộp chưa đạt yêu cầu.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7025),
                            LecturerId = 14L,
                            SubmissionId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Content = "Cần bổ sung hình ảnh minh họa.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7027),
                            LecturerId = 15L,
                            SubmissionId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Tốt, nội dung đầy đủ.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7029),
                            LecturerId = 4L,
                            SubmissionId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Cần cải thiện phần kết luận.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7030),
                            LecturerId = 5L,
                            SubmissionId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "Bài nộp không đúng định dạng.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7032),
                            LecturerId = 6L,
                            SubmissionId = 8L
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Cần bổ sung tài liệu tham khảo.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7033),
                            LecturerId = 14L,
                            SubmissionId = 9L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "Tốt, đạt yêu cầu.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7035),
                            LecturerId = 15L,
                            SubmissionId = 10L
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Cần chỉnh sửa phần giới thiệu.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7036),
                            LecturerId = 4L,
                            SubmissionId = 11L
                        },
                        new
                        {
                            Id = 12L,
                            Content = "Bài nộp không đạt, cần làm lại.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7038),
                            LecturerId = 5L,
                            SubmissionId = 12L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.FeedbackSurvey", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FeedbackSurveys");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Hệ thống dễ sử dụng.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8730),
                            Rating = 4,
                            UserId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Cần cải thiện tốc độ tải.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8732),
                            Rating = 3,
                            UserId = 8L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Giao diện thân thiện.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8734),
                            Rating = 5,
                            UserId = 9L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Chat nhóm bị lỗi.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8735),
                            Rating = 2,
                            UserId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            Content = "Hỗ trợ tốt.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8737),
                            Rating = 4,
                            UserId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Cần thêm hướng dẫn sử dụng.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8739),
                            Rating = 3,
                            UserId = 12L
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Tính năng quản lý nhóm tốt.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8741),
                            Rating = 5,
                            UserId = 13L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "Thông báo không hoạt động.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8742),
                            Rating = 2,
                            UserId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Rất hài lòng với hệ thống.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8744),
                            Rating = 5,
                            UserId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "Cần cải thiện tốc độ.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8745),
                            Rating = 3,
                            UserId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Giao diện đẹp.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8747),
                            Rating = 4,
                            UserId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            Content = "Hệ thống ổn định.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8748),
                            Rating = 4,
                            UserId = 11L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Grade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CriteriaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("GradedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GradedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CriteriaId");

                    b.HasIndex("GradedBy");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("StudentId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Comment = "Đã duyệt",
                            CriteriaId = 1L,
                            GradedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7288),
                            GradedBy = 4L,
                            GroupId = 1L,
                            ProjectId = 1L,
                            Score = 8.5f,
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            Comment = "Đã duyệt",
                            CriteriaId = 2L,
                            GradedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7291),
                            GradedBy = 4L,
                            GroupId = 1L,
                            ProjectId = 1L,
                            Score = 8f,
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 3L,
                            Comment = "Đã duyệt",
                            CriteriaId = 1L,
                            GradedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7293),
                            GradedBy = 5L,
                            GroupId = 2L,
                            ProjectId = 2L,
                            Score = 7.5f
                        },
                        new
                        {
                            Id = 4L,
                            Comment = "Chưa duyệt",
                            CriteriaId = 4L,
                            GradedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7296),
                            GradedBy = 6L,
                            GroupId = 3L,
                            ProjectId = 3L,
                            Score = 8f
                        },
                        new
                        {
                            Id = 5L,
                            Comment = "Chưa duyệt",
                            CriteriaId = 6L,
                            GradedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7298),
                            GradedBy = 14L,
                            GroupId = 4L,
                            ProjectId = 4L,
                            Score = 7f
                        },
                        new
                        {
                            Id = 6L,
                            Comment = "Chưa duyệt",
                            CriteriaId = 7L,
                            GradedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7300),
                            GradedBy = 15L,
                            GroupId = 5L,
                            ProjectId = 5L,
                            Score = 8.5f
                        },
                        new
                        {
                            Id = 7L,
                            Comment = "Chưa duyệt",
                            CriteriaId = 8L,
                            GradedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7350),
                            GradedBy = 4L,
                            GroupId = 6L,
                            ProjectId = 6L,
                            Score = 9f
                        },
                        new
                        {
                            Id = 8L,
                            Comment = "Chưa duyệt",
                            CriteriaId = 9L,
                            GradedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7352),
                            GradedBy = 5L,
                            GroupId = 7L,
                            ProjectId = 7L,
                            Score = 6.5f
                        },
                        new
                        {
                            Id = 9L,
                            Comment = "Chưa duyệt",
                            CriteriaId = 10L,
                            GradedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7355),
                            GradedBy = 6L,
                            GroupId = 8L,
                            ProjectId = 8L,
                            Score = 8f
                        },
                        new
                        {
                            Id = 10L,
                            Comment = "Chưa duyệt",
                            CriteriaId = 11L,
                            GradedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7357),
                            GradedBy = 14L,
                            GroupId = 9L,
                            ProjectId = 9L,
                            Score = 7.5f
                        },
                        new
                        {
                            Id = 11L,
                            Comment = "Chưa duyệt",
                            CriteriaId = 12L,
                            GradedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7359),
                            GradedBy = 15L,
                            GroupId = 10L,
                            ProjectId = 10L,
                            Score = 8f
                        },
                        new
                        {
                            Id = 12L,
                            Comment = "Đã duyệt",
                            CriteriaId = 13L,
                            GradedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7362),
                            GradedBy = 4L,
                            GroupId = 11L,
                            ProjectId = 11L,
                            Score = 7f
                        },
                        new
                        {
                            Id = 13L,
                            Comment = "Đã duyệt",
                            CriteriaId = 3L,
                            GradedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7364),
                            GradedBy = 4L,
                            GroupId = 1L,
                            ProjectId = 1L,
                            Score = 8f,
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 14L,
                            Comment = "Đã duyệt",
                            CriteriaId = 1L,
                            GradedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7367),
                            GradedBy = 4L,
                            GroupId = 1L,
                            ProjectId = 1L,
                            Score = 8f,
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 15L,
                            Comment = "Đã duyệt",
                            CriteriaId = 2L,
                            GradedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7370),
                            GradedBy = 4L,
                            GroupId = 1L,
                            ProjectId = 1L,
                            Score = 8f,
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 16L,
                            Comment = "Đã duyệt",
                            CriteriaId = 3L,
                            GradedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7372),
                            GradedBy = 4L,
                            GroupId = 1L,
                            ProjectId = 1L,
                            Score = 8.5f,
                            StudentId = 7L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeAppeal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GradeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("StudentId");

                    b.ToTable("GradeAppeals");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7621),
                            GradeId = 1L,
                            Reason = "Điểm nội dung chưa hợp lý.",
                            Status = "PENDING",
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7624),
                            GradeId = 2L,
                            Reason = "Điểm trình bày thấp.",
                            Response = "Đã điều chỉnh điểm.",
                            Status = "APPROVED",
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7626),
                            GradeId = 3L,
                            Reason = "Điểm nội dung không hợp lý.",
                            Response = "Điểm đã hợp lý.",
                            Status = "REJECTED",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7628),
                            GradeId = 4L,
                            Reason = "Điểm nội dung thấp.",
                            Status = "PENDING",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7629),
                            GradeId = 5L,
                            Reason = "Cần xem lại điểm.",
                            Status = "PENDING",
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7631),
                            GradeId = 6L,
                            Reason = "Điểm thực hành chưa đúng.",
                            Response = "Đã điều chỉnh.",
                            Status = "APPROVED",
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7633),
                            GradeId = 7L,
                            Reason = "Điểm bảo mật không hợp lý.",
                            Response = "Điểm hợp lý.",
                            Status = "REJECTED",
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7677),
                            GradeId = 8L,
                            Reason = "Điểm phân tích thấp.",
                            Status = "PENDING",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7679),
                            GradeId = 9L,
                            Reason = "Điểm ứng dụng chưa đúng.",
                            Response = "Đã điều chỉnh.",
                            Status = "APPROVED",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7680),
                            GradeId = 10L,
                            Reason = "Điểm quản lý chưa hợp lý.",
                            Response = "Điểm hợp lý.",
                            Status = "REJECTED",
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7682),
                            GradeId = 11L,
                            Reason = "Điểm tiện ích thấp.",
                            Status = "PENDING",
                            StudentId = 12L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeCriteria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("GradeCriteria");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CourseId = 1L,
                            Description = "Chất lượng nội dung đồ án.",
                            Name = "Nội dung",
                            Weight = 0.4f
                        },
                        new
                        {
                            Id = 2L,
                            CourseId = 1L,
                            Description = "Cách trình bày báo cáo.",
                            Name = "Trình bày",
                            Weight = 0.3f
                        },
                        new
                        {
                            Id = 3L,
                            CourseId = 1L,
                            Description = "Kỹ năng bảo vệ.",
                            Name = "Bảo vệ",
                            Weight = 0.3f
                        },
                        new
                        {
                            Id = 4L,
                            CourseId = 2L,
                            Description = "Chất lượng nội dung đồ án cơ sở.",
                            Name = "Nội dung",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 5L,
                            CourseId = 2L,
                            Description = "Kỹ năng thực hành.",
                            Name = "Thực hành",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 6L,
                            CourseId = 3L,
                            Description = "Chất lượng nội dung đồ án KTPM.",
                            Name = "Nội dung",
                            Weight = 0.4f
                        },
                        new
                        {
                            Id = 7L,
                            CourseId = 4L,
                            Description = "Kỹ năng thực hành KTPM.",
                            Name = "Thực hành",
                            Weight = 0.6f
                        },
                        new
                        {
                            Id = 8L,
                            CourseId = 5L,
                            Description = "Mức độ bảo mật.",
                            Name = "Bảo mật",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 9L,
                            CourseId = 6L,
                            Description = "Kỹ năng phân tích dữ liệu.",
                            Name = "Phân tích",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 10L,
                            CourseId = 7L,
                            Description = "Ứng dụng thực tế.",
                            Name = "Ứng dụng",
                            Weight = 0.4f
                        },
                        new
                        {
                            Id = 11L,
                            CourseId = 8L,
                            Description = "Khả năng quản lý kho.",
                            Name = "Quản lý",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 12L,
                            CourseId = 9L,
                            Description = "Tính tiện ích của app.",
                            Name = "Tiện ích",
                            Weight = 0.5f
                        },
                        new
                        {
                            Id = 13L,
                            CourseId = 10L,
                            Description = "Hiệu quả quản lý nhân sự.",
                            Name = "Hiệu quả",
                            Weight = 0.5f
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("GradeId")
                        .HasColumnType("bigint");

                    b.Property<long>("LecturerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("LecturerId");

                    b.ToTable("GradeLogs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7492),
                            Details = "Tạo điểm cho nhóm 1.",
                            GradeId = 1L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 2L,
                            Action = "UPDATE",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7494),
                            Details = "Cập nhật điểm nhóm 1.",
                            GradeId = 1L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 3L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7496),
                            Details = "Tạo điểm cho nhóm 1.",
                            GradeId = 2L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 4L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7498),
                            Details = "Tạo điểm cho nhóm 2.",
                            GradeId = 3L,
                            LecturerId = 5L
                        },
                        new
                        {
                            Id = 5L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7500),
                            Details = "Tạo điểm cho nhóm 3.",
                            GradeId = 4L,
                            LecturerId = 6L
                        },
                        new
                        {
                            Id = 6L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7501),
                            Details = "Tạo điểm cho nhóm 4.",
                            GradeId = 5L,
                            LecturerId = 14L
                        },
                        new
                        {
                            Id = 7L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7503),
                            Details = "Tạo điểm cho nhóm 5.",
                            GradeId = 6L,
                            LecturerId = 15L
                        },
                        new
                        {
                            Id = 8L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7505),
                            Details = "Tạo điểm cho nhóm 6.",
                            GradeId = 7L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 9L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7506),
                            Details = "Tạo điểm cho nhóm 7.",
                            GradeId = 8L,
                            LecturerId = 5L
                        },
                        new
                        {
                            Id = 10L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7508),
                            Details = "Tạo điểm cho nhóm 8.",
                            GradeId = 9L,
                            LecturerId = 6L
                        },
                        new
                        {
                            Id = 11L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7509),
                            Details = "Tạo điểm cho nhóm 9.",
                            GradeId = 10L,
                            LecturerId = 14L
                        },
                        new
                        {
                            Id = 12L,
                            Action = "CREATE",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7511),
                            Details = "Tạo điểm cho nhóm 10.",
                            GradeId = 11L,
                            LecturerId = 15L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeSchedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<long>("LecturerId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LecturerId");

                    b.HasIndex("ProjectId");

                    b.ToTable("GradeSchedules");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7556),
                            Deadline = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 4L,
                            ProjectId = 1L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7558),
                            Deadline = new DateTime(2025, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 5L,
                            ProjectId = 2L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7560),
                            Deadline = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 6L,
                            ProjectId = 3L,
                            Status = "COMPLETED"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7562),
                            Deadline = new DateTime(2025, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 14L,
                            ProjectId = 4L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7564),
                            Deadline = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 15L,
                            ProjectId = 5L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7566),
                            Deadline = new DateTime(2025, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 4L,
                            ProjectId = 6L,
                            Status = "COMPLETED"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7567),
                            Deadline = new DateTime(2025, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 5L,
                            ProjectId = 7L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7569),
                            Deadline = new DateTime(2025, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 6L,
                            ProjectId = 8L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7571),
                            Deadline = new DateTime(2025, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 14L,
                            ProjectId = 9L,
                            Status = "COMPLETED"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7573),
                            Deadline = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 15L,
                            ProjectId = 10L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7574),
                            Deadline = new DateTime(2025, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 4L,
                            ProjectId = 11L,
                            Status = "PENDING"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7576),
                            Deadline = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LecturerId = 5L,
                            ProjectId = 12L,
                            Status = "COMPLETED"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GradeId")
                        .HasColumnType("bigint");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.ToTable("GradeVersions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 6, 6, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7433),
                            GradeId = 1L,
                            Score = 8f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 2L,
                            Comment = "Cập nhật điểm.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7435),
                            GradeId = 1L,
                            Score = 8.5f,
                            VersionNumber = 2
                        },
                        new
                        {
                            Id = 3L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7437),
                            GradeId = 2L,
                            Score = 8f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 4L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7439),
                            GradeId = 3L,
                            Score = 7.5f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 5L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7440),
                            GradeId = 4L,
                            Score = 8f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 6L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7442),
                            GradeId = 5L,
                            Score = 7f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 7L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7443),
                            GradeId = 6L,
                            Score = 8.5f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 8L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7445),
                            GradeId = 7L,
                            Score = 9f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 9L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7447),
                            GradeId = 8L,
                            Score = 6.5f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 10L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7448),
                            GradeId = 9L,
                            Score = 8f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 11L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7450),
                            GradeId = 10L,
                            Score = 7.5f,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 12L,
                            Comment = "Phiên bản đầu.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7451),
                            GradeId = 11L,
                            Score = 8f,
                            VersionNumber = 1
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LecturerId")
                        .HasColumnType("bigint");

                    b.Property<int>("MaxMembers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LecturerId");

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6308),
                            LecturerId = 4L,
                            MaxMembers = 5,
                            Name = "Nhóm 1",
                            ProjectId = 1L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6308)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6313),
                            LecturerId = 4L,
                            MaxMembers = 5,
                            Name = "Nhóm 2",
                            ProjectId = 2L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6313)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6318),
                            LecturerId = 4L,
                            MaxMembers = 5,
                            Name = "Nhóm 3",
                            ProjectId = 3L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6318)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6386),
                            MaxMembers = 5,
                            Name = "Nhóm 4",
                            ProjectId = 4L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6387)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6391),
                            MaxMembers = 5,
                            Name = "Nhóm 5",
                            ProjectId = 5L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6391)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6395),
                            MaxMembers = 5,
                            Name = "Nhóm 6",
                            ProjectId = 6L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6395)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6399),
                            MaxMembers = 5,
                            Name = "Nhóm 7",
                            ProjectId = 7L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6399)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6403),
                            MaxMembers = 5,
                            Name = "Nhóm 8",
                            ProjectId = 8L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6404)
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6408),
                            MaxMembers = 5,
                            Name = "Nhóm 9",
                            ProjectId = 9L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6408)
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6412),
                            MaxMembers = 5,
                            Name = "Nhóm 10",
                            ProjectId = 10L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6413)
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6416),
                            MaxMembers = 5,
                            Name = "Nhóm 11",
                            ProjectId = 11L,
                            Status = "APPROVED",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6417)
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6421),
                            MaxMembers = 5,
                            Name = "Nhóm 12",
                            ProjectId = 12L,
                            Status = "PENDING",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6422)
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6425),
                            MaxMembers = 5,
                            Name = "Nhóm 13",
                            ProjectId = 13L,
                            Status = "PENDING",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6426)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GroupMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsLeader")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudentId");

                    b.ToTable("GroupMembers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            GroupId = 1L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6475),
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            GroupId = 1L,
                            IsLeader = false,
                            JoinedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6477),
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 3L,
                            GroupId = 2L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6479),
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 4L,
                            GroupId = 3L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6480),
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            GroupId = 3L,
                            IsLeader = false,
                            JoinedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6482),
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            GroupId = 4L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6483),
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 7L,
                            GroupId = 4L,
                            IsLeader = false,
                            JoinedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6485),
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 8L,
                            GroupId = 5L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6486),
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            GroupId = 6L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6488),
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            GroupId = 7L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6490),
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            GroupId = 8L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6491),
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            GroupId = 9L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6493),
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 13L,
                            GroupId = 10L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6494),
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 14L,
                            GroupId = 11L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6497),
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 15L,
                            GroupId = 12L,
                            IsLeader = true,
                            JoinedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6498),
                            StudentId = 7L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GroupRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudentId");

                    b.ToTable("GroupRequests");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6561),
                            GroupId = 1L,
                            Status = "PENDING",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6563),
                            GroupId = 2L,
                            Status = "APPROVED",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6565),
                            GroupId = 3L,
                            Status = "REJECTED",
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6566),
                            GroupId = 4L,
                            Status = "PENDING",
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6568),
                            GroupId = 5L,
                            Status = "APPROVED",
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6570),
                            GroupId = 6L,
                            Status = "PENDING",
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6571),
                            GroupId = 7L,
                            Status = "APPROVED",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6573),
                            GroupId = 8L,
                            Status = "REJECTED",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6574),
                            GroupId = 9L,
                            Status = "PENDING",
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6576),
                            GroupId = 10L,
                            Status = "APPROVED",
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6577),
                            GroupId = 11L,
                            Status = "PENDING",
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6579),
                            GroupId = 12L,
                            Status = "REJECTED",
                            StudentId = 7L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.LecturerCourses", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("AssignedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<long>("LecturerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("LecturerId", "CourseId")
                        .IsUnique();

                    b.ToTable("LecturerCourses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9957),
                            CourseId = 1L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 2L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9959),
                            CourseId = 1L,
                            LecturerId = 5L
                        },
                        new
                        {
                            Id = 3L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9960),
                            CourseId = 1L,
                            LecturerId = 6L
                        },
                        new
                        {
                            Id = 4L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9962),
                            CourseId = 2L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9964),
                            CourseId = 2L,
                            LecturerId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9965),
                            CourseId = 2L,
                            LecturerId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9967),
                            CourseId = 3L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 8L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9968),
                            CourseId = 3L,
                            LecturerId = 5L
                        },
                        new
                        {
                            Id = 9L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9970),
                            CourseId = 3L,
                            LecturerId = 6L
                        },
                        new
                        {
                            Id = 10L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9971),
                            CourseId = 4L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 11L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9973),
                            CourseId = 4L,
                            LecturerId = 5L
                        },
                        new
                        {
                            Id = 12L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9974),
                            CourseId = 4L,
                            LecturerId = 6L
                        },
                        new
                        {
                            Id = 13L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9976),
                            CourseId = 5L,
                            LecturerId = 14L
                        },
                        new
                        {
                            Id = 14L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9977),
                            CourseId = 6L,
                            LecturerId = 14L
                        },
                        new
                        {
                            Id = 15L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9979),
                            CourseId = 7L,
                            LecturerId = 15L
                        },
                        new
                        {
                            Id = 16L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9980),
                            CourseId = 8L,
                            LecturerId = 14L
                        },
                        new
                        {
                            Id = 17L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9982),
                            CourseId = 9L,
                            LecturerId = 6L
                        },
                        new
                        {
                            Id = 18L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9983),
                            CourseId = 10L,
                            LecturerId = 5L
                        },
                        new
                        {
                            Id = 19L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9984),
                            CourseId = 11L,
                            LecturerId = 4L
                        },
                        new
                        {
                            Id = 20L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9986),
                            CourseId = 12L,
                            LecturerId = 15L
                        },
                        new
                        {
                            Id = 21L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9987),
                            CourseId = 1L,
                            LecturerId = 2L
                        },
                        new
                        {
                            Id = 22L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9989),
                            CourseId = 2L,
                            LecturerId = 2L
                        },
                        new
                        {
                            Id = 23L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9990),
                            CourseId = 3L,
                            LecturerId = 2L
                        },
                        new
                        {
                            Id = 24L,
                            AssignedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9992),
                            CourseId = 4L,
                            LecturerId = 2L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Logs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Action = "LOGIN",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9481),
                            Details = "Admin đăng nhập hệ thống.",
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Action = "SUBMISSION",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9483),
                            Details = "Sinh viên nộp bài cho đồ án 1.",
                            UserId = 7L
                        },
                        new
                        {
                            Id = 3L,
                            Action = "JOIN_GROUP",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9485),
                            Details = "Sinh viên tham gia Nhóm 1.",
                            UserId = 8L
                        },
                        new
                        {
                            Id = 4L,
                            Action = "SEND_MESSAGE",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9486),
                            Details = "Gửi tin nhắn trong Nhóm 2.",
                            UserId = 9L
                        },
                        new
                        {
                            Id = 5L,
                            Action = "SUBMISSION",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9488),
                            Details = "Sinh viên nộp bài cho đồ án 3.",
                            UserId = 10L
                        },
                        new
                        {
                            Id = 6L,
                            Action = "CREATE_TASK",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9489),
                            Details = "Tạo nhiệm vụ mới trong đồ án 4.",
                            UserId = 11L
                        },
                        new
                        {
                            Id = 7L,
                            Action = "JOIN_GROUP",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9491),
                            Details = "Sinh viên tham gia Nhóm 5.",
                            UserId = 12L
                        },
                        new
                        {
                            Id = 8L,
                            Action = "SEND_MESSAGE",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9492),
                            Details = "Gửi tin nhắn trong Nhóm 6.",
                            UserId = 13L
                        },
                        new
                        {
                            Id = 9L,
                            Action = "GRADE",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9494),
                            Details = "Chấm điểm cho Nhóm 1.",
                            UserId = 4L
                        },
                        new
                        {
                            Id = 10L,
                            Action = "GRADE",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9495),
                            Details = "Chấm điểm cho Nhóm 2.",
                            UserId = 5L
                        },
                        new
                        {
                            Id = 11L,
                            Action = "CREATE_PROJECT",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9497),
                            Details = "Tạo đồ án mới.",
                            UserId = 6L
                        },
                        new
                        {
                            Id = 12L,
                            Action = "UPDATE_PROJECT",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9498),
                            Details = "Cập nhật đồ án 4.",
                            UserId = 14L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Meeting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("GroupId");

                    b.ToTable("Meetings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7947),
                            CreatedBy = 4L,
                            EndTime = new DateTime(2025, 2, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 1L,
                            Location = "Phòng B101",
                            StartTime = new DateTime(2025, 2, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 1"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7951),
                            CreatedBy = 5L,
                            EndTime = new DateTime(2025, 2, 17, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 2L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 2, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 2"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7957),
                            CreatedBy = 6L,
                            EndTime = new DateTime(2025, 2, 24, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 3L,
                            Location = "Phòng B102",
                            StartTime = new DateTime(2025, 2, 24, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 3"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7960),
                            CreatedBy = 14L,
                            EndTime = new DateTime(2025, 3, 3, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 4L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 3, 3, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 4"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7962),
                            CreatedBy = 15L,
                            EndTime = new DateTime(2025, 3, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 5L,
                            Location = "Phòng B103",
                            StartTime = new DateTime(2025, 3, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 5"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7965),
                            CreatedBy = 4L,
                            EndTime = new DateTime(2025, 3, 17, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 6L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 3, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 6"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7968),
                            CreatedBy = 5L,
                            EndTime = new DateTime(2025, 3, 24, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 7L,
                            Location = "Phòng B104",
                            StartTime = new DateTime(2025, 3, 24, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 7"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7971),
                            CreatedBy = 6L,
                            EndTime = new DateTime(2025, 3, 31, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 8L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 3, 31, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 8"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7973),
                            CreatedBy = 14L,
                            EndTime = new DateTime(2025, 4, 7, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 9L,
                            Location = "Phòng B105",
                            StartTime = new DateTime(2025, 4, 7, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 9"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7976),
                            CreatedBy = 15L,
                            EndTime = new DateTime(2025, 4, 14, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 10L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 4, 14, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 10"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(7978),
                            CreatedBy = 4L,
                            EndTime = new DateTime(2025, 4, 21, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 11L,
                            Location = "Phòng B106",
                            StartTime = new DateTime(2025, 4, 21, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 11"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8025),
                            CreatedBy = 5L,
                            EndTime = new DateTime(2025, 4, 28, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupId = 12L,
                            Location = "Online",
                            StartTime = new DateTime(2025, 4, 28, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Họp nhóm tuần 12"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.MeetingRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("MeetingId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MeetingId");

                    b.ToTable("MeetingRecords");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8079),
                            FilePath = "records/meeting1.mp3",
                            MeetingId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8080),
                            FilePath = "records/meeting2.mp4",
                            MeetingId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8082),
                            FilePath = "records/meeting3.mp3",
                            MeetingId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8083),
                            FilePath = "records/meeting4.mp4",
                            MeetingId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8085),
                            FilePath = "records/meeting5.mp3",
                            MeetingId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8086),
                            FilePath = "records/meeting6.mp4",
                            MeetingId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8087),
                            FilePath = "records/meeting7.mp3",
                            MeetingId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8089),
                            FilePath = "records/meeting8.mp4",
                            MeetingId = 8L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8090),
                            FilePath = "records/meeting9.mp3",
                            MeetingId = 9L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8092),
                            FilePath = "records/meeting10.mp4",
                            MeetingId = 10L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8093),
                            FilePath = "records/meeting11.mp3",
                            MeetingId = 11L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8095),
                            FilePath = "records/meeting12.mp4",
                            MeetingId = 12L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("RecipientType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Hạn nộp là 28/02/2025.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8144),
                            RecipientType = "user",
                            Status = "SENT",
                            Title = "Hạn nộp đồ án",
                            Type = "WEB",
                            UserId = 4L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Bài nộp đã được phản hồi.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8147),
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Phản hồi bài nộp",
                            Type = "EMAIL",
                            UserId = 4L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Bạn được thêm vào Nhóm 1.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8150),
                            GroupId = 1L,
                            RecipientType = "user",
                            Status = "SENT",
                            Title = "Nhóm mới",
                            Type = "WEB",
                            UserId = 8L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Họp nhóm vào 14:00, 03/03/2025.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8152),
                            GroupId = 3L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Họp nhóm",
                            Type = "WEB",
                            UserId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            Content = "Đồ án Nhóm 4 cần chỉnh sửa.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8154),
                            GroupId = 4L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Phản hồi đồ án",
                            Type = "WEB",
                            UserId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Bạn được giao nhiệm vụ mới.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8156),
                            GroupId = 5L,
                            RecipientType = "user",
                            Status = "SENT",
                            Title = "Nhiệm vụ mới",
                            Type = "WEB",
                            UserId = 12L
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Điểm của Nhóm 6 đã được cập nhật.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8159),
                            GroupId = 6L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Cập nhật điểm",
                            Type = "WEB",
                            UserId = 13L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "Hạn chót nhiệm vụ là 10/03/2025.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8161),
                            GroupId = 7L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Hạn chót nhiệm vụ",
                            Type = "WEB",
                            UserId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Lịch bảo vệ: 08/03/2025, A108.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8164),
                            GroupId = 8L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Lịch bảo vệ",
                            Type = "WEB",
                            UserId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "Nhóm 9 nhận phản hồi mới.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8166),
                            GroupId = 9L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Phản hồi mới",
                            Type = "WEB",
                            UserId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Đồ án Nhóm 10 đã được phê duyệt.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8168),
                            GroupId = 10L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Cập nhật đồ án",
                            Type = "WEB",
                            UserId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            Content = "Nhiệm vụ của Nhóm 11 đã hoàn thành.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8170),
                            GroupId = 11L,
                            RecipientType = "group",
                            Status = "SENT",
                            Title = "Nhiệm vụ hoàn thành",
                            Type = "WEB",
                            UserId = 11L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.PeerReview", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("RevieweeId")
                        .HasColumnType("bigint");

                    b.Property<long>("ReviewerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("RevieweeId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("PeerReviews");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Comment = "Làm việc tốt.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8221),
                            GroupId = 1L,
                            RevieweeId = 8L,
                            ReviewerId = 7L,
                            Score = 8
                        },
                        new
                        {
                            Id = 2L,
                            Comment = "Cần cải thiện giao tiếp.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8224),
                            GroupId = 1L,
                            RevieweeId = 7L,
                            ReviewerId = 8L,
                            Score = 7
                        },
                        new
                        {
                            Id = 3L,
                            Comment = "Hỗ trợ nhóm tốt.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8226),
                            GroupId = 3L,
                            RevieweeId = 11L,
                            ReviewerId = 10L,
                            Score = 9
                        },
                        new
                        {
                            Id = 4L,
                            Comment = "Cần chủ động hơn.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8228),
                            GroupId = 3L,
                            RevieweeId = 10L,
                            ReviewerId = 11L,
                            Score = 6
                        },
                        new
                        {
                            Id = 5L,
                            Comment = "Đóng góp tích cực.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8229),
                            GroupId = 4L,
                            RevieweeId = 13L,
                            ReviewerId = 12L,
                            Score = 8
                        },
                        new
                        {
                            Id = 6L,
                            Comment = "Cần cải thiện kỹ năng.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8231),
                            GroupId = 4L,
                            RevieweeId = 12L,
                            ReviewerId = 13L,
                            Score = 7
                        },
                        new
                        {
                            Id = 7L,
                            Comment = "Làm việc hiệu quả.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8233),
                            GroupId = 5L,
                            RevieweeId = 8L,
                            ReviewerId = 7L,
                            Score = 9
                        },
                        new
                        {
                            Id = 8L,
                            Comment = "Cần tập trung hơn.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8235),
                            GroupId = 6L,
                            RevieweeId = 9L,
                            ReviewerId = 8L,
                            Score = 6
                        },
                        new
                        {
                            Id = 9L,
                            Comment = "Hợp tác tốt.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8236),
                            GroupId = 7L,
                            RevieweeId = 10L,
                            ReviewerId = 9L,
                            Score = 8
                        },
                        new
                        {
                            Id = 10L,
                            Comment = "Cần cải thiện thái độ.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8238),
                            GroupId = 8L,
                            RevieweeId = 11L,
                            ReviewerId = 10L,
                            Score = 7
                        },
                        new
                        {
                            Id = 11L,
                            Comment = "Đóng góp lớn.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8240),
                            GroupId = 9L,
                            RevieweeId = 12L,
                            ReviewerId = 11L,
                            Score = 9
                        },
                        new
                        {
                            Id = 12L,
                            Comment = "Làm việc ổn.",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8242),
                            GroupId = 10L,
                            RevieweeId = 13L,
                            ReviewerId = 12L,
                            Score = 8
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApprovalReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("ProjectCode")
                        .IsUnique();

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ApprovalStatus = "APPROVED",
                            CourseId = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5997),
                            Description = "Phát triển ứng dụng AI hỗ trợ chẩn đoán bệnh.",
                            GroupId = 1L,
                            ProjectCode = "AI_YTE_2025_01",
                            Status = "APPROVED",
                            Title = "Ứng dụng AI trong y tế",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5998)
                        },
                        new
                        {
                            Id = 2L,
                            ApprovalStatus = "APPROVED",
                            CourseId = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6003),
                            Description = "Xây dựng hệ thống quản lý đồ án sinh viên.",
                            GroupId = 2L,
                            ProjectCode = "QLDA_2025_01",
                            Status = "APPROVED",
                            Title = "Hệ thống quản lý đồ án",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6004)
                        },
                        new
                        {
                            Id = 3L,
                            ApprovalStatus = "APPROVED",
                            CourseId = 2L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6008),
                            Description = "Phát triển website bán hàng trực tuyến.",
                            GroupId = 3L,
                            ProjectCode = "TMĐT_2025_01",
                            Status = "PENDING",
                            Title = "Ứng dụng thương mại điện tử",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6008)
                        },
                        new
                        {
                            Id = 4L,
                            ApprovalStatus = "APPROVED",
                            CourseId = 3L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6013),
                            Description = "Xây dựng hệ thống phân tích dữ liệu thời gian thực.",
                            GroupId = 4L,
                            ProjectCode = "PTDL_2025_01",
                            Status = "PENDING",
                            Title = "Phân tích dữ liệu thời gian thực",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6013)
                        },
                        new
                        {
                            Id = 5L,
                            ApprovalStatus = "REJECTED",
                            CourseId = 4L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6017),
                            Description = "Phát triển app quản lý học tập cho sinh viên.",
                            GroupId = 5L,
                            ProjectCode = "QLHT_2025_01",
                            Status = "PENDING",
                            Title = "Ứng dụng quản lý học tập",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6018)
                        },
                        new
                        {
                            Id = 6L,
                            ApprovalStatus = "PENDING",
                            CourseId = 5L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6022),
                            Description = "Xây dựng giải pháp bảo mật cho thiết bị IoT.",
                            GroupId = 6L,
                            ProjectCode = "BM_IOT_2025_01",
                            Status = "NOT_SUBMITTED",
                            Title = "Hệ thống bảo mật IoT",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6022)
                        },
                        new
                        {
                            Id = 7L,
                            ApprovalStatus = "PENDING",
                            CourseId = 6L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6119),
                            Description = "Phân tích hành vi người dùng trên mạng xã hội.",
                            GroupId = 7L,
                            ProjectCode = "PTMXH_2025_01",
                            Status = "NOT_SUBMITTED",
                            Title = "Phân tích dữ liệu mạng xã hội",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6120)
                        },
                        new
                        {
                            Id = 8L,
                            ApprovalStatus = "PENDING",
                            CourseId = 7L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6124),
                            Description = "Phát triển app học ngoại ngữ với AI.",
                            GroupId = 9L,
                            ProjectCode = "HNN_2025_01",
                            Status = "APPROVED",
                            Title = "Ứng dụng học ngoại ngữ",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6124)
                        },
                        new
                        {
                            Id = 9L,
                            ApprovalStatus = "PENDING",
                            CourseId = 8L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6128),
                            Description = "Xây dựng hệ thống quản lý kho hàng tự động.",
                            GroupId = 8L,
                            ProjectCode = "QLK_2025_01",
                            Status = "APPROVED",
                            Title = "Hệ thống quản lý kho",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6129)
                        },
                        new
                        {
                            Id = 10L,
                            ApprovalStatus = "PENDING",
                            CourseId = 9L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6133),
                            Description = "Phát triển app đặt lịch khám bệnh trực tuyến.",
                            GroupId = 10L,
                            ProjectCode = "DLKB_2025_01",
                            Status = "APPROVED",
                            Title = "Ứng dụng đặt lịch khám bệnh",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6133)
                        },
                        new
                        {
                            Id = 11L,
                            ApprovalStatus = "PENDING",
                            CourseId = 10L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6137),
                            Description = "Xây dựng hệ thống quản lý nhân sự cho doanh nghiệp.",
                            GroupId = 12L,
                            ProjectCode = "QLNS_2025_01",
                            Status = "APPROVED",
                            Title = "Hệ thống quản lý nhân sự",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6138)
                        },
                        new
                        {
                            Id = 12L,
                            ApprovalStatus = "APPROVED",
                            CourseId = 11L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6142),
                            Description = "Phát triển app hỗ trợ học tập nhóm.",
                            GroupId = 11L,
                            ProjectCode = "HTN_2025_01",
                            Status = "PENDING",
                            Title = "Ứng dụng học tập nhóm",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6143)
                        },
                        new
                        {
                            Id = 13L,
                            ApprovalStatus = "APPROVED",
                            CourseId = 12L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6147),
                            Description = "Xây dựng hệ thống phân tích tài chính cá nhân.",
                            GroupId = 13L,
                            ProjectCode = "PTTC_2025_01",
                            Status = "PENDING",
                            Title = "Hệ thống phân tích tài chính",
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6148)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.ProjectVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectVersions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6217),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 1L,
                            Title = "Ứng dụng AI trong y tế",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 6, 6, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6219),
                            Description = "Cập nhật mô tả.",
                            ProjectId = 1L,
                            Title = "Ứng dụng AI trong y tế (Cập nhật)",
                            VersionNumber = 2
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6231),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 2L,
                            Title = "Hệ thống quản lý đồ án",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6232),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 3L,
                            Title = "Ứng dụng thương mại điện tử",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6234),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 4L,
                            Title = "Phân tích dữ liệu thời gian thực",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6235),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 5L,
                            Title = "Ứng dụng quản lý học tập",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6237),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 6L,
                            Title = "Hệ thống bảo mật IoT",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6239),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 7L,
                            Title = "Phân tích dữ liệu mạng xã hội",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6240),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 8L,
                            Title = "Ứng dụng học ngoại ngữ",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6242),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 9L,
                            Title = "Hệ thống quản lý kho",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6244),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 10L,
                            Title = "Ứng dụng đặt lịch khám bệnh",
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6246),
                            Description = "Phiên bản ban đầu.",
                            ProjectId = 11L,
                            Title = "Hệ thống quản lý nhân sự",
                            VersionNumber = 1
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ProjectId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Ứng dụng AI của bạn giải quyết vấn đề gì?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8361),
                            CreatedBy = 4L,
                            ProjectId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Hệ thống quản lý đồ án có những tính năng gì?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8363),
                            CreatedBy = 5L,
                            ProjectId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Website thương mại điện tử có tích hợp thanh toán không?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8365),
                            CreatedBy = 6L,
                            ProjectId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Phân tích dữ liệu thời gian thực dùng công nghệ gì?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8393),
                            CreatedBy = 14L,
                            ProjectId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Content = "App quản lý học tập có hỗ trợ offline không?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8395),
                            CreatedBy = 15L,
                            ProjectId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Hệ thống bảo mật IoT đã kiểm tra lỗ hổng chưa?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8396),
                            CreatedBy = 4L,
                            ProjectId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Phân tích dữ liệu mạng xã hội có chính xác không?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8398),
                            CreatedBy = 5L,
                            ProjectId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "App học ngoại ngữ hỗ trợ bao nhiêu ngôn ngữ?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8399),
                            CreatedBy = 6L,
                            ProjectId = 8L
                        },
                        new
                        {
                            Id = 9L,
                            Content = "Hệ thống quản lý kho có tự động hóa không?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8401),
                            CreatedBy = 14L,
                            ProjectId = 9L
                        },
                        new
                        {
                            Id = 10L,
                            Content = "App đặt lịch khám bệnh có thông báo nhắc nhở không?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8402),
                            CreatedBy = 15L,
                            ProjectId = 10L
                        },
                        new
                        {
                            Id = 11L,
                            Content = "Hệ thống quản lý nhân sự có báo cáo không?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8404),
                            CreatedBy = 4L,
                            ProjectId = 11L
                        },
                        new
                        {
                            Id = 12L,
                            Content = "App học tập nhóm có tính năng chat không?",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8405),
                            CreatedBy = 5L,
                            ProjectId = 12L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Resource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8292),
                            CreatedBy = 4L,
                            FilePath = "resources/ai_doc.pdf",
                            ProjectId = 1L,
                            Title = "Tài liệu AI",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8294),
                            CreatedBy = 5L,
                            FilePath = "resources/report_template.docx",
                            GroupId = 2L,
                            Title = "Mẫu báo cáo",
                            Type = "SAMPLE"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8296),
                            CreatedBy = 6L,
                            FilePath = "resources/ecommerce.pdf",
                            ProjectId = 3L,
                            Title = "Tài liệu thương mại điện tử",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8298),
                            CreatedBy = 14L,
                            FilePath = "resources/data_analysis.pdf",
                            ProjectId = 4L,
                            Title = "Hướng dẫn phân tích dữ liệu",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8300),
                            CreatedBy = 15L,
                            FilePath = "resources/study_management.pdf",
                            ProjectId = 5L,
                            Title = "Tài liệu quản lý học tập",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8302),
                            CreatedBy = 4L,
                            FilePath = "resources/iot_security.pdf",
                            ProjectId = 6L,
                            Title = "Tài liệu bảo mật IoT",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8304),
                            CreatedBy = 5L,
                            FilePath = "resources/social_media_analysis.pdf",
                            ProjectId = 7L,
                            Title = "Phân tích mạng xã hội",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8306),
                            CreatedBy = 6L,
                            FilePath = "resources/language_learning.pdf",
                            ProjectId = 8L,
                            Title = "Tài liệu học ngoại ngữ",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8307),
                            CreatedBy = 14L,
                            FilePath = "resources/warehouse_management.pdf",
                            ProjectId = 9L,
                            Title = "Hướng dẫn quản lý kho",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8309),
                            CreatedBy = 15L,
                            FilePath = "resources/booking_system.pdf",
                            ProjectId = 10L,
                            Title = "Tài liệu đặt lịch khám bệnh",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8311),
                            CreatedBy = 4L,
                            FilePath = "resources/hr_management.pdf",
                            ProjectId = 11L,
                            Title = "Tài liệu quản lý nhân sự",
                            Type = "REFERENCE"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8313),
                            CreatedBy = 5L,
                            FilePath = "resources/group_study.pdf",
                            ProjectId = 12L,
                            Title = "Hướng dẫn học tập nhóm",
                            Type = "REFERENCE"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "Quản trị viên",
                            Name = "ROLE_ADMIN"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "Giảng viên hướng dẫn",
                            Name = "ROLE_LECTURER_GUIDE"
                        },
                        new
                        {
                            Id = 3L,
                            Description = "Sinh viên",
                            Name = "ROLE_STUDENT"
                        },
                        new
                        {
                            Id = 4L,
                            Description = "Trưởng bộ môn",
                            Name = "ROLE_HEAD"
                        },
                        new
                        {
                            Id = 5L,
                            Description = "Giảng viên phản biện",
                            Name = "ROLE_LECTURER_REVIEW"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.RolePermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("EditGrading")
                        .HasColumnType("bit");

                    b.Property<bool>("EditProjects")
                        .HasColumnType("bit");

                    b.Property<bool>("EditUsers")
                        .HasColumnType("bit");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ViewGrading")
                        .HasColumnType("bit");

                    b.Property<bool>("ViewProjects")
                        .HasColumnType("bit");

                    b.Property<bool>("ViewUsers")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            EditGrading = true,
                            EditProjects = true,
                            EditUsers = true,
                            RoleId = 1L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9866),
                            ViewGrading = true,
                            ViewProjects = true,
                            ViewUsers = true
                        },
                        new
                        {
                            Id = 2L,
                            EditGrading = false,
                            EditProjects = false,
                            EditUsers = false,
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9869),
                            ViewGrading = false,
                            ViewProjects = true,
                            ViewUsers = false
                        },
                        new
                        {
                            Id = 3L,
                            EditGrading = false,
                            EditProjects = false,
                            EditUsers = false,
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9871),
                            ViewGrading = false,
                            ViewProjects = true,
                            ViewUsers = false
                        },
                        new
                        {
                            Id = 4L,
                            EditGrading = false,
                            EditProjects = false,
                            EditUsers = false,
                            RoleId = 4L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9873),
                            ViewGrading = false,
                            ViewProjects = true,
                            ViewUsers = false
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Semester", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Semesters");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9646),
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HK2-2025",
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9649),
                            EndDate = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HK1-2025",
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9651),
                            EndDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HK3-2025",
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SkillAssessment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("Skill")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("SkillAssessments");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8806),
                            Score = 8,
                            Skill = "Lập trình Python",
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8808),
                            Score = 7,
                            Skill = "Thiết kế giao diện",
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8810),
                            Score = 9,
                            Skill = "Phân tích dữ liệu",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8811),
                            Score = 6,
                            Skill = "Lập trình Java",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8813),
                            Score = 8,
                            Skill = "Quản lý dự án",
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8814),
                            Score = 7,
                            Skill = "Kiểm thử phần mềm",
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8816),
                            Score = 9,
                            Skill = "Lập trình JavaScript",
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8817),
                            Score = 6,
                            Skill = "Giao tiếp nhóm",
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8819),
                            Score = 8,
                            Skill = "Thiết kế cơ sở dữ liệu",
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8820),
                            Score = 7,
                            Skill = "Tích hợp API",
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8822),
                            Score = 8,
                            Skill = "Lập trình C#",
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8823),
                            Score = 9,
                            Skill = "Phân tích yêu cầu",
                            StudentId = 11L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.StudentCourse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EnrolledAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId", "CourseId")
                        .IsUnique();

                    b.ToTable("StudentCourses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CourseId = 1L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9692),
                            Status = "ENROLLED",
                            StudentId = 7L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9692)
                        },
                        new
                        {
                            Id = 2L,
                            CourseId = 1L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9695),
                            Status = "ENROLLED",
                            StudentId = 8L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9695)
                        },
                        new
                        {
                            Id = 3L,
                            CourseId = 1L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9697),
                            Status = "ENROLLED",
                            StudentId = 9L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9697)
                        },
                        new
                        {
                            Id = 4L,
                            CourseId = 1L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9699),
                            Status = "ENROLLED",
                            StudentId = 10L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9700)
                        },
                        new
                        {
                            Id = 5L,
                            CourseId = 1L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9702),
                            Status = "ENROLLED",
                            StudentId = 11L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9702)
                        },
                        new
                        {
                            Id = 6L,
                            CourseId = 2L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9704),
                            Status = "ENROLLED",
                            StudentId = 12L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9704)
                        },
                        new
                        {
                            Id = 7L,
                            CourseId = 2L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9707),
                            Status = "ENROLLED",
                            StudentId = 13L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9707)
                        },
                        new
                        {
                            Id = 8L,
                            CourseId = 3L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9709),
                            Status = "ENROLLED",
                            StudentId = 7L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9710)
                        },
                        new
                        {
                            Id = 9L,
                            CourseId = 3L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9712),
                            Status = "ENROLLED",
                            StudentId = 8L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9712)
                        },
                        new
                        {
                            Id = 10L,
                            CourseId = 4L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9714),
                            Status = "ENROLLED",
                            StudentId = 9L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9715)
                        },
                        new
                        {
                            Id = 11L,
                            CourseId = 4L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9716),
                            Status = "ENROLLED",
                            StudentId = 10L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9717)
                        },
                        new
                        {
                            Id = 12L,
                            CourseId = 5L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9719),
                            Status = "ENROLLED",
                            StudentId = 11L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9719)
                        },
                        new
                        {
                            Id = 13L,
                            CourseId = 5L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9721),
                            Status = "ENROLLED",
                            StudentId = 12L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9722)
                        },
                        new
                        {
                            Id = 14L,
                            CourseId = 6L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9723),
                            Status = "ENROLLED",
                            StudentId = 13L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9724)
                        },
                        new
                        {
                            Id = 15L,
                            CourseId = 6L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9726),
                            Status = "ENROLLED",
                            StudentId = 7L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9726)
                        },
                        new
                        {
                            Id = 16L,
                            CourseId = 7L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9728),
                            Status = "COMPLETED",
                            StudentId = 8L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9729)
                        },
                        new
                        {
                            Id = 17L,
                            CourseId = 7L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9730),
                            Status = "COMPLETED",
                            StudentId = 9L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9731)
                        },
                        new
                        {
                            Id = 18L,
                            CourseId = 8L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9733),
                            Status = "COMPLETED",
                            StudentId = 10L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9733)
                        },
                        new
                        {
                            Id = 19L,
                            CourseId = 8L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9735),
                            Status = "COMPLETED",
                            StudentId = 11L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9735)
                        },
                        new
                        {
                            Id = 20L,
                            CourseId = 9L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9737),
                            Status = "COMPLETED",
                            StudentId = 12L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9738)
                        },
                        new
                        {
                            Id = 21L,
                            CourseId = 9L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9740),
                            Status = "COMPLETED",
                            StudentId = 13L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9740)
                        },
                        new
                        {
                            Id = 22L,
                            CourseId = 10L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9742),
                            Status = "COMPLETED",
                            StudentId = 7L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9742)
                        },
                        new
                        {
                            Id = 23L,
                            CourseId = 10L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9744),
                            Status = "COMPLETED",
                            StudentId = 8L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9745)
                        },
                        new
                        {
                            Id = 24L,
                            CourseId = 11L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9747),
                            Status = "ENROLLED",
                            StudentId = 9L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9747)
                        },
                        new
                        {
                            Id = 25L,
                            CourseId = 11L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9749),
                            Status = "ENROLLED",
                            StudentId = 10L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9749)
                        },
                        new
                        {
                            Id = 26L,
                            CourseId = 12L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9751),
                            Status = "ENROLLED",
                            StudentId = 11L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9752)
                        },
                        new
                        {
                            Id = 27L,
                            CourseId = 12L,
                            EnrolledAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9753),
                            Status = "ENROLLED",
                            StudentId = 12L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9754)
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Submission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("TaskId")
                        .HasColumnType("bigint");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TaskId");

                    b.ToTable("Submissions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FilePath = "submissions/dt001.pdf",
                            GroupId = 1L,
                            ProjectId = 1L,
                            Status = "SUBMITTED",
                            StudentId = 7L,
                            SubmittedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6816),
                            TaskId = 1L,
                            Version = 1
                        },
                        new
                        {
                            Id = 2L,
                            FilePath = "submissions/dt002.pdf",
                            GroupId = 2L,
                            ProjectId = 2L,
                            Status = "VALIDATED",
                            StudentId = 8L,
                            SubmittedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6819),
                            TaskId = 2L,
                            Version = 1
                        },
                        new
                        {
                            Id = 3L,
                            FilePath = "submissions/dt003.pdf",
                            GroupId = 3L,
                            ProjectId = 3L,
                            Status = "SUBMITTED",
                            StudentId = 10L,
                            SubmittedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6822),
                            TaskId = 3L,
                            Version = 1
                        },
                        new
                        {
                            Id = 4L,
                            FilePath = "submissions/dt004.pdf",
                            GroupId = 4L,
                            ProjectId = 4L,
                            Status = "REJECTED",
                            StudentId = 12L,
                            SubmittedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6826),
                            TaskId = 4L,
                            Version = 1
                        },
                        new
                        {
                            Id = 5L,
                            FilePath = "submissions/dt005.pdf",
                            GroupId = 5L,
                            ProjectId = 5L,
                            Status = "SUBMITTED",
                            StudentId = 7L,
                            SubmittedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6828),
                            TaskId = 5L,
                            Version = 1
                        },
                        new
                        {
                            Id = 6L,
                            FilePath = "submissions/dt006.pdf",
                            GroupId = 6L,
                            ProjectId = 6L,
                            Status = "VALIDATED",
                            StudentId = 8L,
                            SubmittedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6831),
                            TaskId = 6L,
                            Version = 1
                        },
                        new
                        {
                            Id = 7L,
                            FilePath = "submissions/dt007.pdf",
                            GroupId = 7L,
                            ProjectId = 7L,
                            Status = "SUBMITTED",
                            StudentId = 9L,
                            SubmittedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6834),
                            TaskId = 7L,
                            Version = 1
                        },
                        new
                        {
                            Id = 8L,
                            FilePath = "submissions/dt008.pdf",
                            GroupId = 8L,
                            ProjectId = 8L,
                            Status = "REJECTED",
                            StudentId = 10L,
                            SubmittedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6837),
                            TaskId = 8L,
                            Version = 1
                        },
                        new
                        {
                            Id = 9L,
                            FilePath = "submissions/dt009.pdf",
                            GroupId = 9L,
                            ProjectId = 9L,
                            Status = "SUBMITTED",
                            StudentId = 11L,
                            SubmittedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6840),
                            TaskId = 9L,
                            Version = 1
                        },
                        new
                        {
                            Id = 10L,
                            FilePath = "submissions/dt010.pdf",
                            GroupId = 10L,
                            ProjectId = 10L,
                            Status = "VALIDATED",
                            StudentId = 12L,
                            SubmittedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6843),
                            TaskId = 10L,
                            Version = 1
                        },
                        new
                        {
                            Id = 11L,
                            FilePath = "submissions/dt011.pdf",
                            GroupId = 11L,
                            ProjectId = 11L,
                            Status = "SUBMITTED",
                            StudentId = 13L,
                            SubmittedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6846),
                            TaskId = 11L,
                            Version = 1
                        },
                        new
                        {
                            Id = 12L,
                            FilePath = "submissions/dt012.pdf",
                            GroupId = 12L,
                            ProjectId = 12L,
                            Status = "REJECTED",
                            StudentId = 7L,
                            SubmittedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6849),
                            TaskId = 12L,
                            Version = 1
                        },
                        new
                        {
                            Id = 13L,
                            FilePath = "submissions/dt013.pdf",
                            GroupId = 1L,
                            ProjectId = 1L,
                            Status = "SUBMITTED",
                            StudentId = 8L,
                            SubmittedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6851),
                            TaskId = 1L,
                            Version = 1
                        },
                        new
                        {
                            Id = 14L,
                            FilePath = "submissions/dt014.pdf",
                            GroupId = 1L,
                            ProjectId = 1L,
                            Status = "SUBMITTED",
                            StudentId = 7L,
                            SubmittedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6854),
                            TaskId = 15L,
                            Version = 1
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SubmissionVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("SubmissionId")
                        .HasColumnType("bigint");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId");

                    b.ToTable("SubmissionVersions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6907),
                            FilePath = "submissions/dt001_v1.pdf",
                            SubmissionId = 1L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 6, 6, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6909),
                            FilePath = "submissions/dt001_v2.pdf",
                            SubmissionId = 1L,
                            VersionNumber = 2
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6911),
                            FilePath = "submissions/dt002_v1.pdf",
                            SubmissionId = 2L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6913),
                            FilePath = "submissions/dt003_v1.pdf",
                            SubmissionId = 3L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6914),
                            FilePath = "submissions/dt004_v1.pdf",
                            SubmissionId = 4L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6916),
                            FilePath = "submissions/dt005_v1.pdf",
                            SubmissionId = 5L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6917),
                            FilePath = "submissions/dt006_v1.pdf",
                            SubmissionId = 6L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6963),
                            FilePath = "submissions/dt007_v1.pdf",
                            SubmissionId = 7L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6964),
                            FilePath = "submissions/dt008_v1.pdf",
                            SubmissionId = 8L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6966),
                            FilePath = "submissions/dt009_v1.pdf",
                            SubmissionId = 9L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6967),
                            FilePath = "submissions/dt010_v1.pdf",
                            SubmissionId = 10L,
                            VersionNumber = 1
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6969),
                            FilePath = "submissions/dt011_v1.pdf",
                            SubmissionId = 11L,
                            VersionNumber = 1
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SystemConfig", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("SystemConfigs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9059),
                            Key = "LOGO_URL",
                            Value = "images/hutech_logo.png"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9062),
                            Key = "THEME_COLOR",
                            Value = "#1976d2"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9063),
                            Key = "EMAIL_SERVER",
                            Value = "smtp.hutech.edu.vn"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9064),
                            Key = "MAX_FILE_SIZE",
                            Value = "10485760"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9066),
                            Key = "DEFAULT_LANGUAGE",
                            Value = "vi"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9067),
                            Key = "NOTIFICATION_DURATION",
                            Value = "7"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9069),
                            Key = "SESSION_TIMEOUT",
                            Value = "30"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9070),
                            Key = "BACKUP_FREQUENCY",
                            Value = "daily"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9071),
                            Key = "ALLOWED_FILE_TYPES",
                            Value = "pdf,docx,zip"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9073),
                            Key = "TIMEZONE",
                            Value = "Asia/Ho_Chi_Minh"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9074),
                            Key = "MAX_LOGIN_ATTEMPTS",
                            Value = "5"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9076),
                            Key = "CHAT_ENABLED",
                            Value = "true"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SystemMetric", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MetricType")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("MetricType");

                    b.ToTable("SystemMetrics");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9123),
                            MetricType = "CPU",
                            Value = 45.5f
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9125),
                            MetricType = "RAM",
                            Value = 60f
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9126),
                            MetricType = "DISK",
                            Value = 75f
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9127),
                            MetricType = "NETWORK",
                            Value = 120.5f
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 6, 7, 5, 11, 14, 130, DateTimeKind.Utc).AddTicks(9129),
                            MetricType = "CPU",
                            Value = 50f
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 6, 7, 5, 11, 14, 130, DateTimeKind.Utc).AddTicks(9131),
                            MetricType = "RAM",
                            Value = 65f
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 6, 7, 5, 11, 14, 130, DateTimeKind.Utc).AddTicks(9132),
                            MetricType = "DISK",
                            Value = 80f
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 6, 7, 5, 11, 14, 130, DateTimeKind.Utc).AddTicks(9134),
                            MetricType = "NETWORK",
                            Value = 130f
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 6, 7, 4, 11, 14, 130, DateTimeKind.Utc).AddTicks(9136),
                            MetricType = "CPU",
                            Value = 55f
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 6, 7, 4, 11, 14, 130, DateTimeKind.Utc).AddTicks(9137),
                            MetricType = "RAM",
                            Value = 70f
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 6, 7, 4, 11, 14, 130, DateTimeKind.Utc).AddTicks(9139),
                            MetricType = "DISK",
                            Value = 85f
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 6, 7, 4, 11, 14, 130, DateTimeKind.Utc).AddTicks(9141),
                            MetricType = "NETWORK",
                            Value = 140f
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Task", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6685),
                            Deadline = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phân tích yêu cầu hệ thống AI.",
                            GroupId = 1L,
                            ProjectId = 1L,
                            Status = "TODO",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6689),
                            Deadline = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thiết kế giao diện quản lý đồ án.",
                            GroupId = 2L,
                            ProjectId = 2L,
                            Status = "IN_PROGRESS",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6692),
                            Deadline = new DateTime(2025, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thiết kế và triển khai CSDL.",
                            GroupId = 3L,
                            ProjectId = 3L,
                            Status = "DONE",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6695),
                            Deadline = new DateTime(2025, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tích hợp API phân tích dữ liệu.",
                            GroupId = 4L,
                            ProjectId = 4L,
                            Status = "IN_PROGRESS",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6697),
                            Deadline = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phát triển tính năng quản lý lịch học.",
                            GroupId = 5L,
                            ProjectId = 5L,
                            Status = "TODO",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6700),
                            Deadline = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Kiểm tra lỗ hổng bảo mật IoT.",
                            GroupId = 6L,
                            ProjectId = 6L,
                            Status = "IN_PROGRESS",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6702),
                            Deadline = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thu thập dữ liệu từ mạng xã hội.",
                            GroupId = 7L,
                            ProjectId = 7L,
                            Status = "DONE",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6705),
                            Deadline = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tích hợp AI vào app học ngoại ngữ.",
                            GroupId = 8L,
                            ProjectId = 8L,
                            Status = "IN_PROGRESS",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6707),
                            Deadline = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thiết kế hệ thống quản lý kho.",
                            GroupId = 9L,
                            ProjectId = 9L,
                            Status = "TODO",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6710),
                            Deadline = new DateTime(2025, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phát triển giao diện đặt lịch khám.",
                            GroupId = 10L,
                            ProjectId = 10L,
                            Status = "IN_PROGRESS",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6712),
                            Deadline = new DateTime(2025, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Kiểm tra chức năng quản lý nhân sự.",
                            GroupId = 11L,
                            ProjectId = 11L,
                            Status = "DONE",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6714),
                            Deadline = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tích hợp tính năng chat nhóm.",
                            GroupId = 12L,
                            ProjectId = 12L,
                            Status = "TODO",
                            Title = "Báo cáo tuần 1"
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6717),
                            Deadline = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thiết kế giao diện quản lý đồ án.",
                            GroupId = 1L,
                            ProjectId = 1L,
                            Status = "IN_PROGRESS",
                            Title = "Báo cáo tuần 2"
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6719),
                            Deadline = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thiết kế giao diện quản lý đồ án.",
                            GroupId = 1L,
                            ProjectId = 1L,
                            Status = "IN_PROGRESS",
                            Title = "Báo cáo tuần 3"
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(6722),
                            Deadline = new DateTime(2025, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Báo cáo đồ án.",
                            GroupId = 1L,
                            ProjectId = 1L,
                            Status = "IN_PROGRESS",
                            Title = "Báo cáo cuối kỳ"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.TimeTracking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("StudentId");

                    b.ToTable("TimeTrackings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8882),
                            Duration = 120,
                            EndTime = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8881),
                            ProjectId = 1L,
                            StartTime = new DateTime(2025, 6, 7, 4, 11, 14, 130, DateTimeKind.Utc).AddTicks(8876),
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8886),
                            Duration = 60,
                            EndTime = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8885),
                            ProjectId = 1L,
                            StartTime = new DateTime(2025, 6, 7, 5, 11, 14, 130, DateTimeKind.Utc).AddTicks(8884),
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8892),
                            Duration = 180,
                            EndTime = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8888),
                            ProjectId = 2L,
                            StartTime = new DateTime(2025, 6, 7, 3, 11, 14, 130, DateTimeKind.Utc).AddTicks(8887),
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8895),
                            Duration = 60,
                            EndTime = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8894),
                            ProjectId = 3L,
                            StartTime = new DateTime(2025, 6, 7, 5, 11, 14, 130, DateTimeKind.Utc).AddTicks(8893),
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8900),
                            Duration = 120,
                            EndTime = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8900),
                            ProjectId = 4L,
                            StartTime = new DateTime(2025, 6, 7, 4, 11, 14, 130, DateTimeKind.Utc).AddTicks(8896),
                            StudentId = 11L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8903),
                            Duration = 240,
                            EndTime = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8902),
                            ProjectId = 5L,
                            StartTime = new DateTime(2025, 6, 7, 2, 11, 14, 130, DateTimeKind.Utc).AddTicks(8902),
                            StudentId = 12L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8906),
                            Duration = 60,
                            EndTime = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8905),
                            ProjectId = 6L,
                            StartTime = new DateTime(2025, 6, 7, 5, 11, 14, 130, DateTimeKind.Utc).AddTicks(8905),
                            StudentId = 13L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8989),
                            Duration = 120,
                            EndTime = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8987),
                            ProjectId = 7L,
                            StartTime = new DateTime(2025, 6, 7, 4, 11, 14, 130, DateTimeKind.Utc).AddTicks(8982),
                            StudentId = 7L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8993),
                            Duration = 180,
                            EndTime = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8992),
                            ProjectId = 8L,
                            StartTime = new DateTime(2025, 6, 7, 3, 11, 14, 130, DateTimeKind.Utc).AddTicks(8991),
                            StudentId = 8L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8996),
                            Duration = 60,
                            EndTime = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8995),
                            ProjectId = 9L,
                            StartTime = new DateTime(2025, 6, 7, 5, 11, 14, 130, DateTimeKind.Utc).AddTicks(8994),
                            StudentId = 9L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8999),
                            Duration = 120,
                            EndTime = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(8998),
                            ProjectId = 10L,
                            StartTime = new DateTime(2025, 6, 7, 4, 11, 14, 130, DateTimeKind.Utc).AddTicks(8997),
                            StudentId = 10L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9002),
                            Duration = 180,
                            EndTime = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(9001),
                            ProjectId = 11L,
                            StartTime = new DateTime(2025, 6, 7, 3, 11, 14, 130, DateTimeKind.Utc).AddTicks(9000),
                            StudentId = 11L
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ClassCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FailedLoginAttempts")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GroupId");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5426),
                            Email = "admin@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Quản trị viên",
                            Locked = false,
                            Password = "$2a$11$eHOVdgXoOGbmti4okfvxKOep9REsYRub8niqy/N67iPhWmGdQRpgW",
                            RoleId = 1L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5427),
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2L,
                            AvatarUrl = "/font-end/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5528),
                            DepartmentId = 1L,
                            Email = "AND123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Nguyễn Đình Ánh",
                            Locked = false,
                            Password = "$2a$11$eHOVdgXoOGbmti4okfvxKOep9REsYRub8niqy/N67iPhWmGdQRpgW",
                            RoleId = 4L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5529),
                            Username = "AND123456789"
                        },
                        new
                        {
                            Id = 3L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5536),
                            DepartmentId = 2L,
                            Email = "HVT123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Văn Thiên Hoàng",
                            Locked = false,
                            Password = "$2a$11$eHOVdgXoOGbmti4okfvxKOep9REsYRub8niqy/N67iPhWmGdQRpgW",
                            RoleId = 4L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5536),
                            Username = "HVT123456789"
                        },
                        new
                        {
                            Id = 4L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5542),
                            Email = "CNH123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Nguyễn Huy Cường",
                            Locked = false,
                            Password = "$2a$11$eHOVdgXoOGbmti4okfvxKOep9REsYRub8niqy/N67iPhWmGdQRpgW",
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5543),
                            Username = "CNH123456789"
                        },
                        new
                        {
                            Id = 5L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5549),
                            Email = "TNT123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Nguyễn Thanh Tùng",
                            Locked = false,
                            Password = "$2a$11$eHOVdgXoOGbmti4okfvxKOep9REsYRub8niqy/N67iPhWmGdQRpgW",
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5549),
                            Username = "TNT123456789"
                        },
                        new
                        {
                            Id = 6L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5555),
                            Email = "KBP123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Bùi Phú Khuyên",
                            Locked = false,
                            Password = "$2a$11$eHOVdgXoOGbmti4okfvxKOep9REsYRub8niqy/N67iPhWmGdQRpgW",
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5556),
                            Username = "KBP123456789"
                        },
                        new
                        {
                            Id = 7L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA1",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5562),
                            DepartmentId = 1L,
                            Email = "2180601452@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Nguyễn Tri Bão Thắng",
                            Locked = false,
                            Password = "$2a$11$eHOVdgXoOGbmti4okfvxKOep9REsYRub8niqy/N67iPhWmGdQRpgW",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5563),
                            Username = "2180601452"
                        },
                        new
                        {
                            Id = 8L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA1",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5586),
                            DepartmentId = 1L,
                            Email = "2180600307@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Huỳnh Thành Đô",
                            Locked = false,
                            Password = "$2a$11$eHOVdgXoOGbmti4okfvxKOep9REsYRub8niqy/N67iPhWmGdQRpgW",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5586),
                            Username = "2180600307"
                        },
                        new
                        {
                            Id = 9L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA1",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5641),
                            DepartmentId = 1L,
                            Email = "1911256118@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Nguyễn Thuận An",
                            Locked = false,
                            Password = "$2a$11$eHOVdgXoOGbmti4okfvxKOep9REsYRub8niqy/N67iPhWmGdQRpgW",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5642),
                            Username = "1911256118"
                        },
                        new
                        {
                            Id = 10L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA1",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5650),
                            DepartmentId = 2L,
                            Email = "2180603746@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Võ Thành Trung",
                            Locked = false,
                            Password = "$2a$11$eHOVdgXoOGbmti4okfvxKOep9REsYRub8niqy/N67iPhWmGdQRpgW",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5652),
                            Username = "2180603746"
                        },
                        new
                        {
                            Id = 11L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA1",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5658),
                            DepartmentId = 3L,
                            Email = "2180603747@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Lê Quang Vinh",
                            Locked = false,
                            Password = "$2a$11$eHOVdgXoOGbmti4okfvxKOep9REsYRub8niqy/N67iPhWmGdQRpgW",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5658),
                            Username = "2180603747"
                        },
                        new
                        {
                            Id = 12L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA2",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5665),
                            DepartmentId = 3L,
                            Email = "2180603748@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Trần Quang Tài",
                            Locked = false,
                            Password = "$2a$11$eHOVdgXoOGbmti4okfvxKOep9REsYRub8niqy/N67iPhWmGdQRpgW",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5666),
                            Username = "2180603748"
                        },
                        new
                        {
                            Id = 13L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            ClassCode = "21DTHA2",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5672),
                            DepartmentId = 3L,
                            Email = "2180603749@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Trần Văn Tuệ",
                            Locked = false,
                            Password = "$2a$11$eHOVdgXoOGbmti4okfvxKOep9REsYRub8niqy/N67iPhWmGdQRpgW",
                            RoleId = 3L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5673),
                            Username = "2180603749"
                        },
                        new
                        {
                            Id = 14L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5684),
                            DepartmentId = 2L,
                            Email = "TDTT123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Đặng Thị Thạch Thảo",
                            Locked = false,
                            Password = "$2a$11$eHOVdgXoOGbmti4okfvxKOep9REsYRub8niqy/N67iPhWmGdQRpgW",
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5684),
                            Username = "TDTT123456789"
                        },
                        new
                        {
                            Id = 15L,
                            AvatarUrl = "/static/medit/imgUser/avatar.jpg",
                            CreatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5691),
                            DepartmentId = 3L,
                            Email = "CHM123456789@hutech.edu.vn",
                            FailedLoginAttempts = 0,
                            FullName = "Hàn Minh Châu",
                            Locked = false,
                            Password = "$2a$11$eHOVdgXoOGbmti4okfvxKOep9REsYRub8niqy/N67iPhWmGdQRpgW",
                            RoleId = 2L,
                            UpdatedAt = new DateTime(2025, 6, 7, 6, 11, 14, 130, DateTimeKind.Utc).AddTicks(5691),
                            Username = "CHM123456789"
                        });
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.AISuggestion", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("AISuggestions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany("AISuggestions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Backup", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Calendar", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Calendars")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany("Calendars")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.CodeRun", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Submission", "Submission")
                        .WithMany("CodeRuns")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.CommitteeMember", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.DefenseCommittee", "Committee")
                        .WithMany("CommitteeMembers")
                        .HasForeignKey("CommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany("CommitteeMembers")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Committee");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Course", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Semester", "Semester")
                        .WithMany("Courses")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.DefenseCommittee", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.DefenseSchedule", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Meeting", "Meeting")
                        .WithMany("DefenseSchedules")
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("DefenseSchedules")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Discussion", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("Discussions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany("Discussions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Feedback", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany("Feedbacks")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Submission", "Submission")
                        .WithMany("Feedbacks")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.FeedbackSurvey", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany("FeedbackSurveys")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Grade", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.GradeCriteria", "Criteria")
                        .WithMany("Grades")
                        .HasForeignKey("CriteriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "GradedByUser")
                        .WithMany("GradedGrades")
                        .HasForeignKey("GradedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Grades")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("Grades")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Criteria");

                    b.Navigation("GradedByUser");

                    b.Navigation("Group");

                    b.Navigation("Project");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeAppeal", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Grade", "Grade")
                        .WithMany("GradeAppeals")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("GradeAppeals")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeCriteria", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Course", "Course")
                        .WithMany("GradeCriteria")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeLog", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Grade", "Grade")
                        .WithMany("GradeLogs")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany("GradeLogs")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeSchedule", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany("GradeSchedules")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("GradeSchedules")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeVersion", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Grade", "Grade")
                        .WithMany("GradeVersions")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Group", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany()
                        .HasForeignKey("LecturerId");

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithOne("Group")
                        .HasForeignKey("EduProject_TADProgrammer.Entities.Group", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GroupMember", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("GroupMembers")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("GroupMembers")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GroupRequest", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("GroupRequests")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("GroupRequests")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.LecturerCourses", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Course", "Course")
                        .WithMany("LecturerCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Lecturer")
                        .WithMany("LecturerCourses")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Log", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany("Logs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Meeting", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "CreatedByUser")
                        .WithMany("Meetings")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Meetings")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.MeetingRecord", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Meeting", "Meeting")
                        .WithMany("MeetingRecords")
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Notification", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Notifications")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.PeerReview", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("PeerReviews")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Reviewee")
                        .WithMany("PeerReviewsAsReviewee")
                        .HasForeignKey("RevieweeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Reviewer")
                        .WithMany("PeerReviewsAsReviewer")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Reviewee");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Project", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Course", "Course")
                        .WithMany("Projects")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.ProjectVersion", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("ProjectVersions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Question", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "CreatedByUser")
                        .WithMany("Questions")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("Questions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Resource", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "CreatedByUser")
                        .WithMany("Resources")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Resources")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("Resources")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("Group");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.RolePermission", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SkillAssessment", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("SkillAssessments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.StudentCourse", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Submission", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Submissions")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("Submissions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("Tasks")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.Task", "Task")
                        .WithMany("Submissions")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Group");

                    b.Navigation("Project");

                    b.Navigation("Student");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.SubmissionVersion", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Submission", "Submission")
                        .WithMany("SubmissionVersions")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Task", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Group", "Group")
                        .WithMany("Tasks")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.TimeTracking", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Project", "Project")
                        .WithMany("TimeTrackings")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduProject_TADProgrammer.Entities.User", "Student")
                        .WithMany("TimeTrackings")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.User", b =>
                {
                    b.HasOne("EduProject_TADProgrammer.Entities.Course", null)
                        .WithMany("Lecturers")
                        .HasForeignKey("CourseId");

                    b.HasOne("EduProject_TADProgrammer.Entities.Department", "Department")
                        .WithMany("HeadLecturers")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("EduProject_TADProgrammer.Entities.Group", null)
                        .WithMany("Students")
                        .HasForeignKey("GroupId");

                    b.HasOne("EduProject_TADProgrammer.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Course", b =>
                {
                    b.Navigation("GradeCriteria");

                    b.Navigation("LecturerCourses");

                    b.Navigation("Lecturers");

                    b.Navigation("Projects");

                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.DefenseCommittee", b =>
                {
                    b.Navigation("CommitteeMembers");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("HeadLecturers");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Grade", b =>
                {
                    b.Navigation("GradeAppeals");

                    b.Navigation("GradeLogs");

                    b.Navigation("GradeVersions");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.GradeCriteria", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Group", b =>
                {
                    b.Navigation("Calendars");

                    b.Navigation("Grades");

                    b.Navigation("GroupMembers");

                    b.Navigation("GroupRequests");

                    b.Navigation("Meetings");

                    b.Navigation("Notifications");

                    b.Navigation("PeerReviews");

                    b.Navigation("Resources");

                    b.Navigation("Students");

                    b.Navigation("Submissions");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Meeting", b =>
                {
                    b.Navigation("DefenseSchedules");

                    b.Navigation("MeetingRecords");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Project", b =>
                {
                    b.Navigation("AISuggestions");

                    b.Navigation("DefenseSchedules");

                    b.Navigation("Discussions");

                    b.Navigation("GradeSchedules");

                    b.Navigation("Grades");

                    b.Navigation("Group")
                        .IsRequired();

                    b.Navigation("ProjectVersions");

                    b.Navigation("Questions");

                    b.Navigation("Resources");

                    b.Navigation("Submissions");

                    b.Navigation("Tasks");

                    b.Navigation("TimeTrackings");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Semester", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Submission", b =>
                {
                    b.Navigation("CodeRuns");

                    b.Navigation("Feedbacks");

                    b.Navigation("SubmissionVersions");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.Task", b =>
                {
                    b.Navigation("Submissions");
                });

            modelBuilder.Entity("EduProject_TADProgrammer.Entities.User", b =>
                {
                    b.Navigation("AISuggestions");

                    b.Navigation("Calendars");

                    b.Navigation("CommitteeMembers");

                    b.Navigation("Discussions");

                    b.Navigation("FeedbackSurveys");

                    b.Navigation("Feedbacks");

                    b.Navigation("GradeAppeals");

                    b.Navigation("GradeLogs");

                    b.Navigation("GradeSchedules");

                    b.Navigation("GradedGrades");

                    b.Navigation("Grades");

                    b.Navigation("GroupMembers");

                    b.Navigation("GroupRequests");

                    b.Navigation("LecturerCourses");

                    b.Navigation("Logs");

                    b.Navigation("Meetings");

                    b.Navigation("Notifications");

                    b.Navigation("PeerReviewsAsReviewee");

                    b.Navigation("PeerReviewsAsReviewer");

                    b.Navigation("Questions");

                    b.Navigation("Resources");

                    b.Navigation("SkillAssessments");

                    b.Navigation("StudentCourses");

                    b.Navigation("Tasks");

                    b.Navigation("TimeTrackings");
                });
#pragma warning restore 612, 618
        }
    }
}
